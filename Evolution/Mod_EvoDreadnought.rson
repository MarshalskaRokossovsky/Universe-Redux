{
    "FileID": 573785173,
    "FileVersion": 8,
    "ViewPos.x": -450,
    "ViewPos.y": 153,
    "ScriptName": "Mod_EvoDreadnought",
    "ScriptFileOut": "C:\\Users\\DmitB\\Documents\\Фиксы\\Universe Redux Fixes\\Mods\\Evolution\\EvoDreadnought\\DATA\\Script\\Mod_EvoDreadnought.scr",
    "ScriptTextOut": "C:\\Users\\DmitB\\Documents\\Фиксы\\Universe Redux Fixes\\Mods\\Evolution\\EvoDreadnought\\DATA\\Script\\Mod_EvoDreadnought.txt",
    "LangDatIn": "",
    "LangDatOut": "",
    "MainDatIn": "",
    "MainDatOut": "",
    "CacheDatIn": "",
    "CacheDatOut": "",
    "ExportLangTxt": false,
    "ExportLangDat": false,
    "Visual.Objects": 
    [
        {
            "Groups": 
            [
                {
                    "Type": "TGroup",
                    "Name": "Dreadnought",
                    "Pos.x": 160,
                    "Pos.y": 510,
                    "Parent": -1,
                    "#": 12,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 0,
                    "CntShipMax": 0,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": false,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                },
                {
                    "Type": "TGroup",
                    "Name": "PlayerGroup",
                    "Pos.x": 420,
                    "Pos.y": 540,
                    "Parent": -1,
                    "#": 46,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 1,
                    "CntShipMax": 1,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": true,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                },
                {
                    "Type": "TGroup",
                    "Name": "PirateGalleon",
                    "Pos.x": 420,
                    "Pos.y": 240,
                    "Parent": -1,
                    "#": 55,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 0,
                    "CntShipMax": 0,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": false,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                },
                {
                    "Type": "TGroup",
                    "Name": "PirateFrigate",
                    "Pos.x": 420,
                    "Pos.y": 380,
                    "Parent": -1,
                    "#": 66,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 0,
                    "CntShipMax": 0,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": false,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                },
                {
                    "Type": "TGroup",
                    "Name": "GroupFollow",
                    "Pos.x": 470,
                    "Pos.y": 610,
                    "Parent": -1,
                    "#": 76,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 0,
                    "CntShipMax": 0,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": false,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                }
            ],
            "Operations": 
            [
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 580,
                    "Pos.y": 340,
                    "Parent": -1,
                    "#": 3,
                    "Code.Type": "Global",
                    "Code": 
                    [
                        "GRun();"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 600,
                    "Pos.y": 340,
                    "Parent": -1,
                    "#": 4,
                    "Code.Type": "Init",
                    "Code": 
                    [
                        "//Вешаем на игрока инфошку для подсветки числа батарейных орудий на многопушечных кораблях",
                        "ShipAddCustomShipInfo(Player(), 'GunBatteryLabelsSwitcher');",
                        "",
                        "//Запоминаем текущий ГТУ, который часто используется в различных функциях",
                        "GTL = GalaxyTechLevel();",
                        "//Также запоминаем общий уровень сложности, который будет использован в функции усиления кораблей",
                        "GeneralDiffLevel = GalaxyDiffLevels() / 50;",
                        "",
                        "//Выставляем маркер о том, что был подключён мод ShuDomiks",
                        "if(BlockExist('Script.Mod_ShuDomiks')) ShuDomiksInit = 1;",
                        "if(BlockExist('Script.Mod_ShuBounty')) PolBountyInit = 1;",
                        "",
                        "//Усиливаем доминаторских боссов",
                        "cur_ship = Blazer();",
                        "if(cur_ship)",
                        "{",
                        "    dwd0 = ShipItems(cur_ship, 0);",
                        "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "    //Вешаем Блазеру бонус на силу всех типов орудий и усиливаем броню",
                        "    tint = (2 * GeneralDiffLevel) + 10;",
                        "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
                        "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
                        "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
                        "    SetEquipmentStats(dwd0, GetEquipmentStats(dwd0, 0) + (GeneralDiffLevel + 5), 0);",
                        "    //Увеличиваем размер корпуса Блазера",
                        "    ItemSize(dwd0, round(ItemSize(dwd0) * (0.8 + (0.4 * GeneralDiffLevel))));",
                        "    HullHP(dwd0, ItemSize(dwd0));",
                        "",
                        "    //Также увеличиваем число его залпов",
                        "    ShipSpecialBonuses(cur_ship, bonAttacks, 2);",
                        "}",
                        "cur_ship = Keller();",
                        "if(cur_ship)",
                        "{",
                        "    dwd0 = ShipItems(cur_ship, 0);",
                        "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "    //Вешаем Келлеру бонус на эффективность дроида и ГЗП",
                        "    tint = 10 * GeneralDiffLevel + 50;",
                        "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonDroid'), tint);",
                        "    tint = 2 * (GeneralDiffLevel / 2) + 10;",
                        "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
                        "    //Увеличиваем размер корпуса Келлера",
                        "    ItemSize(dwd0, round(ItemSize(dwd0) * (1.0 + (0.25 * GeneralDiffLevel))));",
                        "    HullHP(dwd0, ItemSize(dwd0));",
                        "",
                        "    //Также увеличиваем число его залпов",
                        "    ShipSpecialBonuses(cur_ship, bonAttacks, 1);",
                        "}",
                        "cur_ship = Terron();",
                        "if(cur_ship)",
                        "{",
                        "    dwd0 = ShipItems(cur_ship, 0);",
                        "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "    //Вешаем Террону бонус на дальность стрельбы и увеличиваем броню",
                        "    tint = 3 * GeneralDiffLevel + 15;",
                        "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "    SetEquipmentStats(dwd0, GetEquipmentStats(dwd0, 0) + (GeneralDiffLevel + 15), 0);",
                        "    //Увеличиваем размер корпуса Террона",
                        "    ItemSize(dwd0, round(ItemSize(dwd0) * (2.0 + (0.8 * GeneralDiffLevel))));",
                        "    HullHP(dwd0, ItemSize(dwd0));",
                        "",
                        "    //Также увеличиваем число его залпов",
                        "    ShipSpecialBonuses(cur_ship, bonAttacks, 1);",
                        "}",
                        "",
                        "//Запускаем таймеры до начала появления у пиратов фрегатов и галеонов",
                        "FrigateSpawnCount = CurTurn() + Rnd(136, 165);",
                        "GalleonSpawnCount = CurTurn() + Rnd(261, 303);",
                        "GGalleonArray[0] = 0;",
                        "",
                        "//Определяем, сколько дредноутов должно появиться в Галактике на старте игры (зависит от уровня сложности)",
                        "temp_count = round(PortionInDiapason(GalaxyDiffLevels(), 50, 500, 4, 0));",
                        "",
                        "//Делаем стартовый перебор секторов для размещения дредноутов (максимум 6 дредноутов на Галактику)",
                        "GDreadnoughtArray[0] = 0;",
                        "if(temp_count > 0)",
                        "{",
                        "    for(i = 0; i < GalaxySectors(); i = i + 1)",
                        "    {",
                        "        ArrayClear(temp_array);",
                        "        mark = 0;",
                        "        s = GalaxySectors(i);",
                        "        //Пропускаем скрытый пиратский сектор и стартовый сектор игрока",
                        "        if(s == StarToCon(PlanetToStar(PlanetPirateClan()))) continue;",
                        "        if(s == StarToCon(PlanetToStar(GetShipHomePlanet(Player())))) continue;",
                        "        for(j = 0; j < ConStars(s); j = j + 1)",
                        "        {",
                        "            cur_star = ConStar(s, j);",
                        "            //Пропускаем не коалиционные системы",
                        "            if(StarOwner(cur_star) != 0) continue;",
                        "            mark2 = 1;",
                        "            for(tint2 = 1; tint2 < ArrayDim(GDreadnoughtArray); tint2 = tint2 + 1)",
                        "            {",
                        "                if(Id(s) == GDreadnoughtArray[tint2])",
                        "                {",
                        "                    mark2 = 0;",
                        "                    break;",
                        "                }",
                        "            }",
                        "            if(!mark2) continue;",
                        "            //Заносим все подходящие системы во временный массив",
                        "            ArrayAdd(temp_array, cur_star);",
                        "            mark = 1;",
                        "        }",
                        "        //Если нашли в секторе хоть одну коалиционную систему, то выбираем случайную из возможных",
                        "        if(mark)",
                        "        {",
                        "            //После чего ищем самую развитую планету (по её общему ТУ) в выбранной системе",
                        "            cur_star = temp_array[Rnd(1, ArrayDim(temp_array) - 1)];",
                        "            mark = 0;",
                        "            for(j = 0; j < StarPlanets(cur_star); j = j + 1)",
                        "            {",
                        "                k = StarPlanets(cur_star, j);",
                        "                if(PlanetOwner(k) > 5) continue;",
                        "                mark2 = PlanetInventionLevel(k, 7);",
                        "                if(mark2 > mark)",
                        "                {",
                        "                    mark = mark2;",
                        "                    cur_planet = k;",
                        "                }",
                        "                //Добавляем рандомизацию планеты в случае, если ТУ планет совпадает",
                        "                else if(mark2 == mark)",
                        "                {",
                        "                    if(Rnd(1, 100) <= 50) cur_planet = k;",
                        "                }",
                        "            }",
                        "            //Спавним дредноут на выбранной планете",
                        "            dwd0 = g_SpawnDreadnought(cur_planet, 800 - GalaxyDiffLevels());",
                        "            //Вводим ебаный костыль по занесению дредноутов в скрипт на первом ходу, т.к. инициализирует свои группы позже иниткода",
                        "            ArrayAdd(fucking_crutch, Id(dwd0));",
                        "            //Прокручиваем общий счётчик дредноутов в Галактике",
                        "            GDreadnoughtArray[0] = 0 + GDreadnoughtArray[0] + 1;",
                        "            //И заносим Id текущего сектора в список секторов с дредноутом",
                        "            GDreadnoughtArray[GDreadnoughtArray[0]] = Id(s);",
                        "            temp_count = temp_count - 1;",
                        "        }",
                        "        //Проверяем, не является ли этот сектор последним в списке и если да, то гарантированно завершаем while",
                        "        if(i == GalaxySectors() - 1)",
                        "        {",
                        "            if(temp_count > 0) temp_count = 0;",
                        "        }",
                        "        if(temp_count <= 0) break;",
                        "    }",
                        "}",
                        "//Запускаем таймер до следующей проверки на спавн дредноута",
                        "DreadnoughtSpawnCount = CurTurn() + Rnd(328, 453);",
                        "",
                        "//Функция для спавна дредноута",
                        "function g_SpawnDreadnought(dword planet, int capital)",
                        "{",
                        "    dword ship = BuyBigWarrior(planet, capital);",
                        "",
                        "    ShipType(ship, 'Dreadnought');",
                        "",
                        "    int own = ShipOwner(ship);",
                        "    dword item = ShipItems(ship, 0);",
                        "    int item_level = ItemLevel(item);",
                        "",
                        "",
                        "",
                        "    if(own == 0)",
                        "    {",
                        "        SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_DreadnoughtMaloc'), item);",
                        "        //Малокам даём дополнительную броню, мощность осколочных пушек и плюс к точности",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "        tint = round((2.0 * GeneralDiffLevel) + (2.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
                        "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
                        "        tint = round((2.0 * GeneralDiffLevel) + (2.0 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "        ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 1);",
                        "    }",
                        "    else if(own == 1)",
                        "    {",
                        "        SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_DreadnoughtPeleng'), item);",
                        "        //Пеленгам даём дополнительную скорость, дальность стрельбы и плюс к манёвренности",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "        tint = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(item_level, 1, 8, 1, 10));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "        tint = (20 * GeneralDiffLevel / 2) + (20 * PortionInDiapason(item_level, 1, 8, 1, 10));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonSpeed'), tint);",
                        "        ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 1);",
                        "    }",
                        "    else if(own == 2)",
                        "    {",
                        "        SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_DreadnoughtPeople'), item);",
                        "        //Людям даём дополнительный урон для всех видов орудий и плюс к технике",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
                        "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "        ShipSkill(ship, 'Technical', ShipSkill(ship, 'Technical') + 2);",
                        "    }",
                        "    else if(own == 3)",
                        "    {",
                        "        SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_DreadnoughtFei'), item);",
                        "        //Фэянам даём дополнительный урон для энергетических орудий, дальности и плюс к технике",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "        tint = round((2.0 * GeneralDiffLevel) + (2.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
                        "        tint = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(item_level, 1, 8, 1, 10));",
                        "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "        ShipSkill(ship, 'Technical', ShipSkill(ship, 'Technical') + 2);",
                        "        ShipImproveItems(ship,Rnd(2,4) * GalaxyTechLevel());",
                        "",
                        "        u = 0;",
                        "        while(1) {",
                        "            u = u + 1;",
                        "            if(u == 6) break;",
                        "",
                        "            ItemLevel(ShipEqInSlot(ship,Rnd(t_Hull,t_DefGenerator)),min(GalaxyTechLevel(),8));",
                        "        }",
                        "    }",
                        "    else if(own == 4)",
                        "    {",
                        "        SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_DreadnoughtGaal'), item);",
                        "        //Гаальцам даём повышенную эффективность дроида, ГЗП и плюс к манёвренности",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "        tint = round((7.5 * GeneralDiffLevel) + (7.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonDroid'), tint);",
                        "        tint = round((1.75 * GeneralDiffLevel) + (1.75 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
                        "        ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 1);",
                        "",
                        "        if(~ShipFindCustomShipInfoByType(ship,'GaalNarcotics')) ShipAddCustomShipInfo(ship,'GaalNarcotics','NoShow');",
                        "    }",
                        "",
                        "    //Значительно снижаем получаемый от астероидов урон",
                        "    ShipSpecialBonuses(ship, bonResistAsteroid, 50);",
                        "",
                        "    //Задаём размер корпуса дредноута в зависимости от общей сложности и текущего ТУ",
                        "    ItemSize(item, round((0.00085 * GalaxyDiffLevels() + 1) * item_level * 1500) + Rnd(-125, 200));",
                        "    //На всякий случай, устанавливаем минимальный размер корпуса в 4500",
                        "    if(ItemSize(item) < 4500) ItemSize(item, 4500);",
                        "    HullHP(item, ItemSize(item));",
                        "",
                        "    //Запрещаем дредноутам менять корпус, а то там начинается вакханалия невиданных размеров и спецакрины слетают",
                        "    NoDropItem(item, 1);",
                        "    Chameleon(ship);",
                        "",
                        "    ShipMoney(ship,ShipMoney(ship) + GalaxyMoney(4,4)*20);",
                        "    ShipRefit(ship);",
                        "    ShipRefit(ship);",
                        "    ShipRefit(ship);",
                        "    ShipRefit(ship);",
                        "",
                        "    ShipSpecialBonuses(ship,20);",
                        "",
                        "    //Вешаем на кораблик инфошку ремкоманд",
                        "    ShipAddCustomShipInfo(ship,'Remkom');",
                        "    //Я подумал и решил дать две инфошки, потому что крутой дредноут и большой",
                        "    ShipAddCustomShipInfo(ship,'Remkom');",
                        "",
                        "    //Добавляем артиллерию",
                        "    if(Rnd(1,2) == 1) ShipAddCustomShipInfo(ship,'Artillery');",
                        "    //Добавляем ангары с истребителями",
                        "    if(Rnd(1,6) == 6) {",
                        "        ShipAddCustomShipInfo(ship,'Astroship');",
                        "        if(CurTurn() > 301) int u = g_CreateFollowGroup(planet,ship,1);",
                        "        if(CurTurn() > 301) ShipAddCustomShipInfo(ship,'DefendedByGroup','NoShow',u,u);",
                        "    }",
                        "    else {",
                        "        if(CurTurn() > 301) u = g_CreateFollowGroup(planet,ship,1);",
                        "        if(CurTurn() > 301) ShipAddCustomShipInfo(ship,'DefendedByGroup','NoShow',u,u);",
                        "        if(Rnd(0,1)) ShipAddCustomShipInfo(ship,'Shields');",
                        "    }",
                        "",
                        "    ShipSpecialBonuses(ship,bonSlotArt,20);",
                        "",
                        "    //Выдаём ПРО",
                        "    item = CreateArt(t_ArtPDTurret, own);",
                        "    AddItemToShip(ship, item);",
                        "    ItemIsInUse(item, ship, 1);",
                        "    NoDropItem(item,1);",
                        "    //Выдаём Абальдо и Эйкахэвн, если подключён мод",
                        "    if(CurrentMods('Reflection\\RefArts')) {",
                        "        item = CreateCustomArt('Abaldo_Art',110,3000, own);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "        NoDropItem(item,1);",
                        "        item = CreateCustomArt('Eikaheaven_Art',110,3000, own);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "        //Набиваем полную боеукладку Эйкахэвну",
                        "        CustomArtData(item,1,45);",
                        "        NoDropItem(item,1);",
                        "        if(CurrentMods('Tweaks\\ExtraArtSlots')) {",
                        "            item = CreateCustomArt('Fa_Aeron_Art',110,3000, own);",
                        "            AddItemToShip(ship, item);",
                        "            ItemIsInUse(item, ship, 1);",
                        "            NoDropItem(item,1);",
                        "            item = CreateCustomArt('Length_Art',110,3000, own);",
                        "            AddItemToShip(ship, item);",
                        "            ItemIsInUse(item, ship, 1);",
                        "            NoDropItem(item,1);",
                        "            item = CreateCustomArt('HealingAura_Art',110,3000, own);",
                        "            AddItemToShip(ship, item);",
                        "            ItemIsInUse(item, ship, 1);",
                        "            NoDropItem(item,1);",
                        "            item = CreateCustomArt('Detsell_Art',110,3000, own);",
                        "            AddItemToShip(ship, item);",
                        "            ItemIsInUse(item, ship, 1);",
                        "            NoDropItem(item,1);",
                        "            item = CreateCustomArt('Destabilizator_Art',110,3000, own);",
                        "            AddItemToShip(ship, item);",
                        "            ItemIsInUse(item, ship, 1);",
                        "            NoDropItem(item,1);",
                        "        }",
                        "    }",
                        "    if(CurrentMods('Tweaks\\ExtraArtSlots') || !CurrentMods('Reflection\\RefArts')) {",
                        "        //Выдаём радиолокационные системы",
                        "        item = CreateArt(t_ArtefactRadar, own);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "        NoDropItem(item,1);",
                        "        item = CreateArt(t_ArtefactScaner, own);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "        NoDropItem(item,1);",
                        "        item = CreateArt(t_ArtefactAnalyzer, own);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "        NoDropItem(item,1);",
                        "    }",
                        "",
                        "    //Гарантированно выдаём дредноуту сборочного дроида и ГЗП",
                        "    if(ShipEqInSlot(ship, t_RepairRobot)) {",
                        "        FreeItem(GetItemFromShip(ship,ShipEqInSlot(ship, t_RepairRobot)));",
                        "    }",
                        "    //Спавним ремдроида",
                        "    if(CurrentMods('Revolution\\RevAcryn')) {",
                        "        SpawnDroid(ship,GTL,own);",
                        "    }",
                        "    else {",
                        "        item = CreateEquipment(t_RepairRobot, Rnd(50, 120), GTL, own);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "    }",
                        "",
                        "    if(!ShipEqInSlot(ship, t_DefGenerator))",
                        "    {",
                        "        item = CreateEquipment(t_DefGenerator, Rnd(50, 120), GTL, own);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "    }",
                        "    ShipImproveItems(ship, Rnd(12, 25));",
                        "",
                        "    //Проверка на \"Перевёртыши\" и т.п.",
                        "    //",
                        "    if(~EqModule(ShipEqInSlot(ship, t_Hull))) {",
                        "        if(int(CT('MicroModules.'+BonusNumInCfg(EqModule(ShipEqInSlot(ship, t_Hull)))+'.bonExtraAkrinEff')) <= -50) {",
                        "            EqModule(ShipEqInSlot(ship, t_Hull),-1);",
                        "            EqModule(ShipEqInSlot(ship, t_Hull),BonusNumInCfg('3'));",
                        "        }",
                        "        if(int(CT('MicroModules.'+BonusNumInCfg(EqModule(ShipEqInSlot(ship, t_Hull)))+'.bonExtraAkrinPenalty')) > 50) {",
                        "            EqModule(ShipEqInSlot(ship, t_Hull),-1);",
                        "            EqModule(ShipEqInSlot(ship, t_Hull),BonusNumInCfg('3'));",
                        "        }",
                        "    }",
                        "",
                        "    //Увеличиваем число дополнительных залпов всех орудий за ход (будет делать по 6 залпов из каждой пушки)",
                        "    ShipSpecialBonuses(ship, bonAttacks, 2);",
                        "    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по небольшим судам",
                        "    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 2);",
                        "",
                        "    item = ShipAddCustomShipInfo(ship, 'Dreadnought_Infos');",
                        "    //Запоминаем таймер до проведения следующего патруля",
                        "    ShipCustomShipInfoData(0, item, 1, 0);",
                        "    //Выставляем маркер текущего местонахождения дредноута",
                        "    ShipCustomShipInfoData(0, item, 2, Id(PlanetToStar(planet)));",
                        "    //Запоминаем домашнюю систему дредноута",
                        "    ShipCustomShipInfoTextData(0, item, 2, (Id(PlanetToStar(planet)) - 1));",
                        "    //Запоминаем маркер текущего состояния дредноута",
                        "    ShipCustomShipInfoTextData(0, item, 3, 'AtHome');",
                        "",
                        "    ShipAddCustomShipInfo(ship,'DreadnoughtTargeting','NoShow');",
                        "",
                        "    //Иначе будет странно",
                        "    ShipRaiseRank(ship,(Rnd(4,6)));",
                        "",
                        "    //А вы точно хотите напасть на ВОТ ЭТУ МАХИНУ РАЗМЕРОМ С ПЛАНЕТУ?",
                        "    NoTargetToShip(ship,3);",
                        "",
                        "    result = ship;",
                        "}",
                        "",
                        "//Функция для спавна корветов",
                        "function g_SpawnCorvette(dword ship, dword planet, int capital)",
                        "{",
                        "    if(!ship)",
                        "    {",
                        "        ship = BuyPirate(planet, capital);",
                        "        ShipSubType(ship, 2);",
                        "    }",
                        "    ShipType(ship, 'PirateCorvette');",
                        "",
                        "    dword item = ShipItems(ship, 0);",
                        "    int item_level = ItemLevel(item);",
                        "",
                        "    HullSeries(item, -1);",
                        "",
                        "    //Даём корветам дополнительную дальность стрельбы, а также мощность энергетических и ракетных орудий",
                        "    int bon_int;",
                        "    SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_CorvettePirateClan'), item);",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "    bon_int = round((0.8 * GeneralDiffLevel) + (0.8 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), bon_int);",
                        "    bon_int = round((1.0 * GeneralDiffLevel) + (1.0 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWMissile'), bon_int);",
                        "    bon_int = (3.0 * GeneralDiffLevel) + (3.0 * PortionInDiapason(item_level, 1, 8, 1, 10));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWRadius'), bon_int);",
                        "    bon_int = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonDef'), bon_int);",
                        "    ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 2);",
                        "",
                        "    //Значительно снижаем получаемый от астероидов урон",
                        "    ShipSpecialBonuses(ship, bonResistAsteroid, 30);",
                        "",
                        "    //Задаём размер корпуса корвета в зависимости от сложности пиратов и текущего ТУ",
                        "    ItemSize(item, round((0.00085 * GalaxyDiffLevels(0) + 1) * item_level * 475) + Rnd(-45, 65));",
                        "    //На всякий случай, устанавливаем минимальный размер корпуса в 750",
                        "    if(ItemSize(item) < 750) ItemSize(item, 750);",
                        "    //HullHP(item, ItemSize(item)); //У пиратов выравнивание HP происходит в конце функции общего перебора",
                        "    //Запрещаем корветам менять корпус, а то там начинается вакханалия невиданных размеров и спецакрины слетают",
                        "    NoDropItem(item, 1);",
                        "    Chameleon(ship);",
                        "",
                        "    ShipRefit(ship);",
                        "    ShipRefit(ship);",
                        "",
                        "    ShipSpecialBonuses(ship,bonSlotArt,20);",
                        "",
                        "    //Выдаём ПРО",
                        "    item = CreateArt(t_ArtMissileDef, PirateClan);",
                        "    AddItemToShip(ship, item);",
                        "    ItemIsInUse(item, ship, 1);",
                        "    NoDropItem(item,1);",
                        "",
                        "    //Добавляем в лут дополнительную гарантированную ЭМП-бомбу",
                        "    if(CurrentMods('Expansion\\ExpArts')) {",
                        "        item = CreateQuestItem('EMP_bomb');",
                        "        ItemOwner(item, 7);",
                        "        //Записываем в бомбу задержку таймера",
                        "        UselessItemData(item, 1, RndObject(1, 3, ship));",
                        "        //Устанавливаем таймер в положение выкл.",
                        "        UselessItemData(item, 2, -2);",
                        "        SetName(item, Name(item) + CT('Script.Mod_ExpArts.BombWithTimer'));",
                        "        UselessItemText(item, CT('UselessItems.' + EquipmentImageName(item) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
                        "",
                        "        //Если выпал шанс, то ставим на бомбу дополнительно ещё и контактный взрыватель",
                        "        UselessItemData(item, 2, -3);",
                        "        SetName(item, Format(Name(item), CT('Script.Mod_ExpArts.TheBomb') + CT('Script.Mod_ExpArts.BombWithTimer'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
                        "",
                        "        ItemSize(item, ItemSize(item) + RndObject(-2, 2, ship));",
                        "        ItemCost(item, ItemCost(item) + RndObject(-297, 303, ship));",
                        "        ShipAddDropItem(ship, item);",
                        "    }",
                        "",
                        "    //Гарантированно выдаём корвету дроида и ГЗП",
                        "    if(!ShipEqInSlot(ship, t_RepairRobot))",
                        "    {",
                        "        item = CreateEquipment(t_RepairRobot, Rnd(40, 60), GTL, 7);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "    }",
                        "    if(!ShipEqInSlot(ship, t_DefGenerator))",
                        "    {",
                        "        item = CreateEquipment(t_DefGenerator, Rnd(40, 60), GTL, 7);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "    }",
                        "    ShipImproveItems(ship, Rnd(4, 8));",
                        "",
                        "    //Чтобы эти гении не воевали друг с другом, ибо что-то мне подсказывает, что если у них организовали шкалу",
                        "    //Рачехана, то любому любителю похрабить бы вставили смачного пропеллера за атаку собственности общака",
                        "    //Которой априори является такая махина, которую только на общак и строить",
                        "    NoTargetToShip(ship,3);",
                        "",
                        "    ShipAddCustomShipInfo(ship,'CorvetteDeflectors','NoShow');",
                        "",
                        "    //Иначе будет странно",
                        "    RaisePirateRank(ship,Rnd(1,3));",
                        "",
                        "    result = ship;",
                        "}",
                        "",
                        "//Функция для спавна фрегатов",
                        "function g_SpawnFrigate(dword ship, dword planet, int capital)",
                        "{",
                        "    if(!ship)",
                        "    {",
                        "        ship = BuyPirate(planet, capital);",
                        "        ShipSubType(ship, 3);",
                        "    }",
                        "    ShipType(ship, 'PirateFrigate');",
                        "",
                        "    dword item = ShipItems(ship, 0);",
                        "    int item_level = ItemLevel(item);",
                        "",
                        "    HullSeries(item, -1);",
                        "",
                        "    //Даём фрегатам дополнительную дальность стрельбы, а также мощность всех типов орудий",
                        "    int bon_int;",
                        "    SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_FrigatePirateClan'), item);",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "    bon_int = round((1.2 * GeneralDiffLevel) + (1.2 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), bon_int);",
                        "    bon_int = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), bon_int);",
                        "    bon_int = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWMissile'), bon_int);",
                        "    bon_int = (4.0 * GeneralDiffLevel) + (4.0 * PortionInDiapason(item_level, 1, 8, 1, 10));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWRadius'), bon_int);",
                        "    bon_int = round((0.4 * GeneralDiffLevel) + (0.4 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), bon_int);",
                        "",
                        "    //Значительно снижаем получаемый от астероидов урон",
                        "    ShipSpecialBonuses(ship, bonResistAsteroid, 40);",
                        "",
                        "    //Задаём размер корпуса фрегата в зависимости от сложности пиратов и текущего ТУ",
                        "    ItemSize(item, round((0.00085 * GalaxyDiffLevels(0) + 1) * item_level * 625) + Rnd(-60, 100));",
                        "",
                        "    //На всякий случай, устанавливаем минимальный размер корпуса в 1750",
                        "    if(ItemSize(item) < 1750) ItemSize(item, 1750);",
                        "",
                        "    //HullHP(item, ItemSize(item)); //У пиратов выравнивание HP происходит в конце функции общего перебора",
                        "    //Запрещаем фрегатам менять корпус, а то там начинается вакханалия невиданных размеров и спецакрины слетают",
                        "    NoDropItem(item, 1);",
                        "    Chameleon(ship);",
                        "",
                        "    ShipRefit(ship);",
                        "    ShipRefit(ship);",
                        "    ShipRefit(ship);",
                        "",
                        "    ShipSpecialBonuses(ship,bonSlotArt,20);",
                        "",
                        "    //Добавляем в лут дополнительную гарантированную ЭМП-бомбу и Оглушайку",
                        "    if(CurrentMods('Expansion\\ExpArts')) {",
                        "        item = CreateQuestItem('EMP_bomb');",
                        "        ItemOwner(item, 7);",
                        "        //Записываем в бомбу задержку таймера",
                        "        UselessItemData(item, 1, RndObject(1, 3, ship));",
                        "        //Устанавливаем таймер в положение выкл.",
                        "        UselessItemData(item, 2, -2);",
                        "        SetName(item, Name(item) + CT('Script.Mod_ExpArts.BombWithTimer'));",
                        "        UselessItemText(item, CT('UselessItems.' + EquipmentImageName(item) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
                        "",
                        "        //Если выпал шанс, то ставим на бомбу дополнительно ещё и контактный взрыватель",
                        "        UselessItemData(item, 2, -3);",
                        "        SetName(item, Format(Name(item), CT('Script.Mod_ExpArts.TheBomb') + CT('Script.Mod_ExpArts.BombWithTimer'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
                        "",
                        "        ItemSize(item, ItemSize(item) + RndObject(-2, 2, ship));",
                        "        ItemCost(item, ItemCost(item) + RndObject(-297, 303, ship));",
                        "        ShipAddDropItem(ship, item);",
                        "    }",
                        "    //Добавляем в лут дополнительную гарантированную ЭМП-бомбу",
                        "    if(CurrentMods('Expansion\\ExpArts')) {",
                        "        item = CreateQuestItem('Stun_bomb');",
                        "        ItemOwner(item, 7);",
                        "        //Записываем в бомбу задержку таймера",
                        "        UselessItemData(item, 1, RndObject(1, 3, ship));",
                        "        //Устанавливаем таймер в положение выкл.",
                        "        UselessItemData(item, 2, -2);",
                        "        SetName(item, Name(item) + CT('Script.Mod_ExpArts.BombWithTimer'));",
                        "        UselessItemText(item, CT('UselessItems.' + EquipmentImageName(item) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
                        "",
                        "        //Если выпал шанс, то ставим на бомбу дополнительно ещё и контактный взрыватель",
                        "        UselessItemData(item, 2, -3);",
                        "        SetName(item, Format(Name(item), CT('Script.Mod_ExpArts.TheBomb') + CT('Script.Mod_ExpArts.BombWithTimer'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
                        "",
                        "        ItemSize(item, ItemSize(item) + RndObject(-2, 2, ship));",
                        "        ItemCost(item, ItemCost(item) + RndObject(-297, 303, ship));",
                        "        ShipAddDropItem(ship, item);",
                        "    }",
                        "",
                        "    //Выдаём ПРО",
                        "    item = CreateArt(t_ArtMissileDef, PirateClan);",
                        "    AddItemToShip(ship, item);",
                        "    ItemIsInUse(item, ship, 1);",
                        "    NoDropItem(item,1);",
                        "",
                        "    //Гарантированно выдаём фрегату дроида и ГЗП",
                        "    if(!ShipEqInSlot(ship, t_RepairRobot))",
                        "    {",
                        "        item = CreateEquipment(t_RepairRobot, Rnd(45, 90), GTL, 7);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "    }",
                        "    if(!ShipEqInSlot(ship, t_DefGenerator))",
                        "    {",
                        "        item = CreateEquipment(t_DefGenerator, Rnd(45, 90), GTL, 7);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "    }",
                        "    ShipImproveItems(ship, Rnd(7, 14));",
                        "",
                        "    //Чтобы эти гении не воевали друг с другом, ибо что-то мне подсказывает, что если у них организовали шкалу",
                        "    //Рачехана, то любому любителю похрабить бы вставили смачного пропеллера за атаку собственности общака",
                        "    //Которой априори является такая махина, которую только на общак и строить",
                        "    NoTargetToShip(ship,3);",
                        "",
                        "    ShipAddCustomShipInfo(ship,'FrigateMassFire','NoShow');",
                        "",
                        "    //Иначе будет странно",
                        "    RaisePirateRank(ship,Rnd(2,4));",
                        "",
                        "    result = ship;",
                        "}",
                        "",
                        "//Функция для спавна галеонов",
                        "function g_SpawnGalleon(dword ship, dword planet, int capital)",
                        "{",
                        "    if(!ship)",
                        "    {",
                        "        ship = BuyPirate(planet, capital);",
                        "        ShipSubType(ship, 1);",
                        "    }",
                        "    ShipType(ship, 'PirateGalleon');",
                        "",
                        "    dword item = ShipItems(ship, 0);",
                        "    int item_level = ItemLevel(item);",
                        "",
                        "    HullSeries(item, -1);",
                        "",
                        "    //Даём галеонам дополнительную броню, а также мощность всех типов орудий и эффективность дроида",
                        "    int bon_int;",
                        "    SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_GalleonPirateClan'), item);",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "    bon_int = round((1.2 * GeneralDiffLevel) + (1.2 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), bon_int);",
                        "    bon_int = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), bon_int);",
                        "    bon_int = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWMissile'), bon_int);",
                        "    bon_int = (4.0 * GeneralDiffLevel) + (4.0 * PortionInDiapason(item_level, 1, 8, 1, 10));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWRadius'), bon_int);",
                        "    bon_int = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), bon_int);",
                        "    bon_int = (4.0 * GeneralDiffLevel) + (4.0 * PortionInDiapason(item_level, 1, 8, 1, 10));",
                        "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonDroid'), bon_int);",
                        "",
                        "    //Значительно снижаем получаемый от астероидов урон",
                        "    ShipSpecialBonuses(ship, bonResistAsteroid, 50);",
                        "",
                        "    //Задаём размер корпуса галеона в зависимости от сложности пиратов и текущего ТУ",
                        "    ItemSize(item, round((0.00085 * GalaxyDiffLevels(0) + 1) * item_level * 1050) + Rnd(-75, 125));",
                        "    //На всякий случай, устанавливаем минимальный размер корпуса в 3000",
                        "    if(ItemSize(item) < 3000) ItemSize(item, 3000);",
                        "",
                        "    //HullHP(item, ItemSize(item)); //У пиратов выравнивание HP происходит в конце функции общего перебора",
                        "    //Запрещаем галеонам менять корпус, а то там начинается вакханалия невиданных размеров и спецакрины слетают",
                        "    NoDropItem(item, 1);",
                        "    Chameleon(ship);",
                        "",
                        "    ShipRefit(ship);",
                        "    ShipRefit(ship);",
                        "    ShipRefit(ship);",
                        "    ShipRefit(ship);",
                        "",
                        "    ShipSpecialBonuses(ship,bonSlotArt,20);",
                        "",
                        "    //Добавляем в лут дополнительную гарантированно 2 кварки и 2 ЭМП",
                        "    if(CurrentMods('Expansion\\ExpArts')) {",
                        "        item = CreateQuestItem('EMP_bomb');",
                        "        ItemOwner(item, 7);",
                        "        //Записываем в бомбу задержку таймера",
                        "        UselessItemData(item, 1, RndObject(1, 3, ship));",
                        "        //Устанавливаем таймер в положение выкл.",
                        "        UselessItemData(item, 2, -2);",
                        "        SetName(item, Name(item) + CT('Script.Mod_ExpArts.BombWithTimer'));",
                        "        UselessItemText(item, CT('UselessItems.' + EquipmentImageName(item) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
                        "",
                        "        //Если выпал шанс, то ставим на бомбу дополнительно ещё и контактный взрыватель",
                        "        UselessItemData(item, 2, -3);",
                        "        SetName(item, Format(Name(item), CT('Script.Mod_ExpArts.TheBomb') + CT('Script.Mod_ExpArts.BombWithTimer'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
                        "",
                        "        ItemSize(item, ItemSize(item) + RndObject(-2, 2, ship));",
                        "        ItemCost(item, ItemCost(item) + RndObject(-297, 303, ship));",
                        "        ShipAddDropItem(ship, item);",
                        "        item = CreateQuestItem('EMP_bomb');",
                        "        ItemOwner(item, 7);",
                        "        //Записываем в бомбу задержку таймера",
                        "        UselessItemData(item, 1, RndObject(1, 3, ship));",
                        "        //Устанавливаем таймер в положение выкл.",
                        "        UselessItemData(item, 2, -2);",
                        "        SetName(item, Name(item) + CT('Script.Mod_ExpArts.BombWithTimer'));",
                        "        UselessItemText(item, CT('UselessItems.' + EquipmentImageName(item) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
                        "",
                        "        //Если выпал шанс, то ставим на бомбу дополнительно ещё и контактный взрыватель",
                        "        UselessItemData(item, 2, -3);",
                        "        SetName(item, Format(Name(item), CT('Script.Mod_ExpArts.TheBomb') + CT('Script.Mod_ExpArts.BombWithTimer'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
                        "",
                        "        ItemSize(item, ItemSize(item) + RndObject(-2, 2, ship));",
                        "        ItemCost(item, ItemCost(item) + RndObject(-297, 303, ship));",
                        "        ShipAddDropItem(ship, item);",
                        "        item = CreateQuestItem('Quark_bomb');",
                        "        ItemOwner(item, 7);",
                        "        //Записываем в бомбу задержку таймера",
                        "        UselessItemData(item, 1, RndObject(1, 3, ship));",
                        "        //Устанавливаем таймер в положение выкл.",
                        "        UselessItemData(item, 2, -2);",
                        "        SetName(item, Name(item) + CT('Script.Mod_ExpArts.BombWithTimer'));",
                        "        UselessItemText(item, CT('UselessItems.' + EquipmentImageName(item) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
                        "",
                        "        //Если выпал шанс, то ставим на бомбу дополнительно ещё и контактный взрыватель",
                        "        UselessItemData(item, 2, -3);",
                        "        SetName(item, Format(Name(item), CT('Script.Mod_ExpArts.TheBomb') + CT('Script.Mod_ExpArts.BombWithTimer'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
                        "",
                        "        ItemSize(item, ItemSize(item) + RndObject(-2, 2, ship));",
                        "        ItemCost(item, ItemCost(item) + RndObject(-297, 303, ship));",
                        "        ShipAddDropItem(ship, item);",
                        "        item = CreateQuestItem('Quark_bomb');",
                        "        ItemOwner(item, 7);",
                        "        //Записываем в бомбу задержку таймера",
                        "        UselessItemData(item, 1, RndObject(1, 3, ship));",
                        "        //Устанавливаем таймер в положение выкл.",
                        "        UselessItemData(item, 2, -2);",
                        "        SetName(item, Name(item) + CT('Script.Mod_ExpArts.BombWithTimer'));",
                        "        UselessItemText(item, CT('UselessItems.' + EquipmentImageName(item) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
                        "",
                        "        //Если выпал шанс, то ставим на бомбу дополнительно ещё и контактный взрыватель",
                        "        UselessItemData(item, 2, -3);",
                        "        SetName(item, Format(Name(item), CT('Script.Mod_ExpArts.TheBomb') + CT('Script.Mod_ExpArts.BombWithTimer'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
                        "",
                        "        ItemSize(item, ItemSize(item) + RndObject(-2, 2, ship));",
                        "        ItemCost(item, ItemCost(item) + RndObject(-297, 303, ship));",
                        "        ShipAddDropItem(ship, item);",
                        "    }",
                        "",
                        "    //Выдаём ПРО",
                        "    item = CreateArt(t_ArtPDTurret, PirateClan);",
                        "    AddItemToShip(ship, item);",
                        "    ItemIsInUse(item, ship, 1);",
                        "    NoDropItem(item,1);",
                        "    item = CreateArt(t_ArtMissileDef, PirateClan);",
                        "    AddItemToShip(ship, item);",
                        "    ItemIsInUse(item, ship, 1);",
                        "    NoDropItem(item,1);",
                        "",
                        "    //Гарантированно выдаём галеону дроида и ГЗП",
                        "    if(!ShipEqInSlot(ship, t_RepairRobot))",
                        "    {",
                        "        item = CreateEquipment(t_RepairRobot, Rnd(50, 110), GTL, 7);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "    }",
                        "    if(!ShipEqInSlot(ship, t_DefGenerator))",
                        "    {",
                        "        item = CreateEquipment(t_DefGenerator, Rnd(50, 110), GTL, 7);",
                        "        AddItemToShip(ship, item);",
                        "        ItemIsInUse(item, ship, 1);",
                        "    }",
                        "    ShipImproveItems(ship, Rnd(9, 16));",
                        "",
                        "    //Вешаем инфошку для удаления сектора с галеоном из списка при уничтожении галеона",
                        "    ShipAddCustomShipInfo(ship, 'PirateGalleon_Infos');",
                        "",
                        "    ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "",
                        "    //Чтобы эти гении не воевали друг с другом, ибо что-то мне подсказывает, что если у них организовали шкалу",
                        "    //Рачехана, то любому любителю похрабить бы вставили смачного пропеллера за атаку собственности общака",
                        "    //Которой априори является такая махина, которую только на общак и строить",
                        "    NoTargetToShip(ship,3);",
                        "",
                        "    //Иначе будет странно",
                        "    RaisePirateRank(ship,Rnd(4,5));",
                        "",
                        "    result = ship;",
                        "}",
                        "",
                        "//Начальный перебор Галактики, раздаём кораблям дополнительные залпы и бонусы",
                        "if(!ShuDomiksInit) tint = BuildListOfNewShips(temp_array, lastShipId, 1+8+16+64+128+256+512+1024+2048+4096+8192, 1+2+4+8+16+32+128, 1, ',SubFactionPlayerMercsFixedStanding', ',TC,SSB,BM,MB,Manaan');",
                        "else tint = BuildListOfNewShips(temp_array, lastShipId, 8+16+64+128+256+512+1024+2048+4096+8192, 1+2+4+8+16+128, 1, ',SubFactionPlayerMercsFixedStanding', ',TC,SSB,BM,MB,Manaan,PlayerMB,PlayerMB_licensed');",
                        "//Если нашли хоть один корабль по требуемым условиям",
                        "if(tint)",
                        "{",
                        "    for(i = 0; i < ArrayDim(temp_array); i = i + 1)",
                        "    {",
                        "        cur_ship = temp_array[i];",
                        "",
                        "        //Сразу исключаем все скриптовые корабли (нет, потому что большинство ванильных станций находится в скриптах)",
                        "        //if(ShipInScript(cur_ship, 0)) continue;",
                        "",
                        "        tint = ShipOwner(cur_ship);",
                        "        tint2 = ShipSubType(cur_ship);",
                        "        //Пропускаем доминаторских боссов",
                        "        if(tint == 5 && tint2 == 0) continue;",
                        "",
                        "        AddExtraAttacksToShip(cur_ship, tint, ShipTypeN(cur_ship), ShipType(cur_ship), tint2);",
                        "    }",
                        "",
                        "    //Незначительно увеличиваем таймеры спавна фрегатов и галеонов, если в текущем проходе цикла ни один пират ими так и не стал",
                        "    //(необходимо в целях оптимизации)",
                        "    if(FrigateSpawnCount <= CurTurn()) FrigateSpawnCount = CurTurn() + Rnd(25, 50);",
                        "    if(GalleonSpawnCount <= CurTurn()) GalleonSpawnCount = CurTurn() + Rnd(40, 80);",
                        "}",
                        "lastShipId = GalaxyShipId();",
                        "",
                        "//Общая функция добавления залпов/усиления кораблей и спавна новых пиратских \"флагманов\"",
                        "function AddExtraAttacksToShip(ship, own, num_type, str_type, sub_type)",
                        "{",
                        "    dword hull = ShipItems(ship, 0);",
                        "    int hull_level = ItemLevel(hull);",
                        "    dword item;",
                        "    int bon;",
                        "",
                        "    if(ShipType(ship) == 'DefPlatform') {",
                        "        ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "        //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "        ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "    }",
                        "",
                        "    //Перебираем коалиционные корабли",
                        "    if(own < 5)",
                        "    {//Всем коалиционным станциям вешаем дополнительные залпы, а конкретно ВБ ещё выдаём дополнительную броню и дальность стрельбы",
                        "        if(ObjectType(ship) == 4)",
                        "        {",
                        "            //Военные базы",
                        "            if(str_type == 'WB')",
                        "            {",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                tint = round((7.5 * GeneralDiffLevel) + (7.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                tint = round((2.0 * GeneralDiffLevel) + (2.0 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "                //Также увеличиваем скорость для компенсации замедления от возросших размеров базы",
                        "                tint = 400;",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonSpeed'), tint);",
                        "",
                        "                ShipSpecialBonuses(ship, bonAttacks, 2);",
                        "                //Выдаём ПРО",
                        "                item = CreateArt(t_ArtPDTurret, own);",
                        "                AddItemToShip(ship, item);",
                        "                ItemIsInUse(item, ship, 1);",
                        "                NoDropItem(item,1);",
                        "                item = CreateArt(t_ArtMissileDef, own);",
                        "                AddItemToShip(ship, item);",
                        "                ItemIsInUse(item, ship, 1);",
                        "                NoDropItem(item,1);",
                        "",
                        "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 2);",
                        "                ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                //Вешаем на станцию инфошку специальной ремкоманды",
                        "                ShipAddCustomShipInfo(ship,'Remkom_Station');",
                        "            }",
                        "            //Центр наёмников",
                        "            else if(str_type == 'MB' || str_type == 'Manaan')",
                        "            {",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                tint = round((6 * GeneralDiffLevel) + (6 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                tint = round((0.6 * GeneralDiffLevel) + (0.6 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "",
                        "                ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                //Вешаем на станцию инфошку специальной ремкоманды",
                        "                ShipAddCustomShipInfo(ship,'Remkom_Station');",
                        "            }",
                        "            //Подпространственная база",
                        "            else if(str_type == 'SSB_licensed')",
                        "            {",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                tint = round((5 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "                tint = round((0.75 * GeneralDiffLevel) + (0.75 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
                        "",
                        "                //Вешаем на станцию инфошку специальной ремкоманды",
                        "                ShipAddCustomShipInfo(ship,'Remkom_Station');",
                        "            }",
                        "            else if(str_type == 'SB' || str_type == 'MC')",
                        "            {",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                tint = round((3 * GeneralDiffLevel) + (3 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "",
                        "                //Вешаем на станцию инфошку специальной ремкоманды",
                        "                ShipAddCustomShipInfo(ship,'Remkom_Station');",
                        "            }",
                        "            else if(str_type == 'RC')",
                        "            {",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                tint = round((3 * GeneralDiffLevel) + (3 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "                tint = round((2 * GeneralDiffLevel) + (3 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
                        "",
                        "                ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                //Вешаем на станцию инфошку специальной ремкоманды",
                        "                ShipAddCustomShipInfo(ship,'Remkom_Station');",
                        "            }",
                        "            //Все прочие базы с коалиционным овнером",
                        "            else",
                        "            {",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                tint = round((3 * GeneralDiffLevel) + (3 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "",
                        "                ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                //Вешаем на станцию инфошку специальной ремкоманды",
                        "                ShipAddCustomShipInfo(ship,'Remkom_Station');",
                        "            }",
                        "",
                        "            //Также повышаем всем станциям количество HP",
                        "            ItemSize(hull, round(1.0 * ItemSize(hull) * (1.4 + (0.3 * GeneralDiffLevel))));",
                        "            //И значительно снижаем получаемый от астероидов урон",
                        "            ShipSpecialBonuses(ship, bonResistAsteroid, 75);",
                        "        }",
                        "        else if(num_type == t_Warrior)",
                        "        {",
                        "            //Бафаем линкоры (флагманы), уровень бафа зависит от ГТУ и уровня корпуса линкора",
                        "            if(sub_type)",
                        "            {",
                        "                //Вешаем на кораблик инфошку ремкоманд",
                        "                ShipAddCustomShipInfo(ship,'Remkom');",
                        "                //Проводим всю эту хероборию чтобы не вешать на линкоры валидный акрин и не ломать их скин",
                        "                tint = FindBonusByNameInCfg('EvoArmada_CoalitionBattleshipHull');",
                        "                bon = EqModule(hull);",
                        "                if(bon > -1) ModuleToEquipment(-1, hull);",
                        "                ModuleToEquipment(tint, hull);",
                        "                EqModule(hull, -1);",
                        "                if(bon > -1) ModuleToEquipment(bon, hull);",
                        "                //После чего вешаем на них чисто текстовый акрин",
                        "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
                        "                ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                //Задаём размер корпуса линкора в зависимости от общей сложности и текущего ТУ",
                        "                ItemSize(hull, round((0.00085 * GalaxyDiffLevels() + 1) * hull_level * 1325) + Rnd(-100, 175));",
                        "                //На всякий случай, устанавливаем минимальный размер корпуса в 4000",
                        "                if(ItemSize(hull) < 4000) ItemSize(hull, 4000);",
                        "                HullHP(hull, ItemSize(hull));",
                        "",
                        "                //Запрещаем линкору менять корпус, а то там начинается вакханалия невиданных размеров и спецакрины слетают",
                        "                NoDropItem(hull, 1);",
                        "",
                        "                ShipMoney(ship,ShipMoney(ship)+GalaxyMoney(4,4) * 7);",
                        "                ShipRefit(ship);",
                        "                ShipRefit(ship);",
                        "                ShipRefit(ship);",
                        "",
                        "                //А вы точно хотите напасть на ВОТ ЭТУ МАХИНУ РАЗМЕРОМ С ПЛАНЕТУ?",
                        "                NoTargetToShip(ship,3);",
                        "",
                        "                ShipSpecialBonuses(ship,bonSlotArt,20);",
                        "",
                        "                //Выдаём ПРО",
                        "                item = CreateArt(t_ArtPDTurret, own);",
                        "                AddItemToShip(ship, item);",
                        "                ItemIsInUse(item, ship, 1);",
                        "",
                        "                //Значительно снижаем получаемый от астероидов урон",
                        "                ShipSpecialBonuses(ship, bonResistAsteroid, 50);",
                        "",
                        "                //Гарантированно выдаём линкору сборочного дроида и ГЗП",
                        "                if(ShipEqInSlot(ship, t_RepairRobot)) {",
                        "                    FreeItem(GetItemFromShip(ship,ShipEqInSlot(ship, t_RepairRobot)));",
                        "                }",
                        "                //Выдаём ремдроида",
                        "                if(CurrentMods('Revolution\\RevAcryn')) {",
                        "                    SpawnDroid(ship,GTL,own);",
                        "                }",
                        "                else {",
                        "                    item = CreateEquipment(t_RepairRobot, Rnd(50, 120), GTL, own);",
                        "                    AddItemToShip(ship, item);",
                        "                    ItemIsInUse(item, ship, 1);",
                        "                }",
                        "",
                        "",
                        "                if(!ShipEqInSlot(ship, t_DefGenerator))",
                        "                {",
                        "                    item = CreateEquipment(t_DefGenerator, Rnd(50, 120), GTL, own);",
                        "                    AddItemToShip(ship, item);",
                        "                    ItemIsInUse(item, ship, 1);",
                        "                }",
                        "                ShipImproveItems(ship, Rnd(9, 18));",
                        "",
                        "                //Малокские линкоры",
                        "                if(own == 0)",
                        "                {",
                        "                    //Малокам даём дополнительную броню, мощность осколочных пушек и плюс к точности (ну и на всякий пожарный один доп залп)",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                    tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
                        "                    tint = round((2 * GeneralDiffLevel) + (2 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "                    ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 1);",
                        "",
                        "                    ShipSpecialBonuses(ship, bonAttacks, 2);",
                        "                    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 2);",
                        "                }",
                        "                //Пеленгские линкоры",
                        "                else if(own == 1)",
                        "                {",
                        "                    //Пеленгам даём дополнительную скорость, дальность стрельбы и плюс к манёвренности",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                    tint = (7.5 * GeneralDiffLevel) + (7.5 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                    tint = round((0.8 * GeneralDiffLevel) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "                    tint = (15 * GeneralDiffLevel) + (15 * (PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonSpeed'), tint);",
                        "                    ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 1);",
                        "",
                        "                    ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                }",
                        "                //Человеческие линкоры",
                        "                else if(own == 2)",
                        "                {",
                        "                    //Людям даём дополнительный урон для всех видов орудий и плюс к технике",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                    tint = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 1, 10);",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
                        "                    tint = round((0.8 * GeneralDiffLevel) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "                    ShipSkill(ship, 'Technical', ShipSkill(ship, 'Technical') + 2);",
                        "",
                        "                    ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                }",
                        "                //Фэянские линкоры",
                        "                else if(own == 3)",
                        "                {",
                        "                    //Фэянам даём дополнительный урон для энергетических орудий, дальности и плюс к технике",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                    tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
                        "                    tint = (6 * GeneralDiffLevel) + (6 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                    tint = round((0.8 * GeneralDiffLevel) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "                    ShipSkill(ship, 'Technical', ShipSkill(ship, 'Technical') + 2);",
                        "",
                        "                    ShipImproveItems(ship,Rnd(2,3) * GalaxyTechLevel());",
                        "",
                        "                    u = 0;",
                        "                    while(1) {",
                        "                        u = u + 1;",
                        "                        if(u == 5) break;",
                        "",
                        "                        ItemLevel(ShipEqInSlot(ship,Rnd(t_Hull,t_DefGenerator)),min(GalaxyTechLevel()+1,8));",
                        "                    }",
                        "",
                        "                    ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                }",
                        "                //Гаальские линкоры",
                        "                else if(own == 4)",
                        "                {",
                        "                    //Гаальцам даём повышенную эффективность дроида, ГЗП и плюс к манёвренности",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                    tint = round((0.8 * GeneralDiffLevel) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "                    tint = (5 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonDroid'), tint);",
                        "                    tint = round((1.2 * GeneralDiffLevel) + (1.2 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
                        "                    ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 1);",
                        "",
                        "                    if(~ShipFindCustomShipInfoByType(ship,'GaalNarcotics')) ShipAddCustomShipInfo(ship,'GaalNarcotics','NoShow');",
                        "",
                        "                    ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                }",
                        "            }",
                        "            //Бафаем обычных военных, повышаем их навык манёвренности",
                        "            else if(!ShipInScript(ship)) {",
                        "                if(ShipSkill(ship, 'MobilityCur') < 3) ShipSkill(ship, 'Mobility', Rnd(3, 5));",
                        "                //Фэяне крайне хорошо оснащены",
                        "                if(ShipOwner(ship) == Fei) {",
                        "                    ShipImproveItems(ship,Rnd(1,2) * GalaxyTechLevel());",
                        "",
                        "                    int u = 0;",
                        "                    while(1) {",
                        "                        u = u + 1;",
                        "                        if(u == 3) break;",
                        "",
                        "                        ItemLevel(ShipEqInSlot(ship,Rnd(t_Hull,t_DefGenerator)),min(GalaxyTechLevel()+1,8));",
                        "                    }",
                        "                }",
                        "                else if(ShipOwner(ship) == Gaal) {",
                        "                    if(~ShipFindCustomShipInfoByType(ship,'GaalNarcotics')) ShipAddCustomShipInfo(ship,'GaalNarcotics','NoShow');",
                        "                }",
                        "",
                        "                //Чтобы много хп не было у подмоги дредноутов",
                        "                if(ShipFindCustomShipInfoByType(ship,'AstroshipHelp') == -1) {",
                        "                    //Проверяем количество хп этих гениев",
                        "                    int coef;",
                        "                    if(own == 0) coef = 155;",
                        "                    if(own == 1) coef = 115;",
                        "                    if(own == 2) coef = 135;",
                        "                    if(own == 3) coef = 125;",
                        "                    if(own == 4) coef = 120;",
                        "                    int size_needed = max(GTL * coef,300);",
                        "                    if(ItemSize(ShipEqInSlot(ship,t_Hull)) < size_needed) {",
                        "                        ItemSize(ShipEqInSlot(ship,t_Hull),size_needed);",
                        "                        HullHP(ship,'To100');",
                        "                    }",
                        "                }",
                        "",
                        "                //Проверяем оснащение этих гениев",
                        "                if(GTL > 2 && !ShipEqInSlot(ship,t_DefGenerator) && ShipSlots(ship,7)) {",
                        "                    item = CreateEquipment(t_DefGenerator,RndObject(20,50,ship),RndObject(1,GTL,ship),own);",
                        "                    AddItemToShip(ship, item);",
                        "                    ItemIsInUse(item, ship, 1);",
                        "                }",
                        "                if(GTL > 3 && !ShipEqInSlot(ship,t_RepairRobot) && ShipSlots(ship,5)) {",
                        "                    item = CreateEquipment(t_RepairRobot,RndObject(15,35,ship),RndObject(1,GTL,ship),own);",
                        "                    AddItemToShip(ship, item);",
                        "                    ItemIsInUse(item, ship, 1);",
                        "                }",
                        "",
                        "                if(GTL > 4 && ShipSlots(ship,1) > 2 && !ShipEqInSlot(ship,t_Weapon1,3)) {",
                        "                    item = CreateEquipment(RndObject(t_Weapon3,t_Weapon9,ship),RndObject(20,55,ship),RndObject(1,GTL,ship),own);",
                        "                    AddItemToShip(ship, item);",
                        "                    ItemIsInUse(item, ship, 1);",
                        "                    if(GTL > 5 && ShipSlots(ship,1) > 3 && !ShipEqInSlot(ship,t_Weapon1,4)) {",
                        "                        item = CreateEquipment(RndObject(t_Weapon4,t_Weapon10,ship),RndObject(25,60,ship),RndObject(1,GTL,ship),own);",
                        "                        AddItemToShip(ship, item);",
                        "                        ItemIsInUse(item, ship, 1);",
                        "                        if(GTL > 6 && ShipSlots(ship,1) > 4 && !ShipEqInSlot(ship,t_Weapon1,5)) {",
                        "                            item = CreateEquipment(RndObject(t_Weapon6,t_Weapon11,ship),RndObject(30,70,ship),RndObject(1,GTL,ship),own);",
                        "                            AddItemToShip(ship, item);",
                        "                            ItemIsInUse(item, ship, 1);",
                        "                        }",
                        "                    }",
                        "",
                        "                }",
                        "                ShipImproveItems(ship, 0);",
                        "            }",
                        "        }",
                        "    }",
                        "    else if(own == 5) {",
                        "        //Производим обновление доминаторских кораблей только если выключен мод ShuDomiks",
                        "        //В ином случае то же самое обновление выполнится в ShuDomiks",
                        "        //Вешаем особые бонусы на корпуса всех доминаторов",
                        "        //Добавляем общий акрин с описанием и Fragility, а также \"динамические\" спецакрины в зависимости от общего уровня сложности и ТУ доминатора",
                        "        //Эквентор",
                        "        if(!ShuDomiksInit)",
                        "        {",
                        "            //Эквентор",
                        "            if(sub_type == 1)",
                        "            {",
                        "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
                        "                tint = FindBonusByNameInCfg('EvoArmada_EquantorDomHull');",
                        "                bon = EqModule(hull);",
                        "                if(bon > -1) ModuleToEquipment(-1, hull);",
                        "                ModuleToEquipment(tint, hull);",
                        "                EqModule(hull, -1);",
                        "                if(bon > -1) ModuleToEquipment(bon, hull);",
                        "                //После чего вешаем на него чисто текстовый акрин",
                        "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
                        "",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                //Эквентору вешаем бонус на силу энергетических орудий и броню",
                        "                tint = round((1.8 * GeneralDiffLevel / 2) + (1.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
                        "                tint = round((0.8 * GeneralDiffLevel / 2) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "",
                        "                ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                //Ограничиваем максимальный уровень навыка атаки",
                        "                if(ShipSkill(ship, 'Accuracy') > 2) ShipSkill(ship, 'Accuracy', RndObject(2, 3, ship));",
                        "            }",
                        "            //Ургант",
                        "            else if(sub_type == 2)",
                        "            {",
                        "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
                        "                tint = FindBonusByNameInCfg('EvoArmada_UrgantDomHull');",
                        "                bon = EqModule(hull);",
                        "                if(bon > -1) ModuleToEquipment(-1, hull);",
                        "                ModuleToEquipment(tint, hull);",
                        "                EqModule(hull, -1);",
                        "                if(bon > -1) ModuleToEquipment(bon, hull);",
                        "                //После чего вешаем на него чисто текстовый акрин",
                        "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
                        "",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                //Урганту вешаем бонус на силу осколочных орудий и ГЗП",
                        "                tint = round((1.8 * GeneralDiffLevel / 2) + (1.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
                        "                tint = round((1.5 * GeneralDiffLevel / 2) + (1.5 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
                        "                ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 2);",
                        "            }",
                        "            //Смерш",
                        "            else if(sub_type == 3)",
                        "            {",
                        "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
                        "                tint = FindBonusByNameInCfg('EvoArmada_SmershDomHull');",
                        "                bon = EqModule(hull);",
                        "                if(bon > -1) ModuleToEquipment(-1, hull);",
                        "                ModuleToEquipment(tint, hull);",
                        "                EqModule(hull, -1);",
                        "                if(bon > -1) ModuleToEquipment(bon, hull);",
                        "                //После чего вешаем на него чисто текстовый акрин",
                        "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
                        "",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                //Смершу вешаем бонус на силу ракетных орудий и дальность стрельбы, а также повышаем навык точности",
                        "                tint = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 1, 10);",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
                        "                tint = (5 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 2);",
                        "            }",
                        "            //Менок",
                        "            else if(sub_type == 4)",
                        "            {",
                        "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
                        "                tint = FindBonusByNameInCfg('EvoArmada_MenocDomHull');",
                        "                bon = EqModule(hull);",
                        "                if(bon > -1) ModuleToEquipment(-1, hull);",
                        "                ModuleToEquipment(tint, hull);",
                        "                EqModule(hull, -1);",
                        "                if(bon > -1) ModuleToEquipment(bon, hull);",
                        "                //После чего вешаем на него чисто текстовый акрин",
                        "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
                        "",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                //Менку вешаем бонусы на силу энергетического и ракетного оружия, а также повышаем навык точности",
                        "                tint = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 1, 10);",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
                        "                ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 1);",
                        "                ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 2);",
                        "            }",
                        "            //Штип",
                        "            else if(sub_type == 5)",
                        "            {",
                        "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
                        "                tint = FindBonusByNameInCfg('EvoArmada_ShtipDomHull');",
                        "                bon = EqModule(hull);",
                        "                if(bon > -1) ModuleToEquipment(-1, hull);",
                        "                ModuleToEquipment(tint, hull);",
                        "                EqModule(hull, -1);",
                        "                if(bon > -1) ModuleToEquipment(bon, hull);",
                        "                //После чего вешаем на него чисто текстовый акрин",
                        "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
                        "",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                //Штипу вешаем бонус на скорость и повышаем навык манёвренности",
                        "                tint = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonSpeed'), tint);",
                        "                ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 3);",
                        "            }",
                        "            //Бертор",
                        "            else if(sub_type == 6)",
                        "            {",
                        "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
                        "                tint = FindBonusByNameInCfg('EvoArmada_BertorDomHull');",
                        "                bon = EqModule(hull);",
                        "                if(bon > -1) ModuleToEquipment(-1, hull);",
                        "                ModuleToEquipment(tint, hull);",
                        "                EqModule(hull, -1);",
                        "                if(bon > -1) ModuleToEquipment(bon, hull);",
                        "                //После чего вешаем на него чисто текстовый акрин",
                        "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
                        "",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                //Бертору вешаем бонус на броню",
                        "                tint = round((1.2 * GeneralDiffLevel / 2) + (1.2 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "",
                        "                ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                //Ограничиваем максимальный уровень навыка атаки",
                        "                if(ShipSkill(ship, 'Accuracy') > 1) ShipSkill(ship, 'Accuracy', RndObject(1, 2, ship));",
                        "            }",
                        "            //Клиг",
                        "            else if(sub_type == 7)",
                        "            {",
                        "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
                        "                tint = FindBonusByNameInCfg('EvoArmada_KligDomHull');",
                        "                bon = EqModule(hull);",
                        "                if(bon > -1) ModuleToEquipment(-1, hull);",
                        "                ModuleToEquipment(tint, hull);",
                        "                EqModule(hull, -1);",
                        "                if(bon > -1) ModuleToEquipment(bon, hull);",
                        "                //После чего вешаем на него чисто текстовый акрин",
                        "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
                        "",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                //Клигу вешаем бонус на скорость",
                        "                tint = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonSpeed'), tint);",
                        "                ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 4);",
                        "            }",
                        "        }",
                        "    }",
                        "    if(own == 7) {",
                        "        //Перебираем пиратские станции и корабли",
                        "        //Всем пиратским станциям вешаем дополнительные залпы, а конкретно доминиону ещё выдаём дополнительную силу энергетического оружия и дальность стрельбы",
                        "        if(ObjectType(ship) == 4)",
                        "        {",
                        "            //Доминионы",
                        "            if(str_type == 'CB')",
                        "            {",
                        "                tint = (2 * GeneralDiffLevel) + (2 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
                        "                tint = (5 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
                        "",
                        "                ShipSpecialBonuses(ship, bonAttacks, 2);",
                        "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 2);",
                        "                ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                //Вешаем на станцию инфошку специальной ремкоманды",
                        "                ShipAddCustomShipInfo(ship,'Remkom_Station');",
                        "            }",
                        "            //Центр наёмников",
                        "            else if(str_type == 'MB' || str_type == 'Manaan' || str_type == 'PlayerMB' || str_type == 'PlayerMB_licensed')",
                        "            {",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                tint = round((6 * GeneralDiffLevel) + (6 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                tint = round((0.6 * GeneralDiffLevel) + (0.6 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "",
                        "                ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                //Вешаем на станцию инфошку специальной ремкоманды",
                        "                ShipAddCustomShipInfo(ship,'Remkom_Station');",
                        "            }",
                        "            //Все прочие базы с пиратским овнером",
                        "            else",
                        "            {",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
                        "                tint = round((3 * GeneralDiffLevel) + (3 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
                        "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
                        "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
                        "",
                        "                ShipSpecialBonuses(ship, bonAttacks, 1);",
                        "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
                        "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 1);",
                        "                ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                //Вешаем на станцию инфошку специальной ремкоманды",
                        "                ShipAddCustomShipInfo(ship,'Remkom_Station');",
                        "            }",
                        "",
                        "            //Также повышаем всем станциям количество HP",
                        "            ItemSize(hull, round(ItemSize(hull) * (1.3 + (0.3 * GeneralDiffLevel))));",
                        "            //И значительно снижаем получаемый от астероидов урон",
                        "            ShipSpecialBonuses(ship, bonResistAsteroid, 75);",
                        "        }",
                        "        //Перебор всех пиратских \"новорождённых\" судов",
                        "        else",
                        "        {",
                        "            mark = 0;",
                        "            while(1)",
                        "            {",
                        "                cur_planet = GetShipPlanet(ship);",
                        "                //if(!cur_planet) cur_planet = GetShipRuins(ship);",
                        "",
                        "                if(cur_planet)",
                        "                {",
                        "                    tint = PirateType(ship);",
                        "                    //Пропускаем странствующих пиратов",
                        "                    if(tint)",
                        "                    {",
                        "                        //Проверка на спавн фрегатов и галеонов",
                        "                        if(!ShipInScript(ship, 0))",
                        "                        {",
                        "                            //Если пришло время спавнить новый фрегат (до 16-ти на Галактику)",
                        "                            if(GroupCount(PirateFrigate) < 16)",
                        "                            {",
                        "                                if(FrigateSpawnCount <= CurTurn())",
                        "                                {",
                        "                                    //Проверяем тип появившегося пирата",
                        "                                    if(tint == 3)",
                        "                                    {",
                        "                                        //Если на этого пирата ещё не повесили антидоминаторские программы",
                        "                                        if(ShipFindCustomShipInfoByType(ship, 'ShipWithProgramsInfo') == -1)",
                        "                                        {",
                        "                                            //Кидаем проверку на шанс",
                        "                                            if(Rnd(1, 100) <= 60)",
                        "                                            {",
                        "                                                //Не больше двух фрегатов на одну систему",
                        "                                                if(CountIn(PirateFrigate, ShipStar(ship)) < 2)",
                        "                                                {",
                        "                                                    //Превращаем пирата в новый фрегат",
                        "                                                    g_SpawnFrigate(ship, cur_planet, 600 - GalaxyDiffLevels());",
                        "                                                    ShipJoin(PirateFrigate, ship, '', 0, 0, 0, GalaxyTechLevel());",
                        "                                                    SetData(CurTurn() + Rnd(10, 20), 0, ship);",
                        "                                                    OrderLock(ship, 1);",
                        "                                                    ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                                                    //Вешаем на кораблик инфошку ремкоманд",
                        "                                                    ShipAddCustomShipInfo(ship,'Remkom');",
                        "",
                        "                                                    //Обновляем таймер до следующего шанса на спавн фрегата",
                        "                                                    FrigateSpawnCount = CurTurn() + Rnd(136, 165);",
                        "",
                        "                                                    mark = 1;",
                        "                                                    break;",
                        "                                                }",
                        "                                            }",
                        "                                        }",
                        "                                    }",
                        "                                }",
                        "                            }",
                        "",
                        "                            //Если пришло время спавнить новый галеон (до 4-х на Галактику)",
                        "                            if(GGalleonArray[0] < 4)",
                        "                            {",
                        "                                if(GalleonSpawnCount <= CurTurn())",
                        "                                {",
                        "                                    //Проверяем тип появившегося пирата",
                        "                                    if(tint == 1)",
                        "                                    {",
                        "                                        //Если на этого пирата ещё не повесили антидоминаторские программы",
                        "                                        if(ShipFindCustomShipInfoByType(ship, 'ShipWithProgramsInfo') == -1)",
                        "                                        {",
                        "                                            //Кидаем проверку на шанс",
                        "                                            if(Rnd(1, 100) <= 50)",
                        "                                            {",
                        "                                                //Проверяем, что в данном секторе ещё нет галеона",
                        "                                                tint2 = Id(StarToCon(ShipStar(cur_ship)));",
                        "                                                tint3 = 0;",
                        "",
                        "                                                for(j = 1; j <= GGalleonArray[0]; j = j + 1)",
                        "                                                {",
                        "                                                    if(tint2 == GGalleonArray[j])",
                        "                                                    {",
                        "                                                        tint3 = 1;",
                        "                                                        break;",
                        "                                                    }",
                        "                                                }",
                        "",
                        "                                                //Только после всех этих проверок превращаем пирата в новый галеон",
                        "                                                if(!tint3)",
                        "                                                {",
                        "                                                    g_SpawnGalleon(ship, cur_planet, 800 - GalaxyDiffLevels());",
                        "                                                    ShipJoin(PirateGalleon, ship, '', 0, 0, 0, GalaxyTechLevel());",
                        "                                                    SetData(CurTurn() + Rnd(15, 30), 0, ship);",
                        "                                                    OrderLock(ship, 1);",
                        "                                                    ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                                                    //Запоминаем сектор, в котором появился галеон",
                        "                                                    GGalleonArray[GGalleonArray[0] + 1] = tint2;",
                        "                                                    //Обновляем таймер до следующего шанса на спавн галеона",
                        "                                                    GalleonSpawnCount = CurTurn() + Rnd(261, 303);",
                        "",
                        "",
                        "                                                    //Вешаем на кораблик инфошку ремкоманд",
                        "                                                    ShipAddCustomShipInfo(ship,'Remkom');",
                        "",
                        "                                                    mark = 1;",
                        "                                                    break;",
                        "                                                }",
                        "                                            }",
                        "                                        }",
                        "                                    }",
                        "                                }",
                        "                            }",
                        "                        }",
                        "",
                        "                        //Проверка на спавн корвета",
                        "                        //Проверяем тип появившегося пирата",
                        "                        if(tint == 2)",
                        "                        {",
                        "                            //Кидаем проверку на шанс",
                        "                            if(Rnd(1, 100) <= 17)",
                        "                            {",
                        "                                //Не больше четырёх корветов на одну систему (корветы не в скрипте, так что не посчитать)",
                        "                                //if(CountIn(PirateCorvette, ShipStar(ship)) < 4)",
                        "                                //{",
                        "                                    //Превращаем пирата в новый корвет",
                        "                                    g_SpawnCorvette(ship, cur_planet, 600 - GalaxyDiffLevels());",
                        "                                    ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcher');",
                        "",
                        "                                    //Вешаем на кораблик инфошку ремкоманд",
                        "                                    ShipAddCustomShipInfo(ship,'Remkom');",
                        "",
                        "                                    mark = 1;",
                        "                                    break;",
                        "                                //}",
                        "                            }",
                        "                        }",
                        "                    }",
                        "                }",
                        "",
                        "                break;",
                        "            }",
                        "",
                        "            //Бафаем обычных клановых пиратов, повышаем им навык манёвренности до значения не ниже двух",
                        "            if(!mark)",
                        "            {",
                        "                if(ShipSkill(ship, 'MobilityCur') < 2) ShipSkill(ship, 'Mobility', Rnd(2, 3));",
                        "            }",
                        "        }",
                        "    }",
                        "",
                        "    //Исправляем перевес корабля, если он есть",
                        "    HullHP(hull, ItemSize(hull));",
                        "    ShipImproveItems(ship,0);",
                        "",
                        "    //Проверка на \"Перевёртыши\" и т.п.",
                        "    //",
                        "    if(~EqModule(ShipEqInSlot(ship, t_Hull))) {",
                        "        if(int(CT('MicroModules.'+BonusNumInCfg(EqModule(ShipEqInSlot(ship, t_Hull)))+'.bonExtraAkrinEff')) <= -50) {",
                        "            EqModule(ShipEqInSlot(ship, t_Hull),-1);",
                        "            EqModule(ShipEqInSlot(ship, t_Hull),FindBonusByNameInCfg('3'));",
                        "        }",
                        "        if(int(CT('MicroModules.'+BonusNumInCfg(EqModule(ShipEqInSlot(ship, t_Hull)))+'.bonExtraAkrinPenalty')) > 50) {",
                        "            EqModule(ShipEqInSlot(ship, t_Hull),-1);",
                        "            EqModule(ShipEqInSlot(ship, t_Hull),FindBonusByNameInCfg('3'));",
                        "        }",
                        "        if(BonusNumInCfg(EqModule(ShipEqInSlot(ship, t_Hull))) == 'Cat_MM_030') {",
                        "            EqModule(ShipEqInSlot(ship, t_Hull),-1);",
                        "            EqModule(ShipEqInSlot(ship, t_Hull),FindBonusByNameInCfg('3'));",
                        "        }",
                        "    }",
                        "}",
                        "",
                        "//Функция для исправления перевеса корабля (если он есть): расширяет вместимость корпуса, повышает HP до максимума",
                        "function FixOverweight(ship)",
                        "{",
                        "    ShipCalcParam(ship);",
                        "    int space = ShipFreeSpace(ship);",
                        "    if(space < 0)",
                        "    {",
                        "        dword hull = ShipItems(ship, 0);",
                        "        ItemSize(hull, ItemSize(hull) + abs(space) + Rnd(1, 3));",
                        "        HullHP(hull, ItemSize(hull));",
                        "        ShipCalcParam(ship);",
                        "    }",
                        "}",
                        "",
                        "function SpawnDroid(dword ship, int GTL, int own)",
                        "{",
                        "    int bonus = FindBonusByNameInCfg('RevAcryn_AssemblyDroidNormal');",
                        "    dword item;",
                        "",
                        "    if(own == 0) item = CreateEquipment(t_RepairRobot, Rnd(75, 105), GTL, own);",
                        "    else if(own == 1) item = CreateEquipment(t_RepairRobot, Rnd(70, 95), GTL, own);",
                        "    else if(own == 2) item = CreateEquipment(t_RepairRobot, Rnd(65, 80), GTL, own);",
                        "    else if(own == 3) item = CreateEquipment(t_RepairRobot, Rnd(50, 65), GTL, own);",
                        "    else if(own == 4) item = CreateEquipment(t_RepairRobot, Rnd(60, 75), GTL, own);",
                        "",
                        "    //Задаём эффективность ремонта сборочного дроида:",
                        "    //1 ГТУ - 10 * 3 = 30",
                        "    //2 ГТУ - 20 * 3 = 60",
                        "    //3 ГТУ - 30 * 3 = 90",
                        "    //4 ГТУ - 40 * 3 = 120",
                        "    //5 ГТУ - 50 * 3 = 150",
                        "    //6 ГТУ - 60 * 3 = 180",
                        "    //7 ГТУ - 70 * 3 = 210",
                        "    //8 ГТУ - 80 * 3 = 240",
                        "    SetEquipmentStats(item, (GTL * 30), 0);",
                        "",
                        "    AddItemToShip(ship,item);",
                        "    if(ShipEqInSlot(ship,t_RepairRobot)) {",
                        "        FreeItem(GetItemFromShip(ship,ShipEqInSlot(ship,t_RepairRobot)));",
                        "    }",
                        "    ItemIsInUse(item,ship,1);",
                        "",
                        "    SpecialToEquipment(bonus, item);",
                        "    //Ищем свободный скриптовый объект и добавляем в него созданного сборочного дроида",
                        "    LinkItemToScript(item);",
                        "    //Присваиваем ему акткод",
                        "    ItemOnActCode(item, GenerateCodeStringFromBlock('ActCodeBlocksList.RevAcrynAssemblyDroidActCode'));",
                        "    SetName(item, '<color=49,239,255>' + CT('Items.RepairRobot.AssemblyDroidType.' + ItemLevel(item)) + Name(item) + '</color>');",
                        "}",
                        "",
                        "//Узнаём, надо ли вообще рейнджеру чиниться",
                        "function FindArtsForRepair(dword cur_ship) {",
                        "    int i;",
                        "    int cnt = 0;",
                        "",
                        "    for(i=0;i<ShipArts(cur_ship);i=i+1) {",
                        "        dword cur_item = ShipArts(cur_ship,i);",
                        "        if(ItemIsBroken(cur_item)) cnt = cnt + 1;",
                        "    }",
                        "",
                        "    result = cnt;",
                        "}",
                        "//Чтобы узнать, а есть ли куда лететь рейнджеру чиниться",
                        "function FindPlaceToRepairArts(dword cur_star) {",
                        "    dword star;",
                        "    int i;",
                        "",
                        "    result = -1;",
                        "    for(i=0;GalaxyStars()>i;i=i+1) {",
                        "        star = StarNearbyStars(cur_star,i);",
                        "        if(StarRuins(star,'SB')) {",
                        "            result = StarRuins(star,'SB');",
                        "            break;",
                        "        }",
                        "        else if(StarRuins(star,'PB')) {",
                        "            result = StarRuins(star,'PB');",
                        "            break;",
                        "        }",
                        "    }",
                        "}",
                        "",
                        "//Создаём группу сопровождения дредноута",
                        "function g_CreateCaptainFollow(dword cur_planet, dreadnought) {",
                        "    dword cur_ship;",
                        "",
                        "    cur_ship = BuyWarrior(cur_planet,500);",
                        "    ShipRefit(cur_ship,450);",
                        "    ShipRefit(cur_ship);",
                        "    HullSpecial(cur_ship,FindBonusByNameInCfg('351'));",
                        "    Chameleon(cur_ship);",
                        "    ShipRaiseRank(cur_ship,3);",
                        "    //А вы точно хотите напасть на ВОТ ЭТУ МАХИНУ РАЗМЕРОМ С ПЛАНЕТУ?",
                        "    NoTargetToShip(cur_ship,3);",
                        "    while(ShipSpeed(cur_ship) < ShipSpeed(dreadnought) + 300) {",
                        "        ShipSpecialBonuses(cur_ship,bonSpeed,ShipSpecialBonuses(cur_ship,bonSpeed)+50);",
                        "        ShipCalcParam(cur_ship);",
                        "    }",
                        "    if(CurrentMods('ShusRangers\\ShuWarriors')) {",
                        "        ShipType(cur_ship,'Captain');",
                        "    }",
                        "",
                        "    ShipAddCustomShipInfo(cur_ship,'FollowGroup','NoShow',Id(dreadnought));",
                        "    ShipCustomShipInfoData(dreadnought,'DefendedByGroup',2,ShipCustomShipInfoData(dreadnought,'DefendedByGroup',2)+1);",
                        "",
                        "    ShipJoin(GroupFollow,cur_ship);",
                        "    SetData(Id(dreadnought),0,cur_ship);",
                        "}",
                        "function g_CreateWarriorFollow(dword cur_planet, dreadnought) {",
                        "    dword cur_ship;",
                        "",
                        "    cur_ship = BuyWarrior(cur_planet,500);",
                        "    ShipRefit(cur_ship,250);",
                        "    ShipRefit(cur_ship);",
                        "    Chameleon(cur_ship);",
                        "    ShipRaiseRank(cur_ship,3);",
                        "    //А вы точно хотите напасть на ВОТ ЭТУ МАХИНУ РАЗМЕРОМ С ПЛАНЕТУ?",
                        "    NoTargetToShip(cur_ship,3);",
                        "    while(ShipSpeed(cur_ship) < ShipSpeed(dreadnought) + 300) {",
                        "        ShipSpecialBonuses(cur_ship,bonSpeed,ShipSpecialBonuses(cur_ship,bonSpeed)+50);",
                        "        ShipCalcParam(cur_ship);",
                        "    }",
                        "",
                        "    ShipAddCustomShipInfo(cur_ship,'FollowGroup','NoShow',Id(dreadnought));",
                        "    ShipCustomShipInfoData(dreadnought,'DefendedByGroup',2,ShipCustomShipInfoData(dreadnought,'DefendedByGroup',2)+1);",
                        "",
                        "    ShipJoin(GroupFollow,cur_ship);",
                        "    SetData(Id(dreadnought),0,cur_ship);",
                        "}",
                        "function g_CreateFollowGroup(dword cur_planet, dreadnought, int haveAstroship = 0) {",
                        "    int j;",
                        "    //Считаем количество простых сопровождающих",
                        "    int i = Rnd(7,10);",
                        "    if(haveAstroship) i = i + 5;",
                        "",
                        "    //Создаём саму группу",
                        "    for(j=i;j>0;j=j-1) {",
                        "        g_CreateWarriorFollow(cur_planet, dreadnought);",
                        "    }",
                        "    g_CreateCaptainFollow(cur_planet, dreadnought);",
                        "",
                        "    //Учитываем капитана",
                        "    i = i + 1;",
                        "    result = i;",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 640,
                    "Pos.y": 340,
                    "Parent": -1,
                    "#": 10,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "//Запоминаем текущий ГТУ, который часто используется в различных функциях",
                        "GTL = GalaxyTechLevel();",
                        "",
                        "//Выставляем маркер о том, что был подключён мод ShuDomiks (может быть подключён уже в процессе игры)",
                        "if(!ShuDomiksInit)",
                        "{",
                        "    if(BlockExist('Script.Mod_ShuDomiks')) ShuDomiksInit = 1;",
                        "}",
                        "if(!PolBountyInit)",
                        "{",
                        "    if(BlockExist('Script.Mod_ShuBounty')) PolBountyInit = 1;",
                        "}",
                        "else if(PolBountyInit != 2) {",
                        "    if(GetValueFromScript('Mod_ShuBounty','GraalInstalled')) PolBountyInit = 2;",
                        "}",
                        "",
                        "//Заносим в скриптовую группу дредноуты, которые были созданы в ините (потому что сразу никак)",
                        "if(ArrayDim(fucking_crutch) > 1)",
                        "{",
                        "    while(ArrayDim(fucking_crutch) > 1)",
                        "    {",
                        "        dwd0 = IdToShip(fucking_crutch[1]);",
                        "        if(dwd0) ShipJoin(Dreadnought, dwd0);",
                        "        ArrayDelete(fucking_crutch, 1);",
                        "    }",
                        "}",
                        "//Если пришло время создания нового дредноута",
                        "if(DreadnoughtSpawnCount <= CurTurn())",
                        "{",
                        "    //Если число дредноутов в Галактике ещё не максимально",
                        "    if(GDreadnoughtArray[0] < 6)",
                        "    {",
                        "        ArrayClear(temp_array);",
                        "        //Делаем перебор секторов для возможного размещения дредноута (максимум 6 дредноутов на Галактику)",
                        "        mark = 0;",
                        "        for(i = 0; i < GalaxySectors(); i = i + 1)",
                        "        {",
                        "            s = GalaxySectors(i);",
                        "            //Пропускаем скрытый пиратский сектор",
                        "            if(s == StarToCon(PlanetToStar(PlanetPirateClan()))) continue;",
                        "            for(j = 0; j < ConStars(s); j = j + 1)",
                        "            {",
                        "                cur_star = ConStar(s, j);",
                        "                //Пропускаем не коалиционные системы",
                        "                if(StarOwner(cur_star) != 0) continue;",
                        "                if(StarCustomFaction(cur_star) != '') continue;",
                        "                mark2 = 1;",
                        "                //Проверяем, не действует ли в данном секторе какой-то другой дредноут",
                        "                for(tint2 = 1; tint2 < ArrayDim(GDreadnoughtArray); tint2 = tint2 + 1)",
                        "                {",
                        "                    if(Id(s) == GDreadnoughtArray[tint2])",
                        "                    {",
                        "                        mark2 = 0;",
                        "                        break;",
                        "                    }",
                        "                }",
                        "                if(!mark2) continue;",
                        "                //Заносим все подходящие сектора (сектора со свободными системами и без дредноута) во временный массив",
                        "                ArrayAdd(temp_array, s);",
                        "                mark = 1;",
                        "            }",
                        "        }",
                        "        //После того как все подходящие сектора определены, выбираем из них случайный",
                        "        if(mark)",
                        "        {",
                        "            //После чего подбираем случайную систему из этого сектора",
                        "            s = temp_array[Rnd(1, ArrayDim(temp_array) - 1)];",
                        "            ArrayClear(temp_array);",
                        "            for(j = 0; j < ConStars(s); j = j + 1)",
                        "            {",
                        "                cur_star = ConStar(s, j);",
                        "                //Пропускаем не коалиционные системы",
                        "                if(StarOwner(cur_star) != 0) continue;",
                        "                if(StarCustomFaction(cur_star) != '') continue;",
                        "",
                        "                //Заносим все подходящие во временный массив",
                        "                ArrayAdd(temp_array, cur_star);",
                        "            }",
                        "",
                        "            cur_star = temp_array[Rnd(1, ArrayDim(temp_array) - 1)];",
                        "            //И приступаем к выбору самой развитой (по её общему ТУ) планеты в этой системе",
                        "            mark = 0;",
                        "            for(j = 0; j < StarPlanets(cur_star); j = j + 1)",
                        "            {",
                        "                k = StarPlanets(cur_star, j);",
                        "                if(PlanetOwner(k) == 6) continue;",
                        "                if(PlanetOwner(k) == 7) continue;",
                        "                mark2 = PlanetInventionLevel(k, 7);",
                        "                if(mark2 > mark)",
                        "                {",
                        "                    mark = mark2;",
                        "                    cur_planet = k;",
                        "                }",
                        "                //Добавляем небольшую рандомизацию планеты в случае, если ТУ подходящих планет совпадают",
                        "                else if(mark2 == mark)",
                        "                {",
                        "                    if(Rnd(1, 100) <= 50) cur_planet = k;",
                        "                }",
                        "            }",
                        "",
                        "            //Спавним дредноут на выбранной планете",
                        "            dwd0 = g_SpawnDreadnought(cur_planet, 800 - GalaxyDiffLevels());",
                        "            AddPlanetNews(Format(CT('Script.Mod_EvoDreadnought.DreadnoughtWasLaunched' + PlanetOwner(cur_planet)),",
                        "                                                                                    '<Planet'+'>', Name(cur_planet),",
                        "                                                                                    '<Star'+'>', Name(cur_star),",
                        "                                                                                    '<Dreadnought'+'>', ShipName(dwd0),",
                        "                                                                                    '<Sector'+'>', Name(StarToCon(cur_star))),48);",
                        "            ShipJoin(Dreadnought, dwd0);",
                        "            //Прокручиваем общий счётчик дредноутов в Галактике",
                        "            GDreadnoughtArray[0] = 0 + GDreadnoughtArray[0] + 1;",
                        "            //И заносим Id текущего сектора в список секторов с дредноутом",
                        "            GDreadnoughtArray[GDreadnoughtArray[0]] = Id(s);",
                        "",
                        "            //Обновляем таймер до следующей проверки на спавн дредноута",
                        "            DreadnoughtSpawnCount = CurTurn() + Rnd(328, 453);",
                        "        }",
                        "        //Если не нашли подходящих секторов для спавна дредноута",
                        "        else",
                        "        {",
                        "            //Обновляем таймер до следующей проверки на спавн дредноута",
                        "            DreadnoughtSpawnCount = CurTurn() + Rnd(133, 165);",
                        "        }",
                        "    }",
                        "}",
                        "",
                        "//Цикл, раздающий различным кораблям дополнительные залпы и бонусы",
                        "if(GalaxyShipId() > lastShipId)",
                        "{",
                        "    if(!ShuDomiksInit) tint = BuildListOfNewShips(temp_array, lastShipId, 1+2+8+16+64+128+256+512+1024+2048+4096+8192, 1+2+4+8+16+32+128, 1, ',SubFactionPlayerMercsFixedStanding', ',TC,SSB,BM,MB,Manaan');",
                        "    else tint = BuildListOfNewShips(temp_array, lastShipId, 2+8+16+64+128+256+512+1024+2048+4096+8192, 1+2+4+8+16+128, 1, ',SubFactionPlayerMercsFixedStanding', ',TC,SSB,BM,MB,Manaan,PlayerMB,PlayerMB_licensed');",
                        "",
                        "    //Если нашли хоть один новый корабль",
                        "    if(tint)",
                        "    {",
                        "        for(i = 0; i < ArrayDim(temp_array); i = i + 1)",
                        "        {",
                        "            cur_ship = temp_array[i];",
                        "            if(ShipTypeN(cur_ship) == t_Ranger) {",
                        "                if(ShipSkill(cur_ship,5) < 2) ShipSkill(cur_ship,5,ShipSkill(cur_ship,5)+2);",
                        "            }",
                        "",
                        "            //Сразу исключаем все скриптовые корабли (нет, потому что большинство ванильных станций находится в скриптах)",
                        "            //if(ShipInScript(cur_ship, 0)) continue;",
                        "",
                        "            AddExtraAttacksToShip(cur_ship, ShipOwner(cur_ship), ShipTypeN(cur_ship), ShipType(cur_ship), ShipSubType(cur_ship));",
                        "        }",
                        "",
                        "        //Незначительно увеличиваем таймеры спавна фрегатов и галеонов, если в текущем проходе цикла ни один пират ими так и не стал",
                        "        //(необходимо в целях оптимизации)",
                        "        if(FrigateSpawnCount <= CurTurn()) FrigateSpawnCount = CurTurn() + Rnd(20, 40);",
                        "        if(GalleonSpawnCount <= CurTurn()) GalleonSpawnCount = CurTurn() + Rnd(30, 60);",
                        "    }",
                        "",
                        "    lastShipId = GalaxyShipId();",
                        "}",
                        "",
                        "if(CurTurn() > 300) {",
                        "    //Рейнджеры валят чинить артефакты",
                        "    if(CurTurn() % 183 == 0) {",
                        "        for(i=0;GalaxyRangers()>i;i=i+1) {",
                        "            cur_ship = GalaxyRangers(i);",
                        "            if(cur_ship == Player()) continue;",
                        "            cur_star = ShipStar(cur_ship);",
                        "",
                        "            //Из тюрьмы не начинишься",
                        "            if(ShipInPrison(cur_ship)) continue;",
                        "            //Во враждебных системах рейнджеры не про это будут думать. Да и в бою тоже",
                        "            if(StarOwner(cur_star)) continue;",
                        "            if(StarCustomFaction(cur_star) != '') continue;",
                        "            if(StarBattle(cur_star)) continue;",
                        "            //Перед завершением какого-то действия -- тоже",
                        "            if(ShipTurnBeforeEndOrder(cur_ship) < 3) continue;",
                        "            //Так, а есть ли что чинить-то?",
                        "            if(FindArtsForRepair(cur_ship) < 2) continue;",
                        "",
                        "            if(ShipFindCustomShipInfoByType(cur_ship,'EvoDreadnought_RepairArts') == -1) {",
                        "                if(~FindPlaceToRepairArts(cur_star)) {",
                        "                    ShipAddCustomShipInfo(cur_ship,'EvoDreadnought_RepairArts','NoShow',Id(FindPlaceToRepairArts(cur_star)));",
                        "                }",
                        "            }",
                        "        }",
                        "    }",
                        "}",
                        "",
                        "//Выдаём малокам их расовый бонус -- мощную военку",
                        "//Ну а так как оказалось, что скрипты загаживают PlanetWarriors, то обработаем все планеты",
                        "",
                        "//Сделаем запас с учётом количества планет. Чтобы и Коалиции больше давалось, если она совсем офигела",
                        "if(ControlledSystems(0) <= 5) k = 60;",
                        "else if(ControlledSystems(0) <= 12) k = 90;",
                        "else if(ControlledSystems(0) <= 35) k = 120;",
                        "else if(ControlledSystems(0) <= 60) k = 150;",
                        "else if(ControlledSystems(0) <= 90) k = 180;",
                        "",
                        "if(CurTurn() % k == 0) {",
                        "    for(i=0;GalaxyStars()>i;i=i+1) {",
                        "        cur_star = GalaxyStar(i);",
                        "        if(StarOwner(cur_star)) continue;",
                        "        if(StarCustomFaction(cur_star) != '') continue;",
                        "        if(NoComeKlingToStar(cur_star)) continue;",
                        "",
                        "        for(j=0;StarPlanets(cur_star)>j;j=j+1) {",
                        "            cur_planet = StarPlanets(cur_star,j);",
                        "",
                        "            //Посчитаем, сколько должно быть военных у этой планеты",
                        "",
                        "            if(!PlanetOwner(cur_planet)) tint = 10;",
                        "            else if(PlanetOwner(cur_planet) == 2) tint = 4;",
                        "            else tint = 2;",
                        "            tint = tint + PlanetEco(cur_planet);",
                        "            if(PlanetGov(cur_planet) == 4) tint = tint + 3;",
                        "            tint = tint + round(PlanetPopulation(cur_planet)/1000000);",
                        "            if(PlanetPirateClan() == cur_planet) tint = 15;",
                        "            if(i < 5) tint = tint + 1;",
                        "            if(StarRuins(cur_star,'WB')) tint = tint + 1;",
                        "            if(StarRuins(cur_star,'PB')) tint = tint - 1;",
                        "            //Проверяем Грааль",
                        "            if(PolBountyInit == 2) {",
                        "                dword GraalPlanet = IdToPlanet(GraalPlanetId);",
                        "                if(PlanetOwner(GraalPlanet) != 6) {",
                        "                    dword GraalStar = PlanetToStar(GraalPlanet);",
                        "                }",
                        "",
                        "                if(cur_planet == GraalPlanet) {",
                        "                    if(PlanetOwner(cur_planet) == 0) tint = tint + 5;",
                        "                    else if(PlanetOwner(cur_planet) == 1) tint = tint + 3;",
                        "                    else if(PlanetOwner(cur_planet) == 2) tint = tint + 1;",
                        "                }",
                        "                else if(cur_star == GraalStar) {",
                        "                    if(PlanetOwner(cur_planet) == 0) tint = tint + 2;",
                        "                    else if(PlanetOwner(cur_planet) == 2) tint = tint + 1;",
                        "                    else if(PlanetOwner(cur_planet) == 3) tint = tint + 1;",
                        "                }",
                        "            }",
                        "",
                        "            //Теперь надо посчитать, что там тех военных",
                        "            int u = 0;",
                        "            for(int y=PlanetWarriors(cur_planet);y>0;y=y-1) {",
                        "                cur_ship = PlanetWarriors(cur_planet,y);",
                        "                if(cur_ship < 1) continue;",
                        "                if(!ShipInScript(cur_ship,0)) u = u + 1;",
                        "                //Повышаем автоматом звания, если ГОЙДА",
                        "                if(GetShipPlanet(cur_ship)) {",
                        "                    if(GetShipPlanet(cur_ship) == cur_planet) {",
                        "                        ShipRaiseRank(cur_ship);",
                        "                    }",
                        "                }",
                        "            }",
                        "",
                        "            if(PlanetWarriors(cur_planet) > tint) continue;",
                        "            else {",
                        "                //Но создаём не больше 3 штук за раз",
                        "                for(tint = min(tint - PlanetWarriors(cur_planet),3);tint>0;tint = tint -1) {",
                        "                    cur_ship = BuyWarrior(cur_planet,300);",
                        "                    ShipRefit(cur_ship,500+GalaxyTechLevel()*50);",
                        "                    ShipRefit(cur_ship);",
                        "                    ShipImproveItems(cur_ship,GalaxyTechLevel());",
                        "                }",
                        "            }",
                        "        }",
                        "    }",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": -30,
                    "Parent": 13,
                    "#": 21,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "OrderLock(CurShip, 1);",
                        "//Текущая система",
                        "s = ShipStar(CurShip);",
                        "//Текущий сектор",
                        "cur_con = StarToCon(s);",
                        "//Домашняя система",
                        "k = GalaxyStar(ShipCustomShipInfoTextData(CurShip, 'Dreadnought_Infos', 2));",
                        "tstr = ShipCustomShipInfoTextData(CurShip, 'Dreadnought_Infos', 3);",
                        "//Выставляем маркер о том, что дредноут прибыл в новую систему и должен совершить её облёт",
                        "mark = 0;",
                        "if(Id(s) != ShipCustomShipInfoData(CurShip,'Dreadnought_Infos', 2))",
                        "{",
                        "    //Не считая домашней системы",
                        "    if(s != k) mark = 1;",
                        "    ShipCustomShipInfoData(CurShip, 'Dreadnought_Infos', 2, Id(s));",
                        "}",
                        "//Отправляем дредноут на облёт системы при обнаружении у него соответствующего маркера",
                        "if(mark)",
                        "{",
                        "    mark = 0;",
                        "    OrderLock(CurShip, 0);",
                        "    ChangeState('DreadnoughtOnRoute');",
                        "    exit;",
                        "}",
                        "//Если патруль ещё не начался, то начинаем его",
                        "if(tstr == 'AtHome')",
                        "{",
                        "    i = 0;",
                        "    cur_star = s;",
                        "    next_star = 0;",
                        "    mark = 0;",
                        "    while(1)",
                        "    {",
                        "        if(ConStar(cur_con, i) == cur_star)",
                        "        {",
                        "            //Если впереди ещё есть система, выбирается она",
                        "            if(i + 1 < ConStars(cur_con)) next_star = ConStar(cur_con, i + 1);",
                        "            //Если нет, то выбирается нулевая",
                        "            else",
                        "            {",
                        "                next_star = ConStar(cur_con, 0);",
                        "                i = -1;",
                        "            }",
                        "            //Если дошли до текущей системы, в которой находится дредноут",
                        "            if(next_star == s)",
                        "            {",
                        "                //Если не нашли систем, пригодных для проведения патруля (цикл вернулся к изначальной)",
                        "                if(mark)",
                        "                {",
                        "                    next_star = 0;",
                        "                    break;",
                        "                }",
                        "                //Иначе ставим маркер о первом \"посещении\" циклом изначальной системы",
                        "                mark = 1;",
                        "            }",
                        "            //Если следующая в списке система Коалиционная, то останавливаем цикл",
                        "            else if(StarOwner(next_star) == 0) break;",
                        "            //Иначе переносим счётчик на следующую систему",
                        "            cur_star = next_star;",
                        "        }",
                        "",
                        "        i = i + 1;",
                        "    }",
                        "    if(!next_star)",
                        "    {",
                        "        OrderLock(CurShip, 0);",
                        "        //Выставляем таймер до проведения следующей проверки на выход в патруль и маркер о нахождении дредноута в домашней системе",
                        "        ShipCustomShipInfoData(CurShip, 'Dreadnought_Infos', 1, CurTurn() + Rnd(15, 30));",
                        "        ChangeState('DreadnoughtAtHome');",
                        "        exit;",
                        "    }",
                        "    else",
                        "    {",
                        "        OrderJump(CurShip, next_star);",
                        "        ShipCustomShipInfoTextData(CurShip, 'Dreadnought_Infos', 3, 'OnPatrol');",
                        "    }",
                        "}",
                        "//Иначе продолжаем расчёт маршрута",
                        "else",
                        "{",
                        "    //Если дредноут провёл патруль и вернулся в домашнюю систему",
                        "    if(s == k)",
                        "    {",
                        "        if(tstr == 'OnPatrol')",
                        "        {",
                        "            //Выставляем таймер до проведения следующего патруля и маркер о нахождении дредноута в домашней системе",
                        "            OrderLock(CurShip, 0);",
                        "            ShipCustomShipInfoData(CurShip, 'Dreadnought_Infos', 1, CurTurn() + Rnd(60, 80));",
                        "            ShipCustomShipInfoTextData(CurShip, 'Dreadnought_Infos', 3, 'AtHome');",
                        "            ChangeState('DreadnoughtAtHome');",
                        "            exit;",
                        "        }",
                        "    }",
                        "    //Если корабль ещё не получил приказ на прыжок в следующую маршрутную систему",
                        "    if(ShipOrder(CurShip) != 3)",
                        "    {",
                        "        i = 0;",
                        "        cur_star = s;",
                        "        next_star = 0;",
                        "        mark = 0;",
                        "        while(1)",
                        "        {",
                        "            if(ConStar(cur_con, i) == cur_star)",
                        "            {",
                        "                //Если впереди ещё есть система, выбирается она",
                        "                if(i + 1 < ConStars(cur_con)) next_star = ConStar(cur_con, i + 1);",
                        "                //Если нет, то выбирается нулевая",
                        "                else",
                        "                {",
                        "                    next_star = ConStar(cur_con, 0);",
                        "                    i = -1;",
                        "                }",
                        "                //Если дошли до текущей системы, в которой находится дредноут",
                        "                if(next_star == s)",
                        "                {",
                        "                    //Если не нашли систем, пригодных для проведения патруля (цикл вернулся к изначальной)",
                        "                    if(mark)",
                        "                    {",
                        "                        next_star = 0;",
                        "                        break;",
                        "                    }",
                        "                    //Иначе ставим маркер о первом \"посещении\" циклом изначальной системы",
                        "                    mark = 1;",
                        "                }",
                        "                //Если следующая в списке система Коалиционная, то останавливаем цикл",
                        "                else if(StarOwner(next_star) == 0) break;",
                        "                //Иначе переносим счётчик на следующую систему",
                        "                cur_star = next_star;",
                        "            }",
                        "",
                        "            i = i + 1;",
                        "        }",
                        "        //Если следующей маршрутной точки не обнаружено (все системы захвачены)",
                        "        if(!next_star)",
                        "        {",
                        "            //Если текущая система свободна от захватчиков, то возвращаем дредноут на отвоевание домашней системы",
                        "            if(!StarBattle(s)) OrderJump(CurShip, k);",
                        "            //Иначе заставляем его сперва принять бой",
                        "            else",
                        "            {",
                        "                OrderLock(CurShip, 0);",
                        "                ChangeState('DreadnoughtInBattle');",
                        "                exit;",
                        "            }",
                        "        }",
                        "        else OrderJump(CurShip, next_star);",
                        "    }",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 70,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 39,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "OrderLock(CurShip, 0);"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 400,
                    "Pos.y": 270,
                    "Parent": -1,
                    "#": 60,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "//GetData(0) - таймер до начала следующего патруля",
                        "//GetData(3) - ГТУ, на котором данный корабль последний раз обновлял размер корпуса",
                        "",
                        "if(ShipInHyperSpace(CurShip)) exit;",
                        "",
                        "//Обновляем размер корпуса галеона при повышении ГТУ",
                        "if(GetData(3) < GalaxyTechLevel())",
                        "{",
                        "    if(GetShipPlanet(CurShip))",
                        "    {",
                        "        dword hull = ShipItems(CurShip, 0);",
                        "        ItemLevel(hull, GalaxyTechLevel());",
                        "        //Задаём размер корпуса галеона в зависимости от сложности пиратов и текущего ТУ",
                        "        ItemSize(hull, round((0.00085 * GalaxyDiffLevels(0) + 1) * GalaxyTechLevel() * 1050) + Rnd(-75, 125));",
                        "        //На всякий случай, устанавливаем минимальный размер корпуса в 3000",
                        "        if(ItemSize(hull) < 3000) ItemSize(hull, 3000);",
                        "        HullHP(hull, ItemSize(hull));",
                        "",
                        "        SetData(GalaxyTechLevel(), 3);",
                        "    }",
                        "}",
                        "",
                        "//Если время \"отдыха\" подошло к концу, отправляем галеон в патруль",
                        "if(GetData(0) <= CurTurn())",
                        "{",
                        "    SetData(CurTurn() + Rnd(10, 20), 0);",
                        "    OrderLock(CurShip, 0);",
                        "    ChangeState('GalleonOnPatrol');",
                        "}",
                        "//Если в текущей системе начался бой, переводим галеон в боевой (свободный) стейт",
                        "else if(StarBattle(ShipStar(CurShip)))",
                        "{",
                        "    OrderTakeOff(CurShip);",
                        "    OrderLock(CurShip, 0);",
                        "    ChangeState('GalleonInBattle');",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 400,
                    "Pos.y": 300,
                    "Parent": -1,
                    "#": 61,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "if(ShipInHyperSpace(CurShip)) exit;",
                        "",
                        "//Если в патрулируемой системе начался бой, переводим галеон в боевой (свободный) стейт",
                        "if(StarBattle(ShipStar(CurShip)) || ShipGetBad(CurShip))",
                        "{",
                        "    OrderLock(CurShip, 0);",
                        "    ChangeState('GalleonInBattle');",
                        "}",
                        "//Если время патруля подошло к концу, отправляем галеон на ближайшую заселённую планету",
                        "else if(GetData(0) <= CurTurn())",
                        "{",
                        "    OrderLock(CurShip, 1); //Блокируем общий приказ патрулирования, выдаваемый текущим стейтом",
                        "    OrderLanding(CurShip, NearCivilPlanet(CurShip));",
                        "    if(GetShipPlanet(CurShip))",
                        "    {",
                        "        SetData(CurTurn() + Rnd(15, 30), 0);",
                        "        ChangeState('GalleonAtHome');",
                        "    }",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 400,
                    "Pos.y": 330,
                    "Parent": -1,
                    "#": 62,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "if(ShipInHyperSpace(CurShip)) exit;",
                        "",
                        "//Если бой в текущей системе завершился, переводим галеон в патрульный стейт и выставляем маркер о необходимости вернуться на планету",
                        "if(!StarBattle(ShipStar(CurShip)) && (!ShipGetBad(CurShip) && ShipInStar(ShipGetBad(CurShip),ShipStar(CurShip))))",
                        "{",
                        "    SetData(0, 0);",
                        "    ChangeState('GalleonOnPatrol');",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 400,
                    "Pos.y": 410,
                    "Parent": -1,
                    "#": 70,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "//GetData(0) - таймер до начала следующего патруля",
                        "//GetData(3) - ГТУ, на котором данный корабль последний раз обновлял размер корпуса",
                        "",
                        "if(ShipInHyperSpace(CurShip)) exit;",
                        "",
                        "//Обновляем размер корпуса фрегата при повышении ГТУ",
                        "if(GetData(3) < GalaxyTechLevel())",
                        "{",
                        "    if(GetShipPlanet(CurShip))",
                        "    {",
                        "        dword hull = ShipItems(CurShip, 0);",
                        "        ItemLevel(hull, GalaxyTechLevel());",
                        "        ItemSize(hull, round((0.00085 * GalaxyDiffLevels(0) + 1) * GalaxyTechLevel() * 625) + Rnd(-60, 100));",
                        "        //На всякий случай, устанавливаем минимальный размер корпуса в 1750",
                        "        if(ItemSize(hull) < 1750) ItemSize(hull, 1750);",
                        "        HullHP(hull, ItemSize(hull));",
                        "",
                        "        SetData(GalaxyTechLevel(), 3);",
                        "    }",
                        "}",
                        "",
                        "//Если время \"отдыха\" подошло к концу, отправляем фрегат в патруль",
                        "if(GetData(0) <= CurTurn())",
                        "{",
                        "    SetData(CurTurn() + Rnd(8, 16), 0);",
                        "    OrderLock(CurShip, 0);",
                        "    ChangeState('FrigateOnPatrol');",
                        "}",
                        "//Если в текущей системе начался бой, переводим фрегат в боевой (свободный) стейт",
                        "else if(StarBattle(ShipStar(CurShip)))",
                        "{",
                        "    OrderTakeOff(CurShip);",
                        "    OrderLock(CurShip, 0);",
                        "    ChangeState('FrigateInBattle');",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 400,
                    "Pos.y": 440,
                    "Parent": -1,
                    "#": 71,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "if(ShipInHyperSpace(CurShip)) exit;",
                        "",
                        "//Если в патрулируемой системе начался бой, переводим фрегат в боевой (свободный) стейт",
                        "if(StarBattle(ShipStar(CurShip)) || ShipGetBad(CurShip))",
                        "{",
                        "    OrderLock(CurShip, 0);",
                        "    ChangeState('FrigateInBattle');",
                        "}",
                        "//Если время патруля подошло к концу, отправляем фрегат на ближайшую заселённую планету",
                        "else if(GetData(0) <= CurTurn())",
                        "{",
                        "    OrderLock(CurShip, 1); //Блокируем общий приказ патрулирования, выдаваемый текущим стейтом",
                        "    OrderLanding(CurShip, NearCivilPlanet(CurShip));",
                        "    if(GetShipPlanet(CurShip))",
                        "    {",
                        "        SetData(CurTurn() + Rnd(10, 20), 0);",
                        "        ChangeState('FrigateAtHome');",
                        "    }",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 400,
                    "Pos.y": 470,
                    "Parent": -1,
                    "#": 72,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "if(ShipInHyperSpace(CurShip)) exit;",
                        "",
                        "//Если бой в текущей системе завершился, переводим фрегат в патрульный стейт и выставляем маркер о необходимости вернуться на планету",
                        "if(!StarBattle(ShipStar(CurShip)) && !ShipGetBad(CurShip))",
                        "{",
                        "    SetData(0, 0);",
                        "    ChangeState('FrigateOnPatrol');",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 620,
                    "Pos.y": 340,
                    "Parent": -1,
                    "#": 74,
                    "Code.Type": "DialogBegin",
                    "Code": 
                    [
                        "cur_ship = GetTalkShip();",
                        "if(cur_ship)",
                        "{",
                        "    if(!TalkByAI())",
                        "    {",
                        "        if(ShipTypeN(cur_ship) == t_Pirate)",
                        "        {",
                        "            tstr = ShipType(cur_ship);",
                        "            if(tstr == 'PirateCorvette' || tstr == 'PirateFrigate' || tstr == 'PirateGalleon')",
                        "            {",
                        "                //Блокируем вывод ответов о предложении партнёрства пиратским крупным судам",
                        "                for(i = 0; i <= 3; i = i + 1)",
                        "                {",
                        "                    if(!i) AddDialogBlock(CT('Talk.Pirate.PlayerSend'), 2);",
                        "                    else AddDialogBlock(CT('Talk.Pirate.PlayerSend' + i), 2);",
                        "                }",
                        "            }",
                        "        }",
                        "    }",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 470,
                    "Pos.y": 690,
                    "Parent": -1,
                    "#": 78,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "if(GetData() > 0) {",
                        "    //Проверяем, не сел ли куда военный",
                        "    if(!ShipInNormalSpace(CurShip)) {",
                        "        if(GetShipPlanet(CurShip) || GetShipRuins(CurShip)) {",
                        "            ShipMoney(CurShip,ShipMoney(CurShip)+GalaxyMoney(2)); //Зарплатка!",
                        "            ShipRefuel(CurShip);",
                        "            ShipRepairEq(CurShip); //На всякий случай в ручном режиме чинимся, заправляемся и обновляемся",
                        "            ShipRefit(CurShip);",
                        "            HullHP(CurShip,'To100');",
                        "",
                        "            OrderTakeOff(CurShip);",
                        "            exit;",
                        "        }",
                        "    }",
                        "",
                        "",
                        "    //Дипломат",
                        "    def_ship = IdToShip(GetData());",
                        "}",
                        "else exit;"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 470,
                    "Pos.y": 770,
                    "Parent": -1,
                    "#": 81,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipOut(CurShip);"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 470,
                    "Pos.y": 850,
                    "Parent": -1,
                    "#": 84,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "OrderLanding(CurShip,ShipOrderObj(def_ship));"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 430,
                    "Pos.y": 970,
                    "Parent": -1,
                    "#": 90,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "OrderJump(CurShip,ShipOrderObj(def_ship));"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 510,
                    "Pos.y": 970,
                    "Parent": -1,
                    "#": 93,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "OrderFollowShip(CurShip,def_ship);"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 550,
                    "Pos.y": 970,
                    "Parent": -1,
                    "#": 94,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "if(ShipOrder(def_ship) == 3) OrderJump(CurShip,ShipOrderObj(def_ship));",
                        "else if(ShipInNormalSpace(def_ship)) OrderJump(CurShip,ShipStar(def_ship));"
                    ]
                }
            ],
            "Places": 
            [
                {
                    "Type": "TPlace",
                    "Name": "DreadnoughtRoute",
                    "Pos.x": 160,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 41,
                    "Place.Type": 0,
                    "Angle": "0",
                    "Dist": "0.5",
                    "Radius": 720,
                    "Obj1": -1,
                    "Obj2": -1
                },
                {
                    "Type": "TPlace",
                    "Name": "GalleonPatrol",
                    "Pos.x": 290,
                    "Pos.y": 300,
                    "Parent": -1,
                    "#": 56,
                    "Place.Type": 0,
                    "Angle": "0",
                    "Dist": "0.5",
                    "Radius": 1200,
                    "Obj1": -1,
                    "Obj2": -1
                },
                {
                    "Type": "TPlace",
                    "Name": "FrigatePatrol",
                    "Pos.x": 290,
                    "Pos.y": 440,
                    "Parent": -1,
                    "#": 73,
                    "Place.Type": 0,
                    "Angle": "0",
                    "Dist": "0.5",
                    "Radius": 1800,
                    "Obj1": -1,
                    "Obj2": -1
                }
            ],
            "Planets": 
            [
                {
                    "Type": "TPlanet",
                    "Name": "SpawnPlanet",
                    "Pos.x": 420,
                    "Pos.y": 510,
                    "Parent": -1,
                    "#": 1,
                    "Race": 62,
                    "Owner": 256,
                    "Economy": 14,
                    "Goverment": 62,
                    "RangeMin": 0,
                    "RangeMax": 100,
                    "Dialog": -1
                }
            ],
            "Ships": 
            [
                {
                    "Type": "TStarShip",
                    "Name": "",
                    "Pos.x": 390,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 2,
                    "Count": 1,
                    "Owner": 62,
                    "Ship.Type": 126,
                    "Player": true,
                    "SpeedMin": 0,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                }
            ],
            "Stars": 
            [
                {
                    "Type": "TStar",
                    "Name": "SpawnStar",
                    "Pos.x": 290,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 0,
                    "Constellation": 0,
                    "Priority": 0,
                    "NoKling": false,
                    "NoComeKling": false
                }
            ],
            "Statements": 
            [
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 120,
                    "Pos.y": 610,
                    "Parent": -1,
                    "#": 16,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "Rnd(1, 100) <= 15"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 120,
                    "Pos.y": 470,
                    "Parent": -1,
                    "#": 17,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipInNormalSpace(CurShip)"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 120,
                    "Pos.y": 500,
                    "Parent": -1,
                    "#": 18,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "!StarBattle(ShipStar(CurShip))"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": -20,
                    "Parent": 21,
                    "#": 19,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "StarBattle(s)"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 70,
                    "Pos.y": 470,
                    "Parent": -1,
                    "#": 20,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "!StarBattle(ShipStar(CurShip))"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": -30,
                    "Pos.y": 0,
                    "Parent": 13,
                    "#": 22,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "1"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 660,
                    "Pos.y": 340,
                    "Parent": -1,
                    "#": 30,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "!ShipIsTakeoff(Player())"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": -30,
                    "Pos.y": 0,
                    "Parent": 20,
                    "#": 36,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "1"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 120,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 38,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipCustomShipInfoData(CurShip, 'Dreadnought_Infos', 1) <= CurTurn()"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 10,
                    "Pos.y": 540,
                    "Parent": -1,
                    "#": 42,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "StarBattle(ShipStar(CurShip))"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 70,
                    "Pos.y": 710,
                    "Parent": -1,
                    "#": 43,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "EndState"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 10,
                    "Pos.y": 710,
                    "Parent": -1,
                    "#": 44,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "1"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 470,
                    "Pos.y": 730,
                    "Parent": -1,
                    "#": 79,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "def_ship < 1"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 510,
                    "Pos.y": 730,
                    "Parent": -1,
                    "#": 80,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "def_ship > 0"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 510,
                    "Pos.y": 770,
                    "Parent": -1,
                    "#": 82,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipInNormalSpace(CurShip)"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 470,
                    "Pos.y": 810,
                    "Parent": -1,
                    "#": 83,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipOrder(def_ship) == 2 && ShipTurnBeforeEndOrder(def_ship) <= 2"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 510,
                    "Pos.y": 850,
                    "Parent": -1,
                    "#": 85,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipOrder(def_ship) != 2 || ShipTurnBeforeEndOrder(def_ship) > 2"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 470,
                    "Pos.y": 890,
                    "Parent": -1,
                    "#": 86,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipOrder(def_ship) == 3"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 510,
                    "Pos.y": 890,
                    "Parent": -1,
                    "#": 87,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipOrder(def_ship) != 3"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 470,
                    "Pos.y": 930,
                    "Parent": -1,
                    "#": 88,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipTurnBeforeEndOrder(def_ship) > 2"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 430,
                    "Pos.y": 930,
                    "Parent": -1,
                    "#": 89,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipTurnBeforeEndOrder(def_ship) <= 2"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 510,
                    "Pos.y": 930,
                    "Parent": -1,
                    "#": 91,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "ShipInStar(def_ship,ShipStar(CurShip))"
                    ]
                },
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 550,
                    "Pos.y": 930,
                    "Parent": -1,
                    "#": 92,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "!ShipInStar(def_ship,ShipStar(CurShip))"
                    ]
                }
            ],
            "States": 
            [
                {
                    "Type": "TState",
                    "Name": "DreadnoughtOnPatrol",
                    "Pos.x": -50,
                    "Pos.y": 50,
                    "Parent": 16,
                    "#": 13,
                    "Move": 0,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "DreadnoughtInBattle",
                    "Pos.x": 70,
                    "Pos.y": 540,
                    "Parent": -1,
                    "#": 14,
                    "Move": 5,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "DreadnoughtAtHome",
                    "Pos.x": 160,
                    "Pos.y": 470,
                    "Parent": -1,
                    "#": 15,
                    "Move": 5,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "DreadnoughtOnRoute",
                    "Pos.x": 10,
                    "Pos.y": 680,
                    "Parent": -1,
                    "#": 40,
                    "Move": 1,
                    "MoveObj": 41,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "PlayerState",
                    "Pos.x": 420,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 45,
                    "Move": 0,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "GalleonAtHome",
                    "Pos.x": 420,
                    "Pos.y": 270,
                    "Parent": -1,
                    "#": 57,
                    "Move": 5,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "GalleonInBattle",
                    "Pos.x": 420,
                    "Pos.y": 330,
                    "Parent": -1,
                    "#": 58,
                    "Move": 5,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "GalleonOnPatrol",
                    "Pos.x": 420,
                    "Pos.y": 300,
                    "Parent": -1,
                    "#": 59,
                    "Move": 1,
                    "MoveObj": 56,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "FrigateAtHome",
                    "Pos.x": 420,
                    "Pos.y": 410,
                    "Parent": -1,
                    "#": 67,
                    "Move": 5,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "FrigateOnPatrol",
                    "Pos.x": 420,
                    "Pos.y": 440,
                    "Parent": -1,
                    "#": 68,
                    "Move": 1,
                    "MoveObj": 73,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "FrigateInBattle",
                    "Pos.x": 420,
                    "Pos.y": 470,
                    "Parent": -1,
                    "#": 69,
                    "Move": 5,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "StateFollowDreadnought",
                    "Pos.x": 470,
                    "Pos.y": 650,
                    "Parent": -1,
                    "#": 77,
                    "Move": 5,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                }
            ],
            "Variables": 
            [
                {
                    "Type": "TVar",
                    "Name": "i",
                    "Pos.x": 580,
                    "Pos.y": 390,
                    "Parent": -1,
                    "#": 5,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "cur_star",
                    "Pos.x": 700,
                    "Pos.y": 370,
                    "Parent": -1,
                    "#": 6,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "cur_planet",
                    "Pos.x": 700,
                    "Pos.y": 390,
                    "Parent": -1,
                    "#": 7,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "cur_item",
                    "Pos.x": 700,
                    "Pos.y": 430,
                    "Parent": -1,
                    "#": 8,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "s",
                    "Pos.x": 640,
                    "Pos.y": 370,
                    "Parent": -1,
                    "#": 9,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "k",
                    "Pos.x": 640,
                    "Pos.y": 390,
                    "Parent": -1,
                    "#": 11,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "j",
                    "Pos.x": 580,
                    "Pos.y": 370,
                    "Parent": -1,
                    "#": 23,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "temp_array",
                    "Pos.x": 700,
                    "Pos.y": 450,
                    "Parent": -1,
                    "#": 24,
                    "Var.Type": "Array",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tint",
                    "Pos.x": 580,
                    "Pos.y": 430,
                    "Parent": -1,
                    "#": 25,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "GDreadnoughtArray",
                    "Pos.x": 610,
                    "Pos.y": 300,
                    "Parent": -1,
                    "#": 26,
                    "Var.Type": "Array",
                    "Init": "7",
                    "Global": true
                },
                {
                    "Type": "TVar",
                    "Name": "tint2",
                    "Pos.x": 580,
                    "Pos.y": 450,
                    "Parent": -1,
                    "#": 27,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "mark",
                    "Pos.x": 580,
                    "Pos.y": 490,
                    "Parent": -1,
                    "#": 28,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "DreadnoughtSpawnCount",
                    "Pos.x": 580,
                    "Pos.y": 530,
                    "Parent": -1,
                    "#": 29,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "temp_array2",
                    "Pos.x": 700,
                    "Pos.y": 470,
                    "Parent": -1,
                    "#": 31,
                    "Var.Type": "Array",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "mark2",
                    "Pos.x": 640,
                    "Pos.y": 430,
                    "Parent": -1,
                    "#": 32,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "cur_con",
                    "Pos.x": 790,
                    "Pos.y": 390,
                    "Parent": -1,
                    "#": 33,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "next_star",
                    "Pos.x": 790,
                    "Pos.y": 370,
                    "Parent": -1,
                    "#": 34,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tstr",
                    "Pos.x": 880,
                    "Pos.y": 370,
                    "Parent": -1,
                    "#": 35,
                    "Var.Type": "Str",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "fucking_crutch",
                    "Pos.x": 580,
                    "Pos.y": 590,
                    "Parent": -1,
                    "#": 37,
                    "Var.Type": "Array",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "temp_count",
                    "Pos.x": 580,
                    "Pos.y": 510,
                    "Parent": -1,
                    "#": 47,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "dwd0",
                    "Pos.x": 640,
                    "Pos.y": 410,
                    "Parent": -1,
                    "#": 48,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "GTL",
                    "Pos.x": 580,
                    "Pos.y": 620,
                    "Parent": -1,
                    "#": 49,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "GeneralDiffLevel",
                    "Pos.x": 580,
                    "Pos.y": 640,
                    "Parent": -1,
                    "#": 50,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "cur_ship",
                    "Pos.x": 700,
                    "Pos.y": 410,
                    "Parent": -1,
                    "#": 51,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "ShuDomiksInit",
                    "Pos.x": 580,
                    "Pos.y": 670,
                    "Parent": -1,
                    "#": 52,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "lastShipId",
                    "Pos.x": 580,
                    "Pos.y": 690,
                    "Parent": -1,
                    "#": 53,
                    "Var.Type": "Dword",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tint3",
                    "Pos.x": 580,
                    "Pos.y": 470,
                    "Parent": -1,
                    "#": 54,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "GalleonSpawnCount",
                    "Pos.x": 580,
                    "Pos.y": 550,
                    "Parent": -1,
                    "#": 63,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "GGalleonArray",
                    "Pos.x": 610,
                    "Pos.y": 320,
                    "Parent": -1,
                    "#": 64,
                    "Var.Type": "Array",
                    "Init": "5",
                    "Global": true
                },
                {
                    "Type": "TVar",
                    "Name": "FrigateSpawnCount",
                    "Pos.x": 580,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 65,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "LegendsCD",
                    "Pos.x": 830,
                    "Pos.y": 450,
                    "Parent": -1,
                    "#": 75,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "def_ship",
                    "Pos.x": 580,
                    "Pos.y": 760,
                    "Parent": -1,
                    "#": 95,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "PolBountyInit",
                    "Pos.x": 820,
                    "Pos.y": 530,
                    "Parent": -1,
                    "#": 96,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                }
            ]
        }
    ],
    "Visual.Links": 
    [
        {
            "Type": "TGraphLink",
            "Begin": 2,
            "End": 0,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 1,
            "End": 0,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 12,
            "End": 1,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 12,
            "End": 15,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 17,
            "End": 18,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 13,
            "End": 21,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 21,
            "End": 19,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 22,
            "End": 13,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 30,
            "End": 10,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 15,
            "End": 17,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 16,
            "End": 13,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 14,
            "End": 20,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 20,
            "End": 36,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 36,
            "End": 22,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 38,
            "End": 16,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 19,
            "End": 39,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 39,
            "End": 14,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 42,
            "End": 14,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 43,
            "End": 13,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 41,
            "End": 0,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 18,
            "End": 38,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 44,
            "End": 43,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 46,
            "End": 1,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 46,
            "End": 45,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 40,
            "End": 44,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 55,
            "End": 1,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 56,
            "End": 0,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 55,
            "End": 57,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 57,
            "End": 60,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 59,
            "End": 61,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 58,
            "End": 62,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 66,
            "End": 1,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 66,
            "End": 67,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 73,
            "End": 0,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 67,
            "End": 70,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 68,
            "End": 71,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 69,
            "End": 72,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 76,
            "End": 1,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 76,
            "End": 77,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 77,
            "End": 78,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 78,
            "End": 79,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 79,
            "End": 81,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 78,
            "End": 80,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 80,
            "End": 82,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 82,
            "End": 83,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 83,
            "End": 84,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 82,
            "End": 85,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 85,
            "End": 87,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 87,
            "End": 91,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 87,
            "End": 92,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 92,
            "End": 94,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 91,
            "End": 93,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 85,
            "End": 86,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 86,
            "End": 88,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 88,
            "End": 93,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 86,
            "End": 89,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 89,
            "End": 90,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 40,
            "End": 42,
            "Nom": 0,
            "Arrow": true
        }
    ],
    "BlockPar.EC.Total.Strings": 0,
    "BlockPar.EC": 
    [
      
    ]
}