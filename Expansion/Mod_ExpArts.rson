{
    "FileID": 573785173,
    "FileVersion": 8,
    "ViewPos.x": -543,
    "ViewPos.y": -148,
    "ScriptName": "Mod_ExpArts",
    "ScriptFileOut": "C:\\Users\\DmitB\\Documents\\Фиксы\\Universe Redux Fixes\\Mods\\Expansion\\ExpArts\\DATA\\Script\\Mod_ExpArts.scr",
    "ScriptTextOut": "C:\\Users\\DmitB\\Documents\\Фиксы\\Universe Redux Fixes\\Mods\\Expansion\\ExpArts\\DATA\\Script\\Mod_ExpArts.txt",
    "LangDatIn": "",
    "LangDatOut": "",
    "MainDatIn": "",
    "MainDatOut": "",
    "CacheDatIn": "",
    "CacheDatOut": "",
    "ExportLangTxt": false,
    "ExportLangDat": false,
    "Visual.Objects": 
    [
        {
            "DialogAnswers": 
            [
                {
                    "Type": "TDialogAnswer",
                    "Name": "fastexit",
                    "Pos.x": 470,
                    "Pos.y": 240,
                    "Parent": -1,
                    "#": 27,
                    "Msg": "Конец связи",
                    "AMsg.Num": "0"
                }
            ],
            "DialogMessages": 
            [
                {
                    "Type": "TDialogMsg",
                    "Name": "",
                    "Pos.x": 470,
                    "Pos.y": 210,
                    "Parent": -1,
                    "#": 26,
                    "Msg": "Эй, ты что там делаешь?! Ну держись!",
                    "DMsg.Num": "0"
                }
            ],
            "Dialogs": 
            [
                {
                    "Type": "TDialog",
                    "Name": "DialogHasker",
                    "Pos.x": 470,
                    "Pos.y": 150,
                    "Parent": -1,
                    "#": 24
                }
            ],
            "Groups": 
            [
                {
                    "Type": "TGroup",
                    "Name": "PlayerGroup",
                    "Pos.x": 0,
                    "Pos.y": 20,
                    "Parent": 2,
                    "#": 3,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 1,
                    "CntShipMax": 1,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": true,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                }
            ],
            "Operations": 
            [
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 30,
                    "Pos.y": 0,
                    "Parent": 0,
                    "#": 5,
                    "Code.Type": "Global",
                    "Code": 
                    [
                        "GRun();"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 20,
                    "Pos.y": 0,
                    "Parent": 5,
                    "#": 6,
                    "Code.Type": "Init",
                    "Code": 
                    [
                        "//Этот список полезен для быстрого получения имён артов из других модов",
                        "CustomArtsLangNames[0] = 'Techdisruptor'; //Техдиструптор",
                        "CustomArtsLangNames[1] = 'Reflector'; //Рефлектор",
                        "CustomArtsLangNames[2] = 'Hasker_PROx64'; //Хаскер_PROx64",
                        "CustomArtsLangNames[3] = 'Booster'; //Бустер",
                        "",
                        "ArrayDelete(tarr1, 0);",
                        "FormGivesArray(tarr1); //Функция вызывается разово в начале игре, нужна лишь для того, чтобы не плодить в локале лишние постоянные переменные",
                        "function FormGivesArray(ref array)",
                        "{",
                        "    //Заносим в массив все незаселёнки в Галактике",
                        "    unknown tarr = newarray(1);",
                        "    for(int i = GalaxyStars() - 1; i >= 0; i = i - 1)",
                        "    {",
                        "        dword star = GalaxyStar(i);",
                        "        for(int j = StarPlanets(star) - 1; j >= 0; j = j - 1)",
                        "        {",
                        "            dword planet = StarPlanets(star, j);",
                        "",
                        "            //Обновляем расу всех закопанных артефактов и цистерн (по умолчанию они все малокские, то есть имеют расу 0, что очевидно является недоработкой Даба)",
                        "            for(int k = PlanetItems(planet) - 1; k >= 0; k = k - 1)",
                        "            {",
                        "                dword item = PlanetItems(planet, k);",
                        "",
                        "                if(ItemType(item) <= t_Narcotics)",
                        "                {",
                        "                    //С расой товаров всё вообще тупо - она всегда равна расе корабля, в трюме которого лежит, даже если тот только что подобрал минералы из космоса",
                        "                    //Но стоит выкинуть товары в космос и раса у них сразу же пропадает, что, впрочем, не работает на незаселёнках",
                        "                    //Тем не менее, скриптом это исправить нельзя",
                        "                    ItemOwner(item, None);",
                        "                }",
                        "                else if(ItemType(item) == t_ArtefactTranclucator)",
                        "                {",
                        "                    ItemOwner(item, Rnd(Maloc, None));",
                        "                    while(ItemOwner(item) == Kling) ItemOwner(item, Rnd(Maloc, None));",
                        "",
                        "                      int new_race = ItemOwner(item);",
                        "                      dword tranc = ArtTranclucatorToShip(item);",
                        "                      for(int l = ShipItems(tranc) - 1; l >= 0; l = l - 1)",
                        "                      {",
                        "                          item = ShipItems(tranc, l);",
                        "                          ItemOwner(item, new_race);",
                        "                      }",
                        "                }",
                        "                else if(ItemType(item) <= t_ArtFastRacks)",
                        "                {",
                        "                    ItemOwner(item, Rnd(Maloc, None));",
                        "                    while(ItemOwner(item) == Kling) ItemOwner(item, Rnd(Maloc, None));",
                        "                }",
                        "                else if(ItemType(item) > t_CustomWeapon)",
                        "                {",
                        "                    ItemOwner(item, Rnd(Maloc, Gaal));",
                        "                }",
                        "            }",
                        "",
                        "            if(PlanetOwner(planet) != None) continue;",
                        "",
                        "            ArrayDelete(tarr, 0);",
                        "            //До трёх-четырёх вещей из мода на одну незаселёнку",
                        "            if(!RndObject(0, 3, planet)) ArrayAdd(tarr, 3, 'ItemsLeft');",
                        "            else ArrayAdd(tarr, 4, 'ItemsLeft');",
                        "            ArrayAdd(tarr, planet, 'Planet');",
                        "",
                        "            ArrayAdd(array, tarr);",
                        "            tarr = newarray(1);",
                        "        }",
                        "    }",
                        "}",
                        "",
                        "//Раздача кустарок NPC",
                        "function g_AddCustorki(dword ship, int cnt) {",
                        "",
                        "    tin = 0;",
                        "    tin5 = 0;",
                        "    str bon_num = '';",
                        "    dword item = 0;",
                        "",
                        "    while(cnt>0) {",
                        "        tin5 = tin5 + 1;",
                        "        if(tin5 > 150) break;",
                        "",
                        "        tin = RndObject(t_FuelTanks,t_Weapon5,ship);",
                        "        if(tin == t_FuelTanks) {",
                        "            item = ShipEqInSlot(ship,tin);",
                        "            if(~EqSpecial(item)) {",
                        "                bon_num = BonusNumInCfg(EqSpecial(item));",
                        "                if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BlockImp') == 1) continue;",
                        "                if(findsubstr(CT('MicroModuls.' + bon_num + '.Name'),'dt_Modify')) continue;",
                        "            }",
                        "            tin2 = RndObject(1,100,ship);",
                        "            if(tin2 < 80) {",
                        "                //Выдаём замену систем безопасности",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_SecurityReplacement'), 1);",
                        "                SetEquipmentStats(item, GetEquipmentStats(item, 0) + 20, 0);",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "            else {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "",
                        "            ShipRefuel(ship);",
                        "        }",
                        "        else if(tin == t_RepairRobot) {",
                        "            item = ShipEqInSlot(ship,tin);",
                        "            if(!item) continue;",
                        "            if(~EqSpecial(item)) {",
                        "                bon_num = BonusNumInCfg(EqSpecial(item));",
                        "                if(CT('MicroModuls.' + bon_num + '.BlockImp') == 1) continue;",
                        "                if(CT('MicroModuls.' + bon_num + '.BioEquip') == 1) continue;",
                        "                if(!findsubstr(bon_num, 'RevAcryn_BattleDroid')) continue;",
                        "                if(findsubstr(CT('MicroModuls.' + bon_num + '.Name'),'dt_Modify')) continue;",
                        "            }",
                        "            tin2 = RndObject(1,100,ship);",
                        "            if(tin2 < 80) {",
                        "                //Выдаём процессоры \"Экстрим\"",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_ProcessorsExtreme'), 1);",
                        "                SetEquipmentStats(item, GetEquipmentStats(item, 0) + 8, 0);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "            else {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "        }",
                        "        else if(tin == t_Engine) {",
                        "            item = ShipEqInSlot(ship,tin);",
                        "            if(!item) continue;",
                        "            if(~EqSpecial(item)) {",
                        "                bon_num = BonusNumInCfg(EqSpecial(item));",
                        "                if(CT('MicroModuls.' + bon_num + '.BlockImp') == 1) continue;",
                        "                if(findsubstr(CT('MicroModuls.' + bon_num + '.Name'),'dt_Modify')) continue;",
                        "            }",
                        "            tin2 = RndObject(1,100,ship);",
                        "            if(tin2 < 80) {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_HackedInjector'), 1);",
                        "                SetEquipmentStats(item, GetEquipmentStats(item, 0) + 200, 0);",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "            else {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "        }",
                        "        else if(tin == t_DefGenerator) {",
                        "            item = ShipEqInSlot(ship,tin);",
                        "            if(!item) continue;",
                        "            if(~EqSpecial(item)) {",
                        "                bon_num = BonusNumInCfg(EqSpecial(item));",
                        "                if(CT('MicroModuls.' + bon_num + '.BlockImp') == 1) continue;",
                        "                if(findsubstr(CT('MicroModuls.' + bon_num + '.Name'),'dt_Modify')) continue;",
                        "            }",
                        "            tin2 = RndObject(1,100,ship);",
                        "            if(tin2 < 80) {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FieldDensityAmplifier'), 1);",
                        "                SetEquipmentStats(item, GetEquipmentStats(item, 0) + 6, 0);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "            else {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "        }",
                        "        else if(tin == t_CargoHook) {",
                        "            item = ShipEqInSlot(ship,tin);",
                        "            if(!item) continue;",
                        "            if(~EqSpecial(item)) {",
                        "                bon_num = BonusNumInCfg(EqSpecial(item));",
                        "                if(CT('MicroModuls.' + bon_num + '.BlockImp') == 1) continue;",
                        "                if(findsubstr(CT('MicroModuls.' + bon_num + '.Name'),'dt_Modify')) continue;",
                        "            }",
                        "            tin2 = RndObject(1,100,ship);",
                        "            if(tin2 < 80) {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_ReinforcedServoDrives'), 1);",
                        "                SetEquipmentStats(item, GetEquipmentStats(item, 0) + 40, 0);",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "            else {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "        }",
                        "        else if(tin == t_Radar) {",
                        "            item = ShipEqInSlot(ship,tin);",
                        "            if(!item) continue;",
                        "            if(~EqSpecial(item)) {",
                        "                bon_num = BonusNumInCfg(EqSpecial(item));",
                        "                if(CT('MicroModuls.' + bon_num + '.BlockImp') == 1) continue;",
                        "                if(findsubstr(CT('MicroModuls.' + bon_num + '.Name'),'dt_Modify')) continue;",
                        "            }",
                        "            tin2 = RndObject(1,100,ship);",
                        "            if(tin2 < 80) {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_MeonChips'), 1);",
                        "                SetEquipmentStats(item, GetEquipmentStats(item, 0) + 900, 0);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "            else {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "        }",
                        "        else if(tin == t_Scaner) {",
                        "            item = ShipEqInSlot(ship,tin);",
                        "            if(!item) continue;",
                        "            if(~EqSpecial(item)) {",
                        "                bon_num = BonusNumInCfg(EqSpecial(item));",
                        "                if(CT('MicroModuls.' + bon_num + '.BlockImp') == 1) continue;",
                        "                if(findsubstr(CT('MicroModuls.' + bon_num + '.Name'),'dt_Modify')) continue;",
                        "            }",
                        "            tin2 = RndObject(1,100,ship);",
                        "            if(tin2 < 80) {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_CircuitAmplifier'), 1);",
                        "                SetEquipmentStats(item, GetEquipmentStats(item, 0) + 7, 0);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "            else {",
                        "                ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);",
                        "                ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                cnt = cnt - 1;",
                        "                continue;",
                        "            }",
                        "        }",
                        "        else if(tin >= t_Weapon1) {",
                        "            //Магия оптимизации процесса рандомизации, сумрачный гений в деле",
                        "            item = ShipEqInSlot(ship,t_Weapon1,tin - t_DefGenerator);",
                        "            if(item) {",
                        "                if(~EqSpecial(item)) {",
                        "                    bon_num = BonusNumInCfg(EqSpecial(item));",
                        "                    if(CT('MicroModuls.' + bon_num + '.BlockImp') == 1) continue;",
                        "                    if(findsubstr(CT('MicroModuls.' + bon_num + '.Name'),'dt_Modify')) continue;",
                        "                }",
                        "                if(GetEquipmentStats(item,3) == 0) {",
                        "                    tin2 = RndObject(1,100,ship);",
                        "                    if(tin2 < 50) {",
                        "                        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_Decelerator'), 1);",
                        "                        ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                        ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                        cnt = cnt - 1;",
                        "                        continue;",
                        "                    }",
                        "                    else if(tin2 < 80) {",
                        "                        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_TillCapacitors'), 1);",
                        "                        ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                        ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                        if(GetEquipmentStats(item, 6) & 1048576) SetEquipmentStats(item,1,GetEquipmentStats(item,0));",
                        "                        cnt = cnt - 1;",
                        "                        continue;",
                        "                    }",
                        "                    else {",
                        "                        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);",
                        "                        ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                        ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                        cnt = cnt - 1;",
                        "                        continue;",
                        "                    }",
                        "                }",
                        "                else if(GetEquipmentStats(item,3) == 1) {",
                        "                    tin2 = RndObject(1,100,ship);",
                        "                    if(tin2 < 50) {",
                        "                        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_Acidius'), 1);",
                        "                        ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                        ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                        cnt = cnt - 1;",
                        "                        continue;",
                        "                    }",
                        "                    else if(tin2 < 80) {",
                        "                        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_WeakenedLimiters'), 1);",
                        "                        ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                        ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                        cnt = cnt - 1;",
                        "                        continue;",
                        "                    }",
                        "                    else {",
                        "                        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);",
                        "                        ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                        ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                        cnt = cnt - 1;",
                        "                        continue;",
                        "                    }",
                        "                }",
                        "                else {",
                        "                    tin2 = RndObject(1,100,ship);",
                        "                    if(tin2 < 80) {",
                        "                        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_AdditionalStowage'), 1);",
                        "                        WeaponMaxAmmunition(item, WeaponMaxAmmunition(item) + 15);",
                        "                        ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                        ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                        cnt = cnt - 1;",
                        "                        continue;",
                        "                    }",
                        "                    else {",
                        "                        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);",
                        "                        ItemSize(item, ItemSize(item) + ItemSize(CurItem()));",
                        "                        ItemCost(item, ItemCost(item) + ItemCost(CurItem()));",
                        "                        cnt = cnt - 1;",
                        "                        continue;",
                        "                    }",
                        "                }",
                        "            }",
                        "        }",
                        "    }",
                        "}",
                        "",
                        "//Начинаем перебор с целью разброса предметов по незаселёнкам",
                        "tin = 1;",
                        "while(tin < 12)",
                        "{",
                        "    //Размещаются кастомные артефакты",
                        "    //",
                        "    //Больше не размещаются, Коварду наныли на внедрение этого в игру",
                        "    /*if(tin <= 3)",
                        "    {",
                        "        tin2 = Rnd(5, 9);",
                        "        for(i = 0; i < tin2; i = i + 1)",
                        "        {",
                        "            //Определяем вес артефакта",
                        "            tin4 = CustomArtSizeCalc(int(CT('Artefacts.CustomArtefacts.' + CustomArtsLangNames[tin - 1] + '.Size')));",
                        "            //Определяем стоимость артефакта",
                        "            tin5 = CustomArtCostCalc(int(CT('Artefacts.CustomArtefacts.' + CustomArtsLangNames[tin - 1] + '.Cost')));",
                        "            //Случайно определяем расу-производителя артефакта, исключая доминаторов",
                        "            tin3 = Kling;",
                        "            while(tin3 == Kling) tin3 = Rnd(Maloc, PirateClan);",
                        "",
                        "            //Создаём и закапываем на случайной незаселёнке текущий артефакт",
                        "            cur_item = CreateCustomArt(CustomArtsLangNames[tin - 1], tin4, tin5, tin3);",
                        "            ItemDurability(cur_item, Rnd(0, 100));",
                        "",
                        "            tin5 = Rnd(0, ArrayDim(tarr1) - 1);",
                        "            AddItemToPlanet(tarr1[tin5, 'Planet'], cur_item);",
                        "            tarr1[tin5, 'ItemsLeft'] = tarr1[tin5, 'ItemsLeft'] - 1;",
                        "            if(!tarr1[tin5, 'ItemsLeft']) ArrayDelete(tarr1, tin5);",
                        "        }",
                        "    }",
                        "    //Размещаем сапёр наборы",
                        "    else*/ if(tin == 5)",
                        "    {",
                        "        tin2 = Rnd(3, 8);",
                        "        for(i = 0; i < tin2; i = i + 1)",
                        "        {",
                        "            cur_item = CreateQuestItem('SaperNabor', Rnd(0, 4));",
                        "            ItemCost(cur_item, Rnd(7000, 12000) * GalaxyTechLevel() + Rnd(-750, 750));",
                        "",
                        "            tin5 = Rnd(0, ArrayDim(tarr1) - 1);",
                        "            AddItemToPlanet(tarr1[tin5, 'Planet'], cur_item);",
                        "            tarr1[tin5, 'ItemsLeft'] = tarr1[tin5, 'ItemsLeft'] - 1;",
                        "            if(!tarr1[tin5, 'ItemsLeft']) ArrayDelete(tarr1, tin5);",
                        "        }",
                        "    }",
                        "    //Размещаются отсеки контрабандиста",
                        "    else if(tin == 5)",
                        "    {",
                        "        tin2 = Rnd(3, 6);",
                        "        for(i = 0; i < tin2; i = i + 1)",
                        "        {",
                        "            cur_item = CreateQuestItem('ExpArts_SmugglersCompartment', Rnd(0, 4));",
                        "            ItemSize(cur_item, ItemSize(cur_item) + Rnd(6, 41));",
                        "            ItemCost(cur_item, Rnd(5000, 9000) * GalaxyTechLevel() + Rnd(-750, 750));",
                        "            UselessItemData(cur_item, 1, Rnd(1, 6));",
                        "            UselessItemData(cur_item, 2, Rnd(25, 50));",
                        "",
                        "            tin5 = Rnd(0, ArrayDim(tarr1) - 1);",
                        "            AddItemToPlanet(tarr1[tin5, 'Planet'], cur_item);",
                        "            tarr1[tin5, 'ItemsLeft'] = tarr1[tin5, 'ItemsLeft'] - 1;",
                        "            if(!tarr1[tin5, 'ItemsLeft']) ArrayDelete(tarr1, tin5);",
                        "        }",
                        "    }",
                        "    //Размещаются Нуль-генераторы",
                        "    else if(tin == 7)",
                        "    {",
                        "        tin2 = Rnd(10, 15);",
                        "        for(i = 0; i < tin2; i = i + 1)",
                        "        {",
                        "            cur_item = CreateQuestItem('Null-generator', None);",
                        "            ItemSize(cur_item, ItemSize(cur_item) + Rnd(-4, 4));",
                        "            ItemCost(cur_item, Rnd(500, 2500) * GalaxyTechLevel() + Rnd(-200, 200));",
                        "",
                        "            tin5 = Rnd(0, ArrayDim(tarr1) - 1);",
                        "            AddItemToPlanet(tarr1[tin5, 'Planet'], cur_item);",
                        "            tarr1[tin5, 'ItemsLeft'] = tarr1[tin5, 'ItemsLeft'] - 1;",
                        "            if(!tarr1[tin5, 'ItemsLeft']) ArrayDelete(tarr1, tin5);",
                        "        }",
                        "    }",
                        "    //Размещаются Декалераторы и Асидии",
                        "    else if(tin == 6 || tin == 8)",
                        "    {",
                        "        tin2 = Rnd(10, 15);",
                        "        for(i = 0; i < tin2; i = i + 1)",
                        "        {",
                        "            tin3 = Kling;",
                        "            while(tin3 == Kling || tin3 == None) tin3 = Rnd(Maloc, PirateClan);",
                        "            cur_item = CreateQuestItem('RNDmoditem_' + (tin - 5), tin3);",
                        "            ItemSize(cur_item, ItemSize(cur_item) + Rnd(-4, 4));",
                        "            ItemCost(cur_item, Rnd(500, 2500) * GalaxyTechLevel() + Rnd(-200, 200));",
                        "",
                        "            tin5 = Rnd(0, ArrayDim(tarr1) - 1);",
                        "            AddItemToPlanet(tarr1[tin5, 'Planet'], cur_item);",
                        "            tarr1[tin5, 'ItemsLeft'] = tarr1[tin5, 'ItemsLeft'] - 1;",
                        "            if(!tarr1[tin5, 'ItemsLeft']) ArrayDelete(tarr1, tin5);",
                        "        }",
                        "    }",
                        "    //Размещаются гиперлинки",
                        "    else if(tin == 9)",
                        "    {",
                        "        tin2 = 7;",
                        "        for(i = 0; i < tin2; i = i + 1)",
                        "        {",
                        "            //Создаём и закапываем на случайной планете гиперлинк",
                        "            cur_item = CreateQuestItem('Hyperlink', -1);",
                        "            if((ItemSize(cur_item) % 2)) ItemSize(cur_item, ItemSize(cur_item) - 1);",
                        "            ItemCost(cur_item, round(2.0 * ItemCost(cur_item)));",
                        "            if((ItemCost(cur_item) % 2)) ItemCost(cur_item, ItemCost(cur_item) - 1);",
                        "            LinkItemToScript(cur_item);",
                        "            CanSellItem(cur_item, 1);",
                        "",
                        "            tin5 = Rnd(0, ArrayDim(tarr1) - 1);",
                        "            AddItemToPlanet(tarr1[tin5, 'Planet'], cur_item);",
                        "            tarr1[tin5, 'ItemsLeft'] = tarr1[tin5, 'ItemsLeft'] - 1;",
                        "            if(!tarr1[tin5, 'ItemsLeft']) ArrayDelete(tarr1, tin5);",
                        "        }",
                        "    }",
                        "    //Размещаются контейнеры с бомбами",
                        "    else if(tin == 10)",
                        "    {",
                        "        tin2 = Rnd(18, 27);",
                        "        for(i = 0; i < tin2; i = i + 1)",
                        "        {",
                        "            cur_item = CreateQuestItem('ExpArts_BombsContainer', 7);",
                        "            ItemSize(cur_item, ItemSize(cur_item) + Rnd(-4, 4));",
                        "            ItemCost(cur_item, Rnd(500, 2500) * GalaxyTechLevel() + Rnd(-200, 200));",
                        "            UselessItemData(cur_item, 1, Rnd(1, 100));",
                        "            UselessItemData(cur_item, 2, Rnd(1, 100));",
                        "",
                        "            tst = '';",
                        "            j = 4;",
                        "            while(j > 0)",
                        "            {",
                        "                if(Rnd(1, 100) <= 20) tin3 = 1;",
                        "                else",
                        "                {",
                        "                    if(Rnd(1, 100) > 50) tin3 = 2;",
                        "                    else tin3 = 3;",
                        "                }",
                        "                tst = tst + '' + tin3;",
                        "                j = j - 1;",
                        "            }",
                        "            tin3 = tst;",
                        "            UselessItemData(cur_item, 3, tin3);",
                        "",
                        "            tin5 = Rnd(0, ArrayDim(tarr1) - 1);",
                        "            AddItemToPlanet(tarr1[tin5, 'Planet'], cur_item);",
                        "            tarr1[tin5, 'ItemsLeft'] = tarr1[tin5, 'ItemsLeft'] - 1;",
                        "            if(!tarr1[tin5, 'ItemsLeft']) ArrayDelete(tarr1, tin5);",
                        "        }",
                        "    }",
                        "    //Размещаются контейнеры с модификациями",
                        "    else if(tin == 11)",
                        "    {",
                        "        tin2 = Rnd(22, 31);",
                        "        for(i = 0; i < tin2; i = i + 1)",
                        "        {",
                        "            cur_item = CreateQuestItem('ExpArts_ModsContainer', 7);",
                        "            ItemSize(cur_item, ItemSize(cur_item) + Rnd(-2, 2));",
                        "            ItemCost(cur_item, Rnd(500, 2500) * GalaxyTechLevel() + Rnd(-500, -1000));",
                        "            //Определяем модификацию, которая лежит в контейнере",
                        "            UselessItemData(cur_item, 1, Rnd(4, 14));",
                        "",
                        "            tin5 = Rnd(0, ArrayDim(tarr1) - 1);",
                        "            AddItemToPlanet(tarr1[tin5, 'Planet'], cur_item);",
                        "            tarr1[tin5, 'ItemsLeft'] = tarr1[tin5, 'ItemsLeft'] - 1;",
                        "            if(!tarr1[tin5, 'ItemsLeft']) ArrayDelete(tarr1, tin5);",
                        "        }",
                        "    }",
                        "",
                        "    tin = tin + 1;",
                        "}",
                        "",
                        "ArrayClear(tarr1);",
                        "    for(i = 0; i < GalaxyStars(); i = i + 1)",
                        "    {",
                        "        for(j = 0; j < StarShips(GalaxyStar(i)); j = j + 1)",
                        "        {",
                        "            cur_ship = StarShips(GalaxyStar(i), j);",
                        "            if(ObjectType(cur_ship) == 4) continue;",
                        "            if(ShipInScript(cur_ship, 0)) continue; //Исключаем скриптовые корабли, не считая корабли с OrderLock",
                        "            if(ShipTypeN(cur_ship) != t_Pirate) continue;",
                        "            if(ShipOwner(cur_ship) == 6) continue;",
                        "            if(ShipType(cur_ship) != 'Pirate') continue;",
                        "            if(RndObject(1, 100, cur_ship) > 12) continue;",
                        "            if(RndObject(1, 100, cur_ship) <= 25) tst = 'Quark_bomb';",
                        "            else",
                        "            {",
                        "                if(RndObject(1, 100, cur_ship) > 50) tst = 'Stun_bomb';",
                        "                else tst = 'EMP_bomb';",
                        "            }",
                        "",
                        "            cur_item = CreateQuestItem(tst);",
                        "",
                        "            ItemOwner(cur_item, 7);",
                        "",
                        "            //Записываем в бомбу задержку таймера",
                        "            UselessItemData(cur_item, 1, RndObject(1, 3, cur_ship));",
                        "            //Устанавливаем таймер в положение выкл.",
                        "            UselessItemData(cur_item, 2, -2);",
                        "            SetName(cur_item, Name(cur_item) + CT('Script.Mod_ExpArts.BombWithTimer'));",
                        "            UselessItemText(cur_item, CT('UselessItems.' + EquipmentImageName(cur_item) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
                        "",
                        "            //Если выпал шанс, то ставим на бомбу дополнительно ещё и контактный взрыватель",
                        "            if(RndObject(1, 100, cur_ship) <= 33)",
                        "            {",
                        "                UselessItemData(cur_item, 2, -3);",
                        "                SetName(cur_item, Format(Name(cur_item), CT('Script.Mod_ExpArts.TheBomb') + CT('Script.Mod_ExpArts.BombWithTimer'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
                        "            }",
                        "",
                        "            ItemSize(cur_item, ItemSize(cur_item) + RndObject(-2, 2, cur_ship));",
                        "            ItemCost(cur_item, ItemCost(cur_item) + RndObject(-297, 303, cur_ship));",
                        "            ShipAddDropItem(cur_ship, cur_item);",
                        "",
                        "            //Кладём в трюм пирату бомбу, чтобы предупредить игрока",
                        "            if(tst == 'Quark_bomb') {",
                        "                cur_item = CreateArt(t_ArtefactBomb,PirateClan);",
                        "                ItemSize(cur_item,0);",
                        "                AddItemToShip(cur_ship,cur_item);",
                        "                NoDropItem(cur_item,1);",
                        "            }",
                        "            else {",
                        "                cur_item = CreateCustomArt(tst,5,CustomArtCostCalc(CT('Script.Mod_ExpArts.'+tst+'.Cost')),PirateClan);",
                        "                ItemSize(cur_item,0);",
                        "                AddItemToShip(cur_ship,cur_item);",
                        "                NoDropItem(cur_item,1);",
                        "            }",
                        "        }",
                        "    }",
                        "",
                        "    tin5 = GalaxyShipId();",
                        "",
                        "//Начальный таймер до появления ремонтного геля",
                        "RepairCD = GalaxyDiffLevels(4)*3 + 665;"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": 20,
                    "Parent": 16,
                    "#": 15,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "//Добавляем бомбы на пиратские корабли",
                        "// (делаем первоначальный прогон не в иниткоде, а на четвёртом ходу, чтобы гарантированно",
                        "//                      охватить все пиратские типы кораблей)",
                        "//Значения UselessItemData(bomb, 2)",
                        "//UselessItemData(bomb, 2) == 1 - бомба уже детонировала и не может сделать это ещё раз, где бы она ни лежала",
                        "//UselessItemData(bomb, 2) == 0 - бомба без таймера, не взведена, лежит в трюме",
                        "//UselessItemData(bomb, 2) == -1 - бомба с контактным взрывателем, не взведена, лежит в трюме",
                        "//UselessItemData(bomb, 2) == -2 - бомба с таймером, не взведена, лежит в трюме",
                        "//UselessItemData(bomb, 2) == -3 - бомба с таймером и контактным взрывателем, не взведена, лежит в трюме",
                        "//UselessItemData(bomb, 2) == -4 - бомба без таймера, не взведена, выброшена в космос",
                        "//UselessItemData(bomb, 2) == -5 - бомба с контактным взрывателем, выброшена и взводится, лежит в космосе (обезвредить уже нельзя)",
                        "//UselessItemData(bomb, 2) == -6 - бомба с контактным взрывателем, взведена, лежит в космосе (обезвредить уже нельзя)",
                        "//UselessItemData(bomb, 2) == -7 - бомба с таймером и контактным взрывателем, выброшена и взводится (контактный взрыватель), лежит в космосе (обезвредить уже нельзя)",
                        "//UselessItemData(bomb, 2) == -8 - бомба с таймером, взведена, лежит в космосе (обезвредить уже нельзя)",
                        "//UselessItemData(bomb, 2) == -9 - бомба с таймером и контактным взрывателем, взведена, лежит в космосе (обезвредить уже нельзя)",
                        "",
                        "",
                        "//НЕЧЕГО ДЕЛАТЬ ЭТО ТУТ",
                        "/*if(tin4 == 1)",
                        "{",
                        "    for(i = 0; i < GalaxyStars(); i = i + 1)",
                        "    {",
                        "        for(j = 0; j < StarShips(GalaxyStar(i)); j = j + 1)",
                        "        {",
                        "            cur_ship = StarShips(GalaxyStar(i), j);",
                        "            if(ObjectType(cur_ship) == 4) continue;",
                        "            if(ShipInScript(cur_ship, 0)) continue; //Исключаем скриптовые корабли, не считая корабли с OrderLock",
                        "            if(ShipTypeN(cur_ship) != t_Pirate) continue;",
                        "            if(ShipOwner(cur_ship) == 6) continue;",
                        "            if(ShipType(cur_ship) != 'Pirate') continue;",
                        "            if(RndObject(1, 100, cur_ship) > 12) continue;",
                        "            if(RndObject(1, 100, cur_ship) <= 25) cur_item = CreateQuestItem('Quark_bomb');",
                        "            else",
                        "            {",
                        "                if(RndObject(1, 100, cur_ship) > 50) cur_item = CreateQuestItem('Stun_bomb');",
                        "                else cur_item = CreateQuestItem('EMP_bomb');",
                        "            }",
                        "",
                        "            ItemOwner(cur_item, 7);",
                        "            //Записываем в бомбу задержку таймера",
                        "            UselessItemData(cur_item, 1, RndObject(1, 3, cur_ship));",
                        "            //Устанавливаем таймер в положение выкл.",
                        "            UselessItemData(cur_item, 2, -2);",
                        "            SetName(cur_item, Name(cur_item) + CT('Script.Mod_ExpArts.BombWithTimer'));",
                        "            UselessItemText(cur_item, CT('UselessItems.' + EquipmentImageName(cur_item) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
                        "",
                        "            //Если выпал шанс, то ставим на бомбу дополнительно ещё и контактный взрыватель",
                        "            if(RndObject(1, 100, cur_ship) <= 33)",
                        "            {",
                        "                UselessItemData(cur_item, 2, -3);",
                        "                SetName(cur_item, Format(Name(cur_item), CT('Script.Mod_ExpArts.TheBomb') + CT('Script.Mod_ExpArts.BombWithTimer'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
                        "            }",
                        "",
                        "            ItemSize(cur_item, ItemSize(cur_item) + RndObject(-2, 2, cur_ship));",
                        "            ItemCost(cur_item, ItemCost(cur_item) + RndObject(-297, 303, cur_ship));",
                        "            ShipAddDropItem(cur_ship, cur_item);",
                        "        }",
                        "    }",
                        "",
                        "    tin5 = GalaxyShipId();",
                        "}*/",
                        "",
                        "//if(!tin4)",
                        "//{",
                        "    if(GalaxyShipId() > tin5)",
                        "    {",
                        "        //Ищем все новорождённые корабли в Галактике, после чего начинаем их подробный перебор",
                        "        i = BuildListOfNewShips(tarr1, tin5, 8, 159 /*1+2+4+8+16+128*/, 1, '', ',PirateRunner,Thug,Khan');",
                        "        if(i)",
                        "        {",
                        "            for(i = ArrayDim(tarr1) - 1; i >= 0; i = i - 1)",
                        "            {",
                        "                cur_ship = tarr1[i];",
                        "                //Ставим зависимость количества бомб от сложности пиратов",
                        "                int chan = GalaxyDiffLevels(0);",
                        "                chan = PortionInDiapason(chan,50,500,35,5);",
                        "                if(ShipInScript(cur_ship, 0)) continue; //Исключаем скриптовые корабли, не считая корабли с OrderLock",
                        "                if(RndObject(1, 100, cur_ship) > chan) continue;",
                        "                if(RndObject(1, 100, cur_ship) <= 25) tst = 'Quark_bomb';",
                        "                else",
                        "                {",
                        "                    if(RndObject(1, 100, cur_ship) > 50) tst = 'Stun_bomb';",
                        "                    else tst = 'EMP_bomb';",
                        "                }",
                        "",
                        "                cur_item = CreateQuestItem(tst);",
                        "",
                        "                ItemOwner(cur_item, 7);",
                        "",
                        "                //Записываем в бомбу задержку таймера",
                        "                UselessItemData(cur_item, 1, RndObject(1, 3, cur_ship));",
                        "                //Устанавливаем таймер в положение выкл.",
                        "                UselessItemData(cur_item, 2, -2);",
                        "                SetName(cur_item, Name(cur_item) + CT('Script.Mod_ExpArts.BombWithTimer'));",
                        "                UselessItemText(cur_item, CT('UselessItems.' + EquipmentImageName(cur_item) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
                        "",
                        "                //Если выпал шанс, то ставим на бомбу дополнительно ещё и контактный взрыватель",
                        "                if(RndObject(1, 100, cur_ship) <= 33)",
                        "                {",
                        "                    UselessItemData(cur_item, 2, -3);",
                        "                    SetName(cur_item, Format(Name(cur_item), CT('Script.Mod_ExpArts.TheBomb') + CT('Script.Mod_ExpArts.BombWithTimer'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
                        "                }",
                        "",
                        "                ItemSize(cur_item, ItemSize(cur_item) + RndObject(-2, 2, cur_ship));",
                        "                ItemCost(cur_item, ItemCost(cur_item) + RndObject(-297, 303, cur_ship));",
                        "                ShipAddDropItem(cur_ship, cur_item);",
                        "",
                        "                //Кладём в трюм пирату бомбу, чтобы предупредить игрока",
                        "                if(tst == 'Quark_bomb') {",
                        "                    cur_item = CreateArt(t_ArtefactBomb,PirateClan);",
                        "                    ItemSize(cur_item,0);",
                        "                    AddItemToShip(cur_ship,cur_item);",
                        "                    NoDropItem(cur_item,1);",
                        "                }",
                        "                else {",
                        "                    cur_item = CreateCustomArt(tst,5,CustomArtCostCalc(CT('Script.Mod_ExpArts.'+tst+'.Cost')),PirateClan);",
                        "                    ItemSize(cur_item,0);",
                        "                    AddItemToShip(cur_ship,cur_item);",
                        "                    NoDropItem(cur_item,1);",
                        "                }",
                        "            }",
                        "        }",
                        "        int cnt=BuildListOfNewShips(tarr1,tin5,2+8+16,1+2+4+8+16+128,1,'');",
                        "        if(cnt) {    //Если найден хотя бы один корабль",
                        "            for(i=0;i<ArrayDim(tarr1);i=i+1) {",
                        "                cnt=0;    //Обнуляем флаг",
                        "                cur_ship=tarr1[i];    //Выбираем корабль",
                        "                if(!cur_ship) continue;",
                        "                if(IsPlayer(cur_ship)) continue;",
                        "                tstr1=ShipType(cur_ship);",
                        "                if (tstr1 == 'Ranger' || tstr1 == 'RangerExplorer') {",
                        "                    tin3 = RndObject(1,100,cur_ship);",
                        "                    if(tin3 < 75) continue;",
                        "                    else if(tin3 < 90) tin4 = 1;",
                        "                    else tin4 = 2;",
                        "",
                        "                    g_AddCustorki(cur_ship,tin4);",
                        "                }",
                        "                else if (tstr1 == 'Pirate' || tstr1 == 'RangerPirate' || tstr1 == 'RangerPirateExplorer' || (tstr1 == 'Warrior' && ShipOwner(cur_ship) == PirateClan)) {",
                        "                    tin3 = RndObject(1,100,cur_ship);",
                        "                    if(tin3 < 50) continue;",
                        "                    else if(tin3 < 70) tin4 = 1;",
                        "                    else if(tin3 < 90) tin4 = 2;",
                        "                    else tin4 = 3;",
                        "",
                        "                    g_AddCustorki(cur_ship,tin4);",
                        "                }",
                        "            }",
                        "        }",
                        "",
                        "        tin5 = GalaxyShipId();",
                        "    }",
                        "//}",
                        "//Стартовый счётчик",
                        "//else if(!ShipIsTakeoff(Player())) tin4 = tin4 - 1;",
                        "",
                        "//Для переоснащения гелями",
                        "if(RepairCD) RepairCD = RepairCD - 1;",
                        "else {",
                        "    RepairCD =  300;",
                        "    dword gel;",
                        "",
                        "    for(i=0;GalaxyStars()>i;i=i+1) {",
                        "        cur_item = GalaxyStar(i);",
                        "        tin3 = 0;",
                        "        if(StarRuins(cur_item ,'TC')) {",
                        "            cur_ship = StarRuins(cur_item ,'TC');",
                        "            for(j=0;ShopItems(cur_ship)>j;j=j+1) {",
                        "                if(EquipmentImageName(ShopItems(cur_ship,j)) == 'RepairBottle') tin3 = tin3 + 1;",
                        "            }",
                        "            if(tin3 < 4) {",
                        "                while (tin3 < 4) {",
                        "                    gel = CreateQuestItem('RepairBottle');",
                        "                    ItemSize(gel,5);",
                        "                    AddItemToShop(cur_ship,gel);",
                        "                    UselessItemData(gel,1,450);",
                        "                    tin3 = tin3 + 1;",
                        "                }",
                        "            }",
                        "        }",
                        "        else if(StarRuins(cur_item ,'SB')) {",
                        "            cur_ship = StarRuins(cur_item ,'SB');",
                        "            for(j=0;ShopItems(cur_ship)>j;j=j+1) {",
                        "                if(EquipmentImageName(ShopItems(cur_ship,j)) == 'RepairBottle') tin3 = tin3 + 1;",
                        "            }",
                        "            if(tin3 < 2) {",
                        "                while (tin3 < 2) {",
                        "                    gel = CreateQuestItem('RepairBottle');",
                        "                    ItemSize(gel,5);",
                        "                    AddItemToShop(cur_ship,gel);",
                        "                    UselessItemData(gel,1,450);",
                        "                    tin3 = tin3 + 1;",
                        "                }",
                        "            }",
                        "        }",
                        "        else continue;",
                        "    }",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 150,
                    "Pos.y": 140,
                    "Parent": -1,
                    "#": 23,
                    "Code.Type": "DialogBegin",
                    "Code": 
                    [
                        "dword ship = GetTalkShip();",
                        "if(ship) {",
                        "    if(ArtefactTypeInUse(Player(),'Hasker_PROx64')) {",
                        "        if(RelationToShip(GetTalkShip(),Player()) > 9 && ShipTypeN(ship) != t_Tranclucator && ShipType(ship) != 'BlasterTziptzilot' && !ShipInGameEvent(ship) && ShipType(ship) != 'PlayerMercCruiser' && ShipType(ship) != 'PlayerMerc' && ShipType(ship) != 'MercLeader' && ShipCustomFaction(GetTalkShip()) != 'Nisper' && ShipCustomFaction(GetTalkShip()) != 'KlissanAlly') {",
                        "            AddDialogInject('DialogHasker','',\"Активировать программу сброса оборудования\",-1);",
                        "        }",
                        "    }",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 470,
                    "Pos.y": 180,
                    "Parent": -1,
                    "#": 25,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "cur_ship = GetTalkShip();",
                        "RelationToRanger(cur_ship,Player(),0);",
                        "ShipSetBad(cur_ship,Player());",
                        "",
                        "int check = 0;",
                        "int turns = 0;",
                        "",
                        "while(!check) {",
                        "    int type = Rnd(t_FuelTanks,t_DefGenerator);",
                        "    if(turns >= 50) break;",
                        "    if(!ShipEqInSlot(cur_ship,type)) continue;",
                        "    if(ItemInScript(ShipEqInSlot(cur_ship,type))) {",
                        "        turns = turns + 1;",
                        "        continue;",
                        "    }",
                        "",
                        "    if(ShipType(cur_ship) == 'DefPlatform' && ShipType(cur_ship) == 'Crusader' && ShipType(cur_ship) == 'CrusaderLeader' && ShipType(cur_ship) == 'Captain' && ShipType(cur_ship) == 'EliteWarrior' && ShipType(cur_ship) == 'PirateGalleon' && ShipType(cur_ship) == 'PirateFrigate' && ShipType(cur_ship) == 'PirateCorvette' && ShipType(cur_ship) == 'Dreadnought' && ShipTypeN(cur_ship) == t_Warrior && (ShipTypeN(cur_ship) == t_Warrior && ShipSubType(cur_ship))) {",
                        "        if(type == t_Engine) continue;",
                        "        if(type == t_FuelTanks) continue;",
                        "    }",
                        "",
                        "    DropItem(cur_ship,ShipEqInSlot(cur_ship,type));",
                        "    check = 1;",
                        "}"
                    ]
                }
            ],
            "Planets": 
            [
                {
                    "Type": "TPlanet",
                    "Name": "InitPlanet",
                    "Pos.x": 0,
                    "Pos.y": 20,
                    "Parent": 1,
                    "#": 2,
                    "Race": 62,
                    "Owner": 62,
                    "Economy": 14,
                    "Goverment": 62,
                    "RangeMin": 0,
                    "RangeMax": 100,
                    "Dialog": -1
                }
            ],
            "Ships": 
            [
                {
                    "Type": "TStarShip",
                    "Name": "",
                    "Pos.x": 60,
                    "Pos.y": 140,
                    "Parent": -1,
                    "#": 0,
                    "Count": 1,
                    "Owner": 62,
                    "Ship.Type": 126,
                    "Player": true,
                    "SpeedMin": 0,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                }
            ],
            "Stars": 
            [
                {
                    "Type": "TStar",
                    "Name": "InitStar",
                    "Pos.x": 0,
                    "Pos.y": 20,
                    "Parent": 0,
                    "#": 1,
                    "Constellation": 0,
                    "Priority": 0,
                    "NoKling": false,
                    "NoComeKling": false
                }
            ],
            "Statements": 
            [
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 20,
                    "Pos.y": -20,
                    "Parent": 6,
                    "#": 16,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "!ShipIsTakeoff(Player())"
                    ]
                }
            ],
            "States": 
            [
                {
                    "Type": "TState",
                    "Name": "PlayerState",
                    "Pos.x": 0,
                    "Pos.y": 20,
                    "Parent": 3,
                    "#": 4,
                    "Move": 0,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                }
            ],
            "Variables": 
            [
                {
                    "Type": "TVar",
                    "Name": "tin",
                    "Pos.x": 230,
                    "Pos.y": 220,
                    "Parent": -1,
                    "#": 7,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tst",
                    "Pos.x": 160,
                    "Pos.y": 260,
                    "Parent": -1,
                    "#": 8,
                    "Var.Type": "Str",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "i",
                    "Pos.x": 230,
                    "Pos.y": 200,
                    "Parent": -1,
                    "#": 9,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "j",
                    "Pos.x": 260,
                    "Pos.y": 200,
                    "Parent": -1,
                    "#": 10,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tin2",
                    "Pos.x": 230,
                    "Pos.y": 240,
                    "Parent": -1,
                    "#": 11,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tin3",
                    "Pos.x": 230,
                    "Pos.y": 260,
                    "Parent": -1,
                    "#": 12,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tin4",
                    "Pos.x": 230,
                    "Pos.y": 280,
                    "Parent": -1,
                    "#": 13,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tin5",
                    "Pos.x": 230,
                    "Pos.y": 300,
                    "Parent": -1,
                    "#": 14,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "CustomArtsLangNames",
                    "Pos.x": 160,
                    "Pos.y": 330,
                    "Parent": -1,
                    "#": 17,
                    "Var.Type": "Array",
                    "Init": "4",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tarr1",
                    "Pos.x": 160,
                    "Pos.y": 300,
                    "Parent": -1,
                    "#": 18,
                    "Var.Type": "Array",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "cur_item",
                    "Pos.x": 320,
                    "Pos.y": 220,
                    "Parent": -1,
                    "#": 19,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "cur_ship",
                    "Pos.x": 320,
                    "Pos.y": 200,
                    "Parent": -1,
                    "#": 20,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tstr1",
                    "Pos.x": 320,
                    "Pos.y": 270,
                    "Parent": -1,
                    "#": 21,
                    "Var.Type": "Str",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "RepairCD",
                    "Pos.x": 320,
                    "Pos.y": 300,
                    "Parent": -1,
                    "#": 22,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                }
            ]
        }
    ],
    "Visual.Links": 
    [
        {
            "Type": "TGraphLink",
            "Begin": 3,
            "End": 4,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 3,
            "End": 2,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 2,
            "End": 1,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 0,
            "End": 1,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 16,
            "End": 15,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 24,
            "End": 25,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 25,
            "End": 26,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 26,
            "End": 27,
            "Nom": 0,
            "Arrow": true
        }
    ],
    "BlockPar.EC.Total.Strings": 3,
    "BlockPar.EC": 
    [
        {
            "#": "0",
            "String": "Активировать программу сброса оборудования"
        },
        {
            "#": "1",
            "String": "Эй, ты что там делаешь?! Ну держись!"
        },
        {
            "#": "2",
            "String": "Конец связи"
        }
    ]
}