{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -710,
  "ViewPos.y":  -135,
  "ScriptName":  "Mod_ShuWarriors",
  "ScriptFileOut":  "C:\\Users\\DmitB\\Фиксы\\Universe Redux Fixes\\Mods\\ShusRangers\\ShuWarriors\\DATA\\Script\\Mod_ShuWarriors.scr",
  "ScriptTextOut":  "C:\\Users\\DmitB\\Фиксы\\Universe Redux Fixes\\Mods\\ShusRangers\\ShuWarriors\\DATA\\Script\\Mod_ShuWarriors.txt",
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  42,
          "#":  44,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  43,
          "#":  45,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  51,
          "#":  55,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  52,
          "#":  56,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  54,
          "#":  57,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  53,
          "#":  58,
          "Msg":  "<tstr4>",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  -20,
          "Pos.y":  100,
          "Parent":  88,
          "#":  87,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  91,
          "#":  92,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  37,
          "#":  113,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  120,
          "#":  121,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  119,
          "#":  122,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  127,
          "#":  128,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  134,
          "#":  133,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  135,
          "#":  136,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  -20,
          "Parent":  138,
          "#":  139,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  146,
          "#":  147,
          "Msg":  "",
          "AMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  700,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  165,
          "Msg":  "Это большая честь, но не сейчас, извините.",
          "AMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  670,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  166,
          "Msg":  "Пожалуй, приму участие, благодарю!",
          "AMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  168,
          "Msg":  "Для победы над врагом нужно превосходить его не числом, а умением, в чём преуспели <color=220,100,250>фэяне</color>.",
          "AMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  169,
          "Msg":  "Спокойный и рассудительный <color=50,150,230>человек</color> - мой выбор!",
          "AMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  170,
          "Msg":  "Военная хитрость не менее эффективна, чем сила. Нам нужен <color=130,150,40>лепрасовый</color>.",
          "AMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  171,
          "Msg":  "Не время для слабости - сын <color=255,0,0>Рамгатру</color> сотрёт наших врагов в порошок!",
          "AMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  172,
          "Msg":  "Этому космосу нужна гармония - зовите пилота-<color=250,250,100>гаальца</color>.",
          "AMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  820,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  186,
          "Msg":  "Класса J (<tint3> ед. структуры)",
          "AMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  820,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  187,
          "Msg":  "Класса L (<tint4> ед. структуры)",
          "AMsg.Num":  "24"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  820,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  188,
          "Msg":  "Класса S (<tint5> ед. структуры)",
          "AMsg.Num":  "25"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  820,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  189,
          "Msg":  "Класса N (<tint2> ед. структуры)",
          "AMsg.Num":  "26"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  820,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  190,
          "Msg":  "Класса M (<tint1> ед. структуры)",
          "AMsg.Num":  "27"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  910,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  206,
          "Msg":  "Прервать процесс сборки военного",
          "AMsg.Num":  "28"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  940,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  209,
          "Msg":  "Подтвердить сборку",
          "AMsg.Num":  "29"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  950,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  211,
          "Msg":  "Подтвердить сборку",
          "AMsg.Num":  "30"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  223,
          "Msg":  "Хочу установить орудие в данный слот",
          "AMsg.Num":  "31"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1150,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  226,
          "Msg":  "Пожалуй, не стоит",
          "AMsg.Num":  "32"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1030,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  229,
          "Msg":  "Ура!",
          "AMsg.Num":  "33"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  230,
          "Msg":  "Хочу собрать ещё одного пилота",
          "AMsg.Num":  "34"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1250,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  234,
          "Msg":  "Хочу поменять оборудование в слоте",
          "AMsg.Num":  "35"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1300,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  235,
          "Msg":  "Пожалуй, не стоит",
          "AMsg.Num":  "36"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1030,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  268,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "37"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  71,
          "#":  36,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  35,
          "#":  37,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  40,
          "Parent":  50,
          "#":  46,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  -10,
          "Pos.y":  40,
          "Parent":  48,
          "#":  49,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  59,
          "#":  60,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  61,
          "#":  62,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  63,
          "#":  64,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  115,
          "#":  91,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  117,
          "#":  118,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  126,
          "#":  127,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  131,
          "#":  132,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -20,
          "Parent":  123,
          "#":  138,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  143,
          "#":  145,
          "Msg":  "",
          "DMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  150,
          "#":  151,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  154,
          "#":  155,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  670,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  164,
          "Msg":  "Ну что, освободитель Галактики, решил нам помочь? Похвально, похвально.\r\n\r\nСобственно, должен объясниться. Несмотря на активное финансирование Галактическим Советом, КВСМК испытывает серьёзные проблемы с оснащением необходимого для фронта количества пилотов.\r\n\r\nВы, рейнджер, зарекомендовали себя как отличный пилот, которому можно доверить столь ответственное мероприятие, которым является оснащение наших пилотов.",
          "DMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  670,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  167,
          "Msg":  "В нашем резерве всегда находится большое количество пилотов - кто-то потерял свой корпус в жестком бою, но был вынесен в спасательной капсуле с поля боя и спасён рейнджерами, кто-то дотащил разбитый до состояния металлолома корабль до космопорта, а кто-то - просто наш запас, постепенно призываемый по мере гибели пилотов на передовой.\r\n\r\nТак или иначе, мы можем предложить вам, пилота <clr>какой расы<clrEnd> вы будете оснащать.",
          "DMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  760,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  179,
          "Msg":  "Отлично! Теперь подбери размер корпуса пилота согласно нашей размерной шкале корпусов\r\n\r\nЦеновой расклад у нас такой:\r\nКласс M - <cost1> cr.\r\nКласс N - <cost2> cr.\r\nКласс J - <cost3> cr.\r\nКласс L - <cost4> cr.\r\nКласс S - <cost5> cr.",
          "DMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  910,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  197,
          "Msg":  "Хорошо! Теперь осталось совсем немного - оснастить корабль оборудованием.\r\nЧтобы у тебя было понимание порядка цифр, выведем тебе сейчас текущую информацию по собираемому кораблю:\r\n==================\r\nПилот: <tstr1>\r\nКорабль: <tstr2> (<size> ед. структуры)\r\n-------Оборудование-------\r\n<tstr4>\r\n==================\r\nС учётом твоего рейтинга воина, ты получаешь скидку в размере <(ShipStatus(Player(),2)/4)>, следовательно, тебе потребуется уплатить <costDisc> cr.",
          "DMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  213,
          "Msg":  "Ну вот и всё, рейнджер!\r\nСобранный вами военный совсем скоро поднимется на орбиту планеты <tstr5>, чтобы начать нести службу в нашей системе. Ну а мы, тем временем, можем заняться другими делами!",
          "DMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  222,
          "Msg":  "Итак, речь идёт про орудие на корабле, расположенное в слоте номер <tint1>\r\n\r\nИ на данный момент <tstr9>",
          "DMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  224,
          "Msg":  "На какое орудие меняем?",
          "DMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1250,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  233,
          "Msg":  "Итак, настало время определиться с оборудованием.\r\n\r\nНа данный момент <tstr9>\r\n<tstr8>",
          "DMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1250,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  236,
          "Msg":  "На какое оборудование меняем?",
          "DMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  267,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "24"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "MilitaryOperationWBDialog",
          "Pos.x":  550,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  24        
        },
        {
          "Type":  "TDialog",
          "Name":  "PlanScr",
          "Pos.x":  -20,
          "Pos.y":  -140,
          "Parent":  65,
          "#":  66        
        },
        {
          "Type":  "TDialog",
          "Name":  "PlanScrChoose",
          "Pos.x":  -40,
          "Pos.y":  20,
          "Parent":  66,
          "#":  84        
        },
        {
          "Type":  "TDialog",
          "Name":  "OperationFlagshipDialog",
          "Pos.x":  100,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  116        
        },
        {
          "Type":  "TDialog",
          "Name":  "OperationWarriorDialog",
          "Pos.x":  260,
          "Pos.y":  -10,
          "Parent":  -1,
          "#":  149        
        },
        {
          "Type":  "TDialog",
          "Name":  "OperationWarriorSetTargetDialog",
          "Pos.x":  20,
          "Pos.y":  30,
          "Parent":  149,
          "#":  153        
        },
        {
          "Type":  "TDialog",
          "Name":  "CreateWarrior",
          "Pos.x":  670,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  163        
        },
        {
          "Type":  "TDialog",
          "Name":  "Return",
          "Pos.x":  950,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  217        
        },
        {
          "Type":  "TDialog",
          "Name":  "Weapon",
          "Pos.x":  1100,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  220        
        },
        {
          "Type":  "TDialog",
          "Name":  "InstallW",
          "Pos.x":  1150,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  227        
        },
        {
          "Type":  "TDialog",
          "Name":  "EQ",
          "Pos.x":  1250,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  231        
        },
        {
          "Type":  "TDialog",
          "Name":  "InstallEq",
          "Pos.x":  1300,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  238        
        },
        {
          "Type":  "TDialog",
          "Name":  "RankDialog",
          "Pos.x":  1030,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  265        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerState",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  4,
          "#":  6,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "OperativeWB",
          "Pos.x":  0,
          "Pos.y":  -150,
          "Parent":  4,
          "#":  25,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "OperativeWarriors",
          "Pos.x":  0,
          "Pos.y":  -200,
          "Parent":  4,
          "#":  27,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RandomAttackers",
          "Pos.x":  0,
          "Pos.y":  -100,
          "Parent":  4,
          "#":  109,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "CaptainsGroup",
          "Pos.x":  150,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  241,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Cortezh",
          "Pos.x":  150,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  243,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Attackers",
          "Pos.x":  50,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  249,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Reserve",
          "Pos.x":  -70,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  250,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "GroupElites",
          "Pos.x":  -200,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  287,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  5,
          "#":  0,
          "Code.Type":  "Global",
          "Code":          
          [
              "//mass_attack_stage == 0 - стандартное состояние",
              "//mass_attack_stage == 1 - операция назначена, системы выбраны, ВБ подобрана",
              "//mass_attack_stage == 2 - операция начата, распределяем войска",
              "//mass_attack_stage == 3 - основной атакующий стейт",
              "//mass_attack_stage == 4 - операция закончилась, сворачиваем лавочку",
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  0,
          "#":  8,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Впервые заводим таймер до спавна группы элитных военных",
              "EliteWarriorsSpawnTimer = 0;//CurTurn() + Rnd(9, 121);",
              "",
              "function SpawnEliteWarrior(planet, money_coef)",
              "{",
              "    dword ship = BuyWarrior(planet, money_coef);",
              "    int race = PlanetOwner(planet);",
              "    ShipType(ship,'EliteWarrior');",
              "",
              "    //Случайно подбираем акрин для нового военного",
              "    int acryn = RndObject(1, 5, ship);",
              "    if(acryn == 1) acryn = FindBonusByNameInCfg('351'); //Скала (старая, не из ExpHulls)",
              "    else if(acryn == 2) acryn = FindBonusByNameInCfg('359'); //Неуязвимый корпус III",
              "    else if(acryn == 3) acryn = FindBonusByNameInCfg('367'); //Миоплазменный корпус III",
              "    else if(acryn == 4) acryn = FindBonusByNameInCfg('371'); //Пигамарный корпус III",
              "    else acryn = FindBonusByNameInCfg('478'); //Корпус \"Броненосец\" III",
              "",
              "    if(~FindBonusByNameInCfg('EvoGkvan_GkvanHull')) {",
              "        if(race == Maloc) {",
              "            if(!RndObject(0, 2, ship)) {",
              "                acryn = FindBonusByNameInCfg('EvoGkvan_GkvanHull');",
              "            }",
              "        }",
              "    }",
              "",
              "    //Надеваем акрин",
              "    SpecialToEquipment(acryn, ShipItems(ship, 0));",
              "    Chameleon(ship);",
              "",
              "    //Даём проверку на Пигамарку, чтобы не было бесполезной",
              "    tdwd1 = CreateEquipment(t_Weapon4,Rnd(15,25),GalaxyTechLevel(),PlanetOwner(planet));",
              "    AddItemToShip(ship,tdwd1);",
              "    ArrangeItems(ship);",
              "",
              "    //Повышаем навыки элитного военного",
              "    ShipSkill(ship, 0, RndObject(4, 6, ship));",
              "    ShipSkill(ship, 1, RndObject(4, 6, ship));",
              "    ShipSkill(ship, 2, RndObject(3, 6, ship));",
              "    ShipSkill(ship, 3, RndObject(1, 2, ship));",
              "    ShipSkill(ship, 4, RndObject(1, 3, ship));",
              "    ShipSkill(ship, 5, RndObject(1, 4, ship));",
              "",
              "    //Делаем специализацию военного",
              "    if(race == Maloc) {",
              "        //Малокский военный направлен на немного бронячую по своей малокской натуре уроновость",
              "        ShipSpecialBonuses(ship,bonSlotDroid,-10);",
              "        ShipSpecialBonuses(ship,bonHull,7);",
              "        ShipSpecialBonuses(ship,bonMass,15);",
              "        ShipSpecialBonuses(ship,bonWEnergy,20);",
              "        ShipSpecialBonuses(ship,bonWSplinter,20);",
              "        ShipSpecialBonuses(ship,bonWMissile,20);",
              "        ShipSpecialBonuses(ship,bonSlotWeapon,10);",
              "        ShipSkill(ship, 0, 6);",
              "    }",
              "    else if(race == Peleng) {",
              "        //Пеленг - манёвренная падла",
              "        ShipSpecialBonuses(ship,bonSpeed,275);",
              "        ShipSpecialBonuses(ship,bonMass,-7);",
              "        ShipSpecialBonuses(ship,bonSlotForsage,10);",
              "        ShipSkill(ship, 1, 6);",
              "    }",
              "    else if(race == People) {",
              "        //У человеков со снабжением всё хорошо",
              "        ShipSpecialBonuses(ship,bonDroid,20);",
              "        ShipSpecialBonuses(ship,bonResistAsteroid,75);",
              "        ShipSpecialBonuses(ship,bonSlotDroid,5);",
              "    }",
              "    else if(race == Fei) {",
              "        //Фэяне - дальнобойные артиллеристы",
              "        ShipSpecialBonuses(ship,bonWRadius,135);",
              "        ShipSpecialBonuses(ship,bonMissileSpeed,475);",
              "        ShipSpecialBonuses(ship,bonSlotForsage,5);",
              "        ShipSpecialBonuses(ship,bonSlotDef,5);",
              "        ShipSpecialBonuses(ship,bonSlotDroid,5);",
              "    }",
              "    else {",
              "        //Гаалец - немного пацифист, бронированный",
              "        ShipSpecialBonuses(ship,bonHull,5);",
              "        ShipSpecialBonuses(ship,bonDef,15);",
              "        ShipSpecialBonuses(ship,bonWEnergy,-10);",
              "        ShipSpecialBonuses(ship,bonWSplinter,-10);",
              "        ShipSpecialBonuses(ship,bonWMissile,-10);",
              "        ShipSpecialBonuses(ship,bonSlotArt,4);",
              "    }",
              "",
              "    //А также его звание до уровня не ниже истребителя",
              "    ShipRaiseRank(ship, max(4, ShipRank(ship)));",
              "",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "",
              "    ShipImproveItems(ship, RndObject(3, 8, ship));",
              "",
              "    result = ship;",
              "}",
              "",
              "//Для удобного вычисления полной, а не текущей силы кораблей",
              "function GetShipBestStrength(dword ship)",
              "{",
              "    int hp = HullHP(ship, 'To100');",
              "    ShipCalcParam(ship);",
              "    result = ShipStrengthInBestRanger(ship);",
              "    HullHP(ship, hp);",
              "    ShipCalcParam(ship);",
              "}",
              "function GetShipAverageStrength(dword ship)",
              "{",
              "    int hp = HullHP(ship, 'To100');",
              "    ShipCalcParam(ship);",
              "    result = ShipStrengthInAverageRanger(ship);",
              "    HullHP(ship, hp);",
              "    ShipCalcParam(ship);",
              "}",
              "",
              "function CutStrLenght(str line, int lenght)",
              "{",
              "    if(count(line) > lenght)",
              "    {",
              "        line = substr(line, 0, lenght - 2); //Снимаем с конца всего 2 символа вместо 3, т.к. символы точек сами по себе очень небольшие",
              "        if(substr(line, lenght - 3, 1) == ' ') line = substr(line, 0, lenght - 3); //Если последний оставшийся символ в строке - пробел",
              "        line = line + '...';",
              "    }",
              "",
              "    result = line;",
              "}",
              "",
              "function InitNewWBOperation(ref operation_array, dword military_base_id, int by_player = 0)",
              "{",
              "    ArrayClear(operation_array);",
              "    ArrayDelete(operation_array, 0);",
              "",
              "    ArrayAdd(operation_array, CurTurn(), 'PlanningDay'); //Нужен, чтобы не обнулять настройки операции каждый раз, когда игрок выходит из диалога планирования",
              "    ArrayAdd(operation_array, military_base_id, 'MilitaryBaseId');",
              "    //Возможные уровни вовлечения игрока в организацию атаки (полностью аналогично значениям operation_lvl):",
              "    //OrganizedByPlayer == 0 - игрок не может заказать никакую операцию, поскольку имеет 0 звание",
              "    //OrganizedByPlayer == 1 - игрок может заказать обычную операцию (аналог ванильной), когда целевую систему и состав нападающих определяет ВБ, а игрок только платит",
              "    //OrganizedByPlayer == 2 - игрок может заказать операцию, а также может выбрать один из флагманов (если он будет среди военных кораблей) своим командным кораблём и самолично повести атакующую группу в бой",
              "    //OrganizedByPlayer == 3 - игрок может заказать операцию с участием до двух флагманов, а также сам выбирает систему для атаки",
              "    //OrganizedByPlayer == 4 - игрок может заказать операцию с участием до двух флагманов (включая один дредноут, если подключена EvoArmada) и самой ВБ, а также сам выбирает систему для атаки",
              "    ArrayAdd(operation_array, by_player, 'OrganizedByPlayer');",
              "    ArrayAdd(operation_array, 0, 'StarToAttackId'); //Id звезды",
              "    //rrayAdd(operation_array, newarray(1), 'EnemyForcesId');",
              "    ArrayAdd(operation_array, newarray(1), 'AlliesForcesId'); //Список Id участвующих в атаке военных кораблей (после постройки корабли с планет из списка ниже также переносятся сюда)",
              "    ArrayAdd(operation_array, newarray(1), 'ShipyardsInvolvedId'); //Список Id планет (формат 'Id планеты,ход завершения постройки'), на которых будет запущено строительство новых кораблей для усиления атакующей группировки",
              "    ArrayAdd(operation_array, 0, 'FlagshipId'); //Id флагмана, возглавляющего атаку (имеет значение для игрока, решившего использовать линкор в качестве флагмана)",
              "    ArrayAdd(operation_array, 0, 'GatheringPlaceId'); //Id звезды, либо самой ВБ, если атакующие силы отправятся в бой вместе с ней",
              "    ArrayAdd(operation_array, 0, 'AttackDate'); //Дата начала атаки, когда военные корабли или ВБ получит приказ совершить прыжок в атакуемую систему",
              "    ArrayAdd(operation_array, 0, 'OperationCost'); //Для сохранения стоимости между вызовом диалогов",
              "}",
              "",
              "//Использовать общескриптовые плейсы, к сожалению, нельзя, т.к. одновременно может быть запущенно сразу несколько военных операций",
              "function OrderMoveToGatherPoint(dword ship, int oper_num)",
              "{",
              "    float angle = 0.01 * RndObject(0, 200, ship);",
              "    int dist = RndObject(0, round(0.95 * GlobalWBOperationsArray[oper_num, 'GatheringPointRadius']), ship);",
              "    OrderMove(ship, round(sin(angle * pi) * dist) + GlobalWBOperationsArray[oper_num, 'GatheringPointCoordX'], round(cos(angle * pi) * dist) + GlobalWBOperationsArray[oper_num, 'GatheringPointCoordY']);",
              "}",
              "function IsAllAtGatherPoint(int oper_num)",
              "{",
              "    int coordX = GlobalWBOperationsArray[oper_num, 'GatheringPointCoordX'];",
              "    int coordY = GlobalWBOperationsArray[oper_num, 'GatheringPointCoordY'];",
              "    int dist_to = GlobalWBOperationsArray[oper_num, 'GatheringPointRadius'];",
              "    for(int i = ArrayDim(GlobalWBOperationsArray[oper_num, 'AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "    {",
              "        dword ship = IdToShip(GlobalWBOperationsArray[oper_num, 'AlliesForcesId', i]);",
              "        if(Id(ShipStar(ship)) != GlobalWBOperationsArray[oper_num, 'GatheringPlaceId'])",
              "        {",
              "            result = 0;",
              "            exit;",
              "        }",
              "        if(DistCoords(coordX, coordY, CoordX(ship), CoordY(ship)) > dist_to)",
              "        {",
              "            result = 0;",
              "            exit;",
              "        }",
              "    }",
              "",
              "    result = 1;",
              "}",
              "function IsShipAtGatherPoint(dword ship, int oper_num)",
              "{",
              "    if(Id(ShipStar(ship)) != GlobalWBOperationsArray[oper_num, 'GatheringPlaceId'])",
              "    {",
              "        result = 0;",
              "        exit;",
              "    }",
              "    if(DistCoords(GlobalWBOperationsArray[oper_num, 'GatheringPointCoordX'], GlobalWBOperationsArray[oper_num, 'GatheringPointCoordY'], CoordX(ship), CoordY(ship)) > GlobalWBOperationsArray[oper_num, 'GatheringPointRadius'])",
              "    {",
              "        result = 0;",
              "        exit;",
              "    }",
              "",
              "    result = 1;",
              "}",
              "function IsAllAtMilitaryBase(dword base, int oper_num)",
              "{",
              "    for(int i = ArrayDim(GlobalWBOperationsArray[oper_num, 'AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "    {",
              "        dword ship = IdToShip(GlobalWBOperationsArray[oper_num, 'AlliesForcesId', i]);",
              "        if(GetShipRuins(ship) != base)",
              "        {",
              "            result = 0;",
              "            exit;",
              "        }",
              "    }",
              "",
              "    result = 1;",
              "}",
              "",
              "function AttackWarriorsActCode() //t_OnDeath",
              "{",
              "    dword warrior = ScriptItemActShip();",
              "    int oper_num = GetData(3, warrior);",
              "    warrior = Id(warrior);",
              "    for(int i = ArrayDim(GlobalWBOperationsArray[oper_num, 'AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "    {",
              "        if(GlobalWBOperationsArray[oper_num, 'AlliesForcesId', i] == warrior)",
              "        {",
              "            ArrayDelete(GlobalWBOperationsArray[oper_num, 'AlliesForcesId'], i);",
              "            exit;",
              "        }",
              "    }",
              "}",
              "",
              "function FindAllMilitaryShipsInSector(dword sector, ref array, int cost_count = 0)",
              "{",
              "    //Принцип ванильного подбора военных в группу для атаки системы (флагманы добавляются в группу, наряду с обычными военными):",
              "    //Военные собираются с одного случайного сектора, в котором обязательно должны присутствовать вражеские корабли (полностью коалиционный сектор выберет, только если на него в момент проверки напали)",
              "    //Проверяемый сектор обновляется при каждом новом запросе игрока с ВБ (но может рандомно выбрать один и тот же сектор несколько раз подряд) и поэтому постоянно снимает с него деньги, а не только при успехе поиска",
              "    //Перебор набирает военных в группу до тех пор, пока их суммарная относительная сила не сравняются с силой врага в атакуемой системе",
              "    //Сперва в группу добавляются военные, которые сидят на своих планетах, и только если их не хватило, происходит добавление тех, кто в данный момент занят чем-то ещё (на патруле или в другой системе, например)",
              "    //В группу никогда не набираются корабли с приказом преследования, т.к. считается, что они сражаются, а потому заняты",
              "",
              "    ArrayClear(array);",
              "",
              "    unknown warriors = newarray(1);",
              "    unknown battleships = newarray(1);",
              "    unknown dreadnoughts = newarray(1);",
              "    if(cost_count) //Если необходимо прикинуть стоимость \"найма\" военных на операцию с ВБ, то проще сделать это сразу",
              "    {",
              "        int cost;",
              "        unknown warriors_cost = newarray(1);",
              "        unknown battleships_cost = newarray(1);",
              "        unknown dreadnoughts_cost = newarray(1);",
              "    }",
              "    int wars_count = 0;",
              "    for(int i = ConStars(sector) - 1; i >= 0; i = i - 1)",
              "    {",
              "        dword star = ConStar(sector, i);",
              "        if(StarOwner(star)) continue; //Если система не под контролем Коалиции",
              "        if(StarBattle(star)) continue; //Если система под атакой",
              "",
              "        for(int j = StarPlanets(star) - 1; j >= 0; j = j - 1)",
              "        {",
              "            dword planet = StarPlanets(star, j);",
              "            if(PlanetOwner(planet) == None) continue;",
              "",
              "            for(int k = PlanetWarriors(planet) - 1; k >= 0; k = k - 1)",
              "            {",
              "                dword warrior = PlanetWarriors(planet, k);",
              "                if(ShipOrder(warrior) == 6) continue; //Если с кем-то сражается",
              "                if(ShipInGameEvent(warrior)) continue;",
              "                if(ShipInScript(warrior, 0))",
              "                {",
              "                    if(GetShipScriptName(warrior, 3) != 'Mod_EvoArmada.Dreadnought') continue;",
              "                }",
              "",
              "                //Обычный/элитный военный",
              "                if(!ShipSubType(warrior))",
              "                {",
              "                    ArrayAdd(warriors, warrior);",
              "                    if(cost_count) ArrayAdd(warriors_cost, CalcHireWarriorCost(warrior, 0));",
              "                }",
              "                else",
              "                {",
              "                    //Линкор",
              "                    if(ShipType(warrior) != 'Dreadnought')",
              "                    {",
              "                        ArrayAdd(battleships, warrior);",
              "                        if(cost_count) ArrayAdd(battleships_cost, CalcHireWarriorCost(warrior, 1));",
              "                    }",
              "                    //Дредноут (выносим в отдельную категорию, чтобы отсекать их при недостаточном звании/авторитете игрока)",
              "                    else",
              "                    {",
              "                        ArrayAdd(dreadnoughts, warrior);",
              "                        if(cost_count) ArrayAdd(dreadnoughts_cost, CalcHireWarriorCost(warrior, 2));",
              "                    }",
              "                }",
              "",
              "                wars_count = wars_count + 1;",
              "            }",
              "        }",
              "    }",
              "",
              "    ArrayAdd(array, warriors, 'Warriors');",
              "    warriors = newarray(1);",
              "    ArrayAdd(array, battleships, 'Battleships');",
              "    battleships = newarray(1);",
              "    ArrayAdd(array, dreadnoughts, 'Dreadnoughts');",
              "    dreadnoughts = newarray(1);",
              "    if(cost_count)",
              "    {",
              "        ArrayAdd(array, warriors_cost, 'WarriorsHireCost');",
              "        warriors_cost = newarray(1);",
              "        ArrayAdd(array, battleships_cost, 'BattleshipsHireCost');",
              "        battleships_cost = newarray(1);",
              "        ArrayAdd(array, dreadnoughts_cost, 'DreadnoughtsHireCost');",
              "        dreadnoughts_cost = newarray(1);",
              "    }",
              "",
              "    result = wars_count; //Чисто для возможности быстрой проверки, был ли найден хоть кто-нибудь",
              "}",
              "",
              "//Фактически обе эти функции одинаковы, но пофиг, т.к. понятые читабельные названия важнее",
              "function FindWBOperation(dword military_base_id)",
              "{",
              "    for(int i = ArrayDim(GlobalWBOperationsArray) - 1; i >= 1; i = i - 1)",
              "    {",
              "        if(GlobalWBOperationsArray[i, 'MilitaryBaseId'] == military_base_id)",
              "        {",
              "            result = i;",
              "            exit;",
              "        }",
              "    }",
              "",
              "    result = 0;",
              "}",
              "function FindObjectInArray(ref array, dword obj)",
              "{",
              "    for(int i = ArrayDim(array) - 1; i >= 1; i = i - 1)",
              "    {",
              "        if(array[i] == obj)",
              "        {",
              "            result = i;",
              "            exit;",
              "        }",
              "    }",
              "",
              "    result = -1;",
              "}",
              "",
              "//Ищет систему в автоматическом режиме, либо собирает массив подходящих для атаки систем, которые может выбрать игрок",
              "function FindStarToAttack(dword ruin = 0, ref array)",
              "{",
              "    //Принцип ванильного определения системы для атаки:",
              "    //Каждая захваченная врагом система суммирует дистанции до всех коалиционных систем в Галактике, после чего сумма этих дистанций перемножается на Rnd(1.0, 2.0)",
              "    //по итогу выбирается система с наименьшим значением",
              "",
              "    unknown stars_arr = newarray(1);",
              "    unknown dist_arr = newarray(1);",
              "    dist_arr[0] = -1; //Для корректности сортировки ебучих дабомассивов",
              "",
              "    dword pirate_sector = StarToCon(PlanetToStar(PlanetPirateClan()));",
              "    for(int i = GalaxyStars() - 1; i >= 0; i = i - 1)",
              "    {",
              "        dword star = GalaxyStar(i);",
              "        if(!StarOwner(star)) continue; //Проверяем только враждебные Коалиции системы",
              "        if(StarBattle(star)) continue;",
              "        if(StarToCon(star) == pirate_sector) continue;",
              "",
              "        int dist_summ = 0;",
              "        for(int j = GalaxyStars() - 1; j >= 1; j = j - 1)",
              "        {",
              "            dword coal_star = GalaxyStar(j);",
              "            if(StarOwner(coal_star)) continue; //Запоминаем дистанции только до коалиционных систем",
              "            if(StarCustomFaction(coal_star) != '') continue;",
              "            dist_summ = dist_summ + StarNearbyStarsDist(star, j);",
              "        }",
              "",
              "        ArrayAdd(stars_arr, star);",
              "        ArrayAdd(dist_arr, dist_summ);",
              "    }",
              "",
              "    //Заносим в массив список всех подходящих для атаки систем (далее игрок будет сам выбирать из списка)",
              "    //Игроку на выбор будут доступны N систем с ближайшими суммами дистанций до Коалиционных систем",
              "    if(GetVariableType(array) == 9)//if(array)",
              "    {",
              "        ArrayClear(array);",
              "        ArraySort(dist_arr, stars_arr);",
              "        for(i = 1; i < ArrayDim(stars_arr); i = i + 1) ArrayAdd(array, stars_arr[i]);",
              "        exit;",
              "    }",
              "    //Выбираем систему автоматически, по ванильному принципу",
              "    else",
              "    {",
              "        if(ruin) for(i = ArrayDim(dist_arr) - 1; i >= 1; i = i - 1) dist_arr[i] = round(0.1 * RndObject(10, 20, ruin) * dist_arr[i]);",
              "        else if(ruin) for(i = ArrayDim(dist_arr) - 1; i >= 1; i = i - 1) dist_arr[i] = round(0.1 * Rnd(10, 20) * dist_arr[i]);",
              "        ArraySort(dist_arr, stars_arr);",
              "        result = stars_arr[1];",
              "        exit;",
              "    }",
              "}",
              "",
              "function CalcHireWarriorCost(dword warrior, int type = 0)",
              "{",
              "    //Обычный военный",
              "    if(!type)",
              "    {",
              "        float coef = PortionInDiapason(GetShipBestStrength(warrior), 0.1, 10.0, 0.3, 3.0);",
              "        result = round(coef * GalaxyMoney(2, ShipPilotRace(warrior)));",
              "    }",
              "    //Линкор",
              "    else if(type == 1)",
              "    {",
              "        coef = PortionInDiapason(GetShipBestStrength(warrior), 0.75, 750.0, 2.5, 7.5);",
              "        result = round(coef * GalaxyMoney(2, ShipPilotRace(warrior)) * 12.5);",
              "    }",
              "    //Дредноут",
              "    else if(type == 2)",
              "    {",
              "        coef = PortionInDiapason(GetShipBestStrength(warrior), 1.0, 1000.0, 3.75, 12.5);",
              "        result = round(coef * GalaxyMoney(2, ShipPilotRace(warrior)) * 7.5);",
              "    }",
              "    //Военная база",
              "    else /*if(type == 3)*/",
              "    {",
              "        coef = PortionInDiapason(GetShipBestStrength(warrior), 1.0, 1000.0, 3.75, 12.5);",
              "        result = round(coef * GalaxyMoney(2, ShipPilotRace(warrior)) * 7.5);",
              "    }",
              "}",
              "",
              "function CalcBuildWarriorStats(dword planet, int type = 0)",
              "{",
              "    //Считаем цену постройки военного на данной планете (чем более продвинута планета по ТУ, тем дороже обойдётся постройка)",
              "    if(!type)",
              "    {",
              "        int stat = PlanetInventionLevel(planet, 7) - GalaxyTechLevel();",
              "        float coef = max(1.0 + (0.15 * stat), 0.2); //От 0.2 до 2.2",
              "        result = round(coef * GalaxyMoney(2, PlanetRace(planet)) * 3.0);",
              "    }",
              "    //Считаем условную силу будущего военного (также зависит от ТУ планеты)",
              "    else",
              "    {",
              "        stat = PlanetInventionLevel(planet, 7) - GalaxyTechLevel();",
              "        coef = max(1.0 + (0.15 * stat), 0.2); //От 0.2 до 2.2",
              "        result = round(coef * average_warrior_power);",
              "    }",
              "}",
              "",
              "function TransformShipsIntoEachOther(dword player, dword flagship)",
              "{",
              "    //Первым кораблём всегда должен быть игрок!",
              "    //Чтобы игрок мог продолжать пользоваться своими транками, но при этом случайно не получил чужих",
              "    str trancs_str = '';",
              "    for(int i = ShipArts(player); i >= 0; i = i - 1)",
              "    {",
              "        dword art = ShipArts(player, i);",
              "        if(ItemType(art) != t_ArtefactTranclucator) continue;",
              "        if(trancs_str != '') trancs_str = trancs_str + ',' + art;",
              "        else trancs_str = art;",
              "    }",
              "",
              "    ShipExchangeToShip(player, flagship, 0); //Обмен списками предметов, включая корпуса",
              "    ShipCalcParam(player);",
              "    ShipCalcParam(flagship);",
              "",
              "    dword hull = ShipEqInSlot(Player(), t_Hull);",
              "    //Выставляю и снимаю NoDrop, чтобы игрок не мог крашнуть игру, кликнув на флагманский корпус, для которого не имеется графики предмета",
              "    if(HullType(hull) == 10) hull_no_drop_mark = NoDropItem(hull, 1); //Игрок садится на флагман",
              "    else NoDropItem(ShipEqInSlot(flagship, t_Hull), hull_no_drop_mark); //Игрок покидает флагман",
              "",
              "    for(i = ShipArts(player); i >= 0; i = i - 1)",
              "    {",
              "        art = ShipArts(player, i);",
              "        if(ItemType(art) != t_ArtefactTranclucator) continue;",
              "        GetArtFromShip(player, art);",
              "        AddItemToShip(flagship, art);",
              "    }",
              "    for(i = ParsCountFromString(trancs_str, ','); i >= 0; i = i - 1)",
              "    {",
              "        art = GetParFromString(trancs_str, ',', i, 0);",
              "        GetArtFromShip(flagship, art);",
              "        AddItemToShip(player, art);",
              "    }",
              "",
              "    //По умолчанию вместе с пушками также переносятся и цели, записанные в них, а это нам здесь вообще не к чему",
              "    for(i = ShipCntWeapon(player); i >= 1; i = i - 1) WeaponTarget(ShipWeapon(player, i), 0);",
              "    for(i = ShipCntWeapon(flagship); i >= 1; i = i - 1) WeaponTarget(ShipWeapon(flagship, i), 0);",
              "",
              "    ShipExchangeToShip(player, flagship, 1); //Обмен ShipSpecialBonuses()",
              "",
              "    //Не хочу усложнять обмен инфошками сверх необходимости",
              "    i = ShipFindCustomShipInfoByType(player, 'EvoArmada_CapitalShipInfos');",
              "    if(~i)",
              "    {",
              "        i = ShipCustomShipInfoData(player, i, 1);",
              "        ShipDeleteCustomShipInfo(player, 'EvoArmada_CapitalShipInfos');",
              "        ShipSpecialBonuses(player, bonAttacks, 0);",
              "    }",
              "    int j = ShipFindCustomShipInfoByType(flagship, 'EvoArmada_CapitalShipInfos');",
              "    if(~j)",
              "    {",
              "        j = ShipCustomShipInfoData(flagship, j, 1);",
              "        ShipDeleteCustomShipInfo(flagship, 'EvoArmada_CapitalShipInfos');",
              "        ShipSpecialBonuses(flagship, bonAttacks, 0);",
              "    }",
              "",
              "    if(~i)",
              "    {",
              "        ShipAddCustomShipInfo(flagship, 'EvoArmada_CapitalShipInfos', 'NoShow', i);",
              "        ShipSpecialBonuses(flagship, bonAttacks, i);",
              "    }",
              "    if(~j)",
              "    {",
              "        ShipAddCustomShipInfo(player, 'EvoArmada_CapitalShipInfos', 'NoShow', j);",
              "        ShipSpecialBonuses(player, bonAttacks, j);",
              "    }",
              "",
              "    i = ShipFindCustomShipInfoByType(player, 'ShuNukes_NuclearMissiles');",
              "    if(~i)",
              "    {",
              "        //Сбрасываем маркер выстрела, который игрок, возможно, выставил перед посадкой на флагман или наоборот",
              "        ShipCustomShipInfoData(player, i, 1, 0);",
              "        ShipCustomShipInfoTextData(player, i, 3, '');",
              "",
              "        //Игрок садится на флагман",
              "        if(HullType(hull) == 10)",
              "        {",
              "            //Ищем ядерное оружие также на флагмане",
              "            j = ShipFindCustomShipInfoByType(flagship, 'ShuNukes_NPCNuclearMissiles');",
              "            if(j == -1) j = ShipFindCustomShipInfoByType(flagship, 'ShuNukes_NPCNuclearMissilesNoArmada');",
              "            if(~j)",
              "            {",
              "                //Взаимообмен",
              "                str params = ShipCustomShipInfoTextData(flagship, j, 1); //Тип экипированных торпед",
              "                ShipCustomShipInfoTextData(flagship, j, 1, ShipCustomShipInfoTextData(player, i, 1, params));",
              "                params = ShipCustomShipInfoTextData(flagship, j, 2); //Количество шахт и, через запятую, Id предмета, занимающего вес под установки",
              "                ShipCustomShipInfoTextData(flagship, j, 2, ShipCustomShipInfoTextData(player, i, 2, params));",
              "            }",
              "",
              "            //Пускай часть работы инфошка выполнит за меня автоматически",
              "            CreateActCodeEvent(t_OnPlayerChangeHull, 'ShuNukes_NuclearMissiles', Player(), ShipEqInSlot(Player(), t_Hull), ShipEqInSlot(flagship, t_Hull));",
              "            CreateActCodeEvent(t_OnReEnteringForm, 'ShuNukes_NuclearMissiles', Player(), 0, 0);",
              "",
              "            //Переносим таймер перезарядки флагмана на игрока (t_OnPlayerChangeHull заводит его с нуля)",
              "            if(~j) ShipCustomShipInfoData(player, i, 3, ShipCustomShipInfoData(flagship, j, 3));",
              "        }",
              "        //Игрок покидает флагман",
              "        else",
              "        {",
              "            //Ищем ядерное оружие также на флагмане",
              "            j = ShipFindCustomShipInfoByType(flagship, 'ShuNukes_NPCNuclearMissiles');",
              "            if(j == -1) j = ShipFindCustomShipInfoByType(flagship, 'ShuNukes_NPCNuclearMissilesNoArmada');",
              "            if(~j)",
              "            {",
              "                //Обновляем количество оставшихся на флагмане торпед с учётом тех, которые мог выстрелить игрок",
              "                dword nukes = RunFunctionFromScript('Mod_ShuNukes', 'FindShipItemById', flagship, ShipCustomShipInfoTextData(flagship, j, 3));",
              "                if(nukes) ShipCustomShipInfoData(flagship, j, 1, ItemSize(nukes, 'Count'));",
              "                else throw 'Choosed nuke torpedos are missing at hold of ' + Name(flagship) + '!';",
              "",
              "                //Взаимообмен",
              "                params = ShipCustomShipInfoTextData(player, i, 1); //Тип экипированных торпед",
              "                ShipCustomShipInfoTextData(player, i, 1, ShipCustomShipInfoTextData(flagship, j, 1, params));",
              "                params = ShipCustomShipInfoTextData(player, i, 2); //Количество шахт и, через запятую, Id предмета, занимающего вес под установки",
              "                ShipCustomShipInfoTextData(player, i, 2, ShipCustomShipInfoTextData(flagship, j, 2, params));",
              "            }",
              "",
              "            //Пускай часть работы инфошка выполнит за меня автоматически",
              "            CreateActCodeEvent(t_OnPlayerChangeHull, 'ShuNukes_NuclearMissiles', Player(), ShipEqInSlot(Player(), t_Hull), ShipEqInSlot(flagship, t_Hull));",
              "            CreateActCodeEvent(t_OnReEnteringForm, 'ShuNukes_NuclearMissiles', Player(), 0, 0);",
              "",
              "            //Переносим таймер перезарядки игрока (который типа управлял флагманом) на флагман (t_OnPlayerChangeHull заводит его с нуля)",
              "            if(~j)",
              "            {",
              "                ShipCustomShipInfoData(flagship, j, 3, ShipCustomShipInfoData(player, i, 3));",
              "                ShipCustomShipInfoData(player, i, 3, 0); //И сбрасываем таймер перезарядки игроку (типа перезарядила бортовая команда)",
              "            }",
              "        }",
              "    }",
              "",
              "    //Проверка на камуфляж игрока (меняет скин автоматически, так что запоминать его через Chameleon() не нужно)",
              "    if(~PlayerUsedCamo) //Ранее камуфляж был записан в переменную, активируем",
              "    {",
              "        PlayerChameleonCurType(PlayerUsedCamo);",
              "        //PlayerChameleonDetected(PlayerUsedCamo, PlayerUsedCamoDetect);",
              "        PlayerChameleonDetected(PlayerUsedCamo, 1); //Логично, что после вылета игрока прямо из флагмана, доминаторы НАВЕРНЯКА что-то заподозрят",
              "        PlayerUsedCamo = -1;",
              "        //PlayerUsedCamoDetect = 0;",
              "    }",
              "    else //Иначе записываем в переменную камуфляж, который, возможно, надет на игрока сейчас, после чего снимаем его",
              "    {",
              "        PlayerUsedCamo = PlayerChameleonCurType();",
              "        if(~PlayerUsedCamo)",
              "        {",
              "            //PlayerUsedCamoDetect = PlayerChameleonDetected(PlayerUsedCamo);",
              "            PlayerChameleonCurType(-1);",
              "        }",
              "    }",
              "",
              "    ShipExchangeToShip(player, flagship, 2); //Обмен графических оболочек (скинов)",
              "",
              "    str text = ShipName(player);",
              "    SetName(player, ShipName(flagship));",
              "    SetName(flagship, text);",
              "",
              "    i = ShipOwner(player);",
              "    ShipOwner(player, ShipOwner(flagship));",
              "    ShipOwner(flagship, i);",
              "",
              "    text = ShipType(player);",
              "    ShipType(player, ShipType(flagship));",
              "    ShipType(flagship, text);",
              "",
              "    ShipCalcParam(player);",
              "    ShipCalcParam(flagship);",
              "}",
              "",
              "function PlayerActCode() //t_OnStep11, t_OnChameleonConfusion",
              "{",
              "    if(ScriptItemActionType(t_OnStep))",
              "    {",
              "        if(ArrayDim(GlobalWBOperationsArray) <= 1) exit;",
              "",
              "        dword ship = GetShipRuins(Player());",
              "        if(ship)",
              "        {",
              "            //Игрок совершает посадку на флагман",
              "            if(ShipInCurScript(ship))",
              "            {",
              "                if(StateIs(ship, 'WarriorsOnAttack'))",
              "                {",
              "                    //На случай, если был подключён ExpScienceRanks и игрок летел на \"Клеще\"",
              "                    if(!findsubstr(BonusNumInCfg(HullSpecial(Player())), 'ExpScienceRanks_Tick')) InterfaceState('StarMap', 'TickHullModeSwitcher', 0);",
              "",
              "                    TransferShip(Player(), ShipStar(Player()));",
              "                    ShipSetCoords(Player(), CoordX(ship), CoordY(ship));",
              "                    ShipAngle(Player(), ShipAngle(ship));",
              "                    OrderNone(Player());",
              "",
              "                    TransferShip(ship, Player());",
              "                    OrderNone(ship);",
              "                    OrderLock(ship, 1);",
              "                    SetData(-3, 0, ship);",
              "",
              "                    if(ShipSkill(Player(), 'Leadership') >= 6) i = 2;",
              "                    else i = 3;",
              "                    TransformShipsIntoEachOther(Player(), ship);",
              "                    CapitalShipStats(Player(), 3);",
              "                    ShipSpecialBonuses(Player(), bonSkill1, ShipSpecialBonuses(Player(), bonSkill1) - i);",
              "                    ShipSpecialBonuses(Player(), bonSkill2, ShipSpecialBonuses(Player(), bonSkill2) - i);",
              "                    ShipAddCustomShipInfo(Player(), 'ShuWarriors_FlagshipDirectControl', '', Id(ship), i);",
              "",
              "                    ShipVisibility(Player(), -1, 0.0);",
              "",
              "                    dword star = ShipStar(Player());",
              "                    for(int i = StarPlanets(star) - 1; i >= 0; i = i - 1) NoLanding(StarPlanets(star, i), 1);",
              "                    for(i = StarRuins(star) - 1; i >= 0; i = i - 1) NoLanding(StarRuins(star, i), 1);",
              "                    NoJump(1);",
              "                }",
              "            }",
              "        }",
              "    }",
              "    else if(t_OnDealingFatalDamage) {",
              "        if(!ShipOnSidePirateClan(Player())) {",
              "            tstr1 = ShipType(ScriptItemActObject1());",
              "",
              "            if(tstr1 == 'Rattor') ShipRankPoints(Player(),ShipRankPoints(Player())+1);",
              "            else if(tstr1 == 'DomTrank') ShipRankPoints(Player(),ShipRankPoints(Player())+1);",
              "            else if(tstr1 == 'DomikRanger') ShipRankPoints(Player(),ShipRankPoints(Player())+15);",
              "            else if(tstr1 == 'DomRuins') ShipRankPoints(Player(),ShipRankPoints(Player())+60);",
              "            else if(tstr1 == 'Klissan0') ShipRankPoints(Player(),ShipRankPoints(Player())+60);",
              "            else if(tstr1 == 'Klissan1') ShipRankPoints(Player(),ShipRankPoints(Player())+30);",
              "            else if(tstr1 == 'Klissan2') ShipRankPoints(Player(),ShipRankPoints(Player())+20);",
              "            else if(tstr1 == 'Klissan3') ShipRankPoints(Player(),ShipRankPoints(Player())+10);",
              "            else if(tstr1 == 'Klissan4') ShipRankPoints(Player(),ShipRankPoints(Player())+5);",
              "            else if(tstr1 == 'Klissan5') ShipRankPoints(Player(),ShipRankPoints(Player())+2);",
              "            else if(tstr1 == 'Neurolink') ShipRankPoints(Player(),ShipRankPoints(Player())+40);",
              "            else if(tstr1 == 'PirateClan_mod_tryfixbalance') ShipRankPoints(Player(),ShipRankPoints(Player())+15);",
              "            else if(tstr1 == 'PirateCorvette') ShipRankPoints(Player(),ShipRankPoints(Player())+25);",
              "            else if(tstr1 == 'PirateFrigate') ShipRankPoints(Player(),ShipRankPoints(Player())+45);",
              "            else if(tstr1 == 'PirateGalleon') ShipRankPoints(Player(),ShipRankPoints(Player())+60);",
              "            else if(tstr1 == 'Thug') ShipRankPoints(Player(),ShipRankPoints(Player())+12);",
              "            else if(tstr1 == 'Khan') ShipRankPoints(Player(),ShipRankPoints(Player())+15);",
              "        }",
              "    }",
              "    else //if(ScriptItemActionType(t_OnChameleonConfusion))",
              "    {",
              "        if(!ScriptItemActParam()) exit; //Если корабль по умолчанию всегда распознаёт под камуфляжем игрока",
              "        if(ArrayDim(GlobalWBOperationsArray) <= 1) exit;",
              "        if(GetShipScriptName(ScriptItemActObject1(), 3) != 'Mod_ShuWarriors.OperativeWarriors') exit; //Если игрок ещё не достиг военного звания \"Истребитель\"",
              "        ScriptItemActParam(0);",
              "        exit;",
              "    }",
              "}",
              "",
              "//Вызывать строго из диалога MilitaryOperationWBDialog!",
              "function UpdateSidePowers()",
              "{",
              "    //Считаем силу атакующих военных, включая тех, которых дозаказал к постройке игрок",
              "    coals_cnt = 0;",
              "    big_coals_cnt = 0;",
              "    coals_power = 0.0;",
              "    for(int i = ArrayDim(new_operation_arr['AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "    {",
              "        dword ship = IdToShip(new_operation_arr['AlliesForcesId', i]);",
              "        if(ShipSubType(ship)) //Линкоры и дредноуты",
              "        {",
              "            big_coals_cnt = big_coals_cnt + 1;",
              "            coals_power = coals_power + GetShipAverageStrength(ship);",
              "            continue;",
              "        }",
              "",
              "        coals_cnt = coals_cnt + 1;",
              "        coals_power = coals_power + GetShipAverageStrength(ship);",
              "    }",
              "",
              "    if(new_operation_arr['GatheringPlaceId'] < 0)",
              "    {",
              "        coals_cnt = coals_cnt + 1;",
              "        coals_power = coals_power + GetShipAverageStrength(cur_ruin);",
              "    }",
              "",
              "    int cnt = ArrayDim(new_operation_arr['ShipyardsInvolvedId']);",
              "    if(cnt)",
              "    {",
              "        for(i = 1; i < cnt; i = i + 1) coals_power = coals_power + CalcBuildWarriorStats(IdToPlanet(new_operation_arr['ShipyardsInvolvedId', i]), 1);",
              "    }",
              "",
              "    //Считаем точную силу врага в атакуемой системе",
              "    dword star = GalaxyStar(new_operation_arr['StarToAttackId'] - 1);",
              "    enemies_cnt = 0;",
              "    enemies_power = 0;",
              "    for(i = StarShips(star) - 1; i >= 0; i = i - 1)",
              "    {",
              "        ship = StarShips(star, i);",
              "        if(ShipStanding(ship) >= 1 && ShipStanding(ship) <= 5) continue;",
              "        //Скипаем Блазера, Келлера и махпеллу про оценке сил в системе, т.к. все они товарищи непостоянные",
              "        if(ship == Blazer()) continue;",
              "        if(ship == Keller()) continue;",
              "        if(ShipType(ship) == 'Machpella') continue;",
              "",
              "        enemies_cnt = enemies_cnt + 1;",
              "        enemies_power = enemies_power + GetShipAverageStrength(ship);",
              "    }",
              "",
              "    //Слегка завышаем силы врага в системе в счёт его ожидаемого доспавна с планет во время боя",
              "    if(StarOwner(star) == 1) enemies_power = 1.25 * enemies_power;",
              "    else enemies_power = 0.75 * enemies_power; //Пираты - трусливые обрыганы",
              "",
              "    //Считаем соотношение сил между врагом в системе и атакующими военными в процентах",
              "    coals_power_percent = round((1.0 * coals_power) / (0.01 * enemies_power));",
              "}",
              "",
              "function SpawnCaptain(dword star) {",
              "    dword plan = FindPlanet(star,'NotNone');",
              "    dword ship;",
              "",
              "    ship = BuyWarrior(plan,1000);",
              "    ShipRefit(ship,500+125*GalaxyTechLevel());",
              "    ShipType(ship,'Captain');",
              "    ShipJoin(CaptainsGroup,ship);",
              "    if(CurrentMods('Expansion\\ExpHulls')) {",
              "        tstr1 = 'ExpHulls_Rock';",
              "        if(GalaxyTechLevel() < 3) tstr1 = tstr1 + '1';",
              "        else if(GalaxyTechLevel() < 4) tstr1 = tstr1 + '2';",
              "        else if(GalaxyTechLevel() < 6) tstr1 = tstr1 + '3';",
              "        else if(GalaxyTechLevel() < 8) tstr1 = tstr1 + '4';",
              "        else if(GalaxyTechLevel() == 8) tstr1 = tstr1 + '5';",
              "",
              "        if(~FindBonusByNameInCfg(tstr1)) {",
              "            SpecialToEquipment(FindBonusByNameInCfg(tstr1),ShipEqInSlot(ship,t_Hull));",
              "        }",
              "    }",
              "    else {",
              "        SpecialToEquipment(FindBonusByNameInCfg('351'),ShipEqInSlot(ship,t_Hull));",
              "    }",
              "    while(ShipRank(ship) < 3) {",
              "        ShipRankPoints(ship,ShipNextRankPoints(ship));",
              "        ShipRaiseRank(ship);",
              "    }",
              "",
              "    //Чтобы размер корпуса обновился",
              "    Chameleon(ship);",
              "",
              "    //Чтобы защищали родную систему, не пытаясь никуда свалить",
              "    ShipSpecialBonuses(ship,bonFuel,-5000000);",
              "}",
              "",
              "//Закомменчено по причине невероятной неоптимизированности",
              "/*if(!CoalitionDefeated()) {",
              "    ArrayClear(mobilization_powers);",
              "    ArrayDelete(mobilization_powers,0);",
              "    ArrayClear(mobilization_ready);",
              "    ArrayDelete(mobilization_ready,0);",
              "    //Составляем \"мобилизационный массив\" планет",
              "    for(i=0;GalaxyStars()>i;i=i+1) {",
              "        cur_star = GalaxyStar(i);",
              "        if(StarOwner(cur_star)) continue;",
              "        if(StarCustomFaction(cur_star) != '') continue;",
              "        for(j=0;StarPlanets(cur_star)>j;j=j+1) {",
              "            if(PlanetOwner(StarPlanets(cur_star,j)) == None) continue;",
              "            if(PlanetOwner(StarPlanets(cur_star,j)) == PirateClan) continue;",
              "            ArrayAdd(mobilization_powers,Id(StarPlanets(cur_star,j)),Name(StarPlanets(cur_star,j)));",
              "            ArrayAdd(mobilization_ready,0,Name(StarPlanets(cur_star,j)));",
              "        }",
              "    }",
              "}*/",
              "",
              "function CountTargets() {",
              "    int res;",
              "",
              "    if(ControlledSystems(0) < 30) res = 3;",
              "    else if(ControlledSystems(0) < 40) res = 4;",
              "    else if(ControlledSystems(0) < 50) res = 5;",
              "    else res = 7;",
              "",
              "    result = res;",
              "}",
              "",
              "function ChooseTargets(ref sys_names, int targets_count) {",
              "    dword star1;",
              "",
              "    int not;",
              "    int koef;",
              "",
              "    unknown sys_arr = newarray(1);",
              "    ArrayClear(sys_arr);",
              "    ArrayDelete(sys_arr, 0);",
              "",
              "    ArrayClear(sys_names);",
              "    ArrayDelete(sys_names, 0);",
              "",
              "    for(i=0;GalaxyStars()>i;i=i+1) {",
              "        star1 = GalaxyStar(i);",
              "        if(!StarOwner(star1)) continue;",
              "        if(StarCustomFaction(star1) == '') continue;",
              "        //Пропускаем системы с боссами и Дицею",
              "",
              "        koef = 10;",
              "        if(StarOwner(star1) == 1) koef = 15;",
              "        if(StarCustomFaction(star1) == 'Klissan') koef = 20;",
              "",
              "        if(!StarBattle(star1) && StarOwner(star1) != 2) {",
              "            ArrayAdd(sys_arr,StarShips(star1) * koef / 10,Name(star1));",
              "        }",
              "        else {",
              "            not = 0;",
              "            for(j=0;StarShips(star1)>j;j=j+1) {",
              "                if(ShipStanding(StarShips(star1)) == 1 || ShipStanding(StarShips(star1)) == 4 || ShipStanding(StarShips(star1)) == 5 || ShipStanding(StarShips(star1)) == 6) not = not + 1;",
              "            }",
              "            ArrayAdd(sys_arr,(StarShips(star1) - not) * koef / 190);",
              "            ArrayAdd(sys_names,Id(star1));",
              "        }",
              "    }",
              "",
              "    ArraySort(sys_arr,sys_names);",
              "    //Удаляем лишние системки",
              "    i = ArrayDim(sys_arr) - 1;",
              "    while(i > targets_count) {",
              "        i = i - 1;",
              "        ArrayDelete(sys_arr,i);",
              "        ArrayDelete(sys_names,i);",
              "    }",
              "}",
              "",
              "function ClearGiftInfos() {",
              "    int i;",
              "    int j;",
              "    dword tdwd1;",
              "    dword tdwd2;",
              "",
              "    for(i=0;GalaxyStars()>i;i=i+1) {",
              "        tdwd1 = GalaxyStar(i);",
              "        for(j=0;StarShips(tdwd1)>j;j=j+1) {",
              "            tdwd2 = StarShips(tdwd1,j);",
              "            if(~ShipFindCustomShipInfoByType(tdwd2,'ShuWarriors_SystemDetecting')) ShipDeleteCustomShipInfo(tdwd2,'ShuWarriors_SystemDetecting');",
              "        }",
              "    }",
              "}",
              "",
              "function g_DetectSystem(dword star) {",
              "    if(!StarOwner(star) && StarCustomFaction(star) == '') exit;",
              "    target_star = Id(star);",
              "}",
              "",
              "//Чтобы не нападали массово сразу, Коалиции нужно в себя ещё прийти",
              "mass_attack_cd = 300 + 730 + GalaxyDiffLevels() * 2;",
              "",
              "//Спавн элитной группы обороны",
              "function FindConsForElites() {",
              "}",
              "function FindMainWB(dword con1,con2,con3) {",
              "}",
              "function SpawnEliteGroup(dword base) {",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  112,
          "#":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Если в настоящий момент скриптом запущена хотя бы одна военная операция",
              "tint1 = ArrayDim(GlobalWBOperationsArray) - 1;",
              "if(tint1)",
              "{",
              "    for(i = tint1; i >= 1; i = i - 1)",
              "    {",
              "        //Если атакуемая система была как-либо захвачена Коалицией, то операция в любом случае завершена",
              "        cur_star = GalaxyStar(GlobalWBOperationsArray[i, 'StarToAttackId'] - 1);",
              "",
              "        check = 1;",
              "        if(!StarOwner(cur_star))",
              "        {",
              "            if(StarCustomFaction(cur_star) == '')",
              "            {",
              "                cur_ruin = IdToShip(GlobalWBOperationsArray[i, 'MilitaryBaseId']);",
              "                if(cur_ruin)",
              "                {",
              "                    //Если игрок уже лежит в криокапсуле на ВБ, то отменять операцию поздно",
              "                    if(GetShipRuins(Player()) != cur_ruin || CurrentForm() != 'Jump') check = 0;",
              "                }",
              "                else check = 0; //ВБ была уничтожена",
              "            }",
              "        }",
              "",
              "        //Проверка на завершение операции по причине освобождения атакуемой системы (даже если военные туда ещё не долетели)",
              "        if(!check)",
              "        {",
              "            if(cur_ruin) ShipOut(cur_ruin);",
              "            for(k = ArrayDim(GlobalWBOperationsArray[i, 'AlliesForcesId']) - 1; k >= 1; k = k - 1)",
              "            {",
              "                cur_ship = IdToShip(GlobalWBOperationsArray[i, 'AlliesForcesId', k]);",
              "",
              "                //Типа недостроенные военные, заказанные на планетах, \"отменяются\"",
              "                if(int(GetData(0, cur_ship)) > 0)",
              "                {",
              "                    if(StateIs(cur_ship, 'WarriorsOnPrepare'))",
              "                    {",
              "                        ShipOut(cur_ship);",
              "                        ShipDestroy(cur_ship, 1);",
              "                        ArrayDelete(GlobalWBOperationsArray[i, 'AlliesForcesId'], k);",
              "                        continue;",
              "                    }",
              "                }",
              "",
              "                //Если данный корабль является флагманом операции",
              "                if(GetData(0, cur_ship))",
              "                {",
              "                    //Если игрок находится в режиме прямого управления флагманом",
              "                    if(int(GetData(0, cur_ship)) == -3)",
              "                    {",
              "                        SetData(-4, 0, cur_ship);",
              "                        continue;",
              "                    }",
              "                    //Если игрок совершает посадку на флагман для перехода в режим прямого управления",
              "                    else if(ShipOrder(Player()) == 2)",
              "                    {",
              "                        if(ShipOrderObj(Player()) == cur_ship) OrderMove(Player(), CoordX(cur_ship), CoordY(cur_ship));",
              "                    }",
              "",
              "                    //Снимаем уникальный временный тип с флагмана",
              "                    ShipType(cur_ship, Format(ShipType(cur_ship), 'Flagship', '', ''));",
              "                }",
              "",
              "                OrderLock(cur_ship, 0);",
              "                ShipOut(cur_ship);",
              "                ArrayDelete(GlobalWBOperationsArray[i, 'AlliesForcesId'], k);",
              "            }",
              "            EtherDelete('ShuWarriors_Operation' + GlobalWBOperationsArray[i, 'MilitaryBaseId']);",
              "        }",
              "        else",
              "        {",
              "            //Если местом сбора военных была выбрана система",
              "            if(GlobalWBOperationsArray[i, 'GatheringPlaceId'] > -1)",
              "            {",
              "                //Если подошёл срок начинать операцию, начинаем её",
              "                if(GlobalWBOperationsArray[i, 'AttackDate'] <= CurTurn())",
              "                {",
              "                    //Если все военные уже добрались до точки сбора в системе (иначе откладываем начало)",
              "                    if(IsAllAtGatherPoint(i))",
              "                    {",
              "                        //Отправляем всех военных в атаку на целевую систему (смена стейта случится автоматически по прилёту)",
              "                        for(k = ArrayDim(GlobalWBOperationsArray[i, 'AlliesForcesId']) - 1; k >= 1; k = k - 1)",
              "                        {",
              "                            cur_ship = IdToShip(GlobalWBOperationsArray[i, 'AlliesForcesId', k]);",
              "                            SetData(-Id(cur_star), 1, cur_ship);",
              "                            SetData(0, 2, cur_ship);",
              "                            OrderLock(cur_ship, 0);",
              "                            ChangeState('WarriorsOnPrepare', cur_ship); //Сразу же применяем новый приказ",
              "                        }",
              "",
              "                        cur_ruin = IdToShip(GlobalWBOperationsArray[i, 'MilitaryBaseId']);",
              "                        if(cur_ruin) ShipOut(cur_ruin); //Больше нам ВБ по ходу операции не нужна",
              "                        EtherDelete('ShuWarriors_Operation' + GlobalWBOperationsArray[i, 'MilitaryBaseId']);",
              "                    }",
              "                }",
              "            }",
              "            //Если точкой сбора перед атакой для военных была выбрана ВБ",
              "            else",
              "            {",
              "                cur_ruin = IdToShip(GlobalWBOperationsArray[i, 'MilitaryBaseId']);",
              "                if(cur_ruin)",
              "                {",
              "                    //ВБ готовится к операции",
              "                    if(StateIs(cur_ruin, 'WBOnPrepare'))",
              "                    {",
              "                        //Если ВБ уже ушла в гипер на атакуемую систему",
              "                        if(ShipStar(cur_ruin) == cur_star)",
              "                        {",
              "                            for(k = ArrayDim(GlobalWBOperationsArray[i, 'AlliesForcesId']) - 1; k >= 1; k = k - 1)",
              "                            {",
              "                                cur_ship = IdToShip(GlobalWBOperationsArray[i, 'AlliesForcesId', k]);",
              "                                HullHP(cur_ship, 'To100');",
              "                                ShipRefit(cur_ship);",
              "                                ShipRefit(cur_ship);",
              "                                ShipImproveItems(cur_ship, 3);",
              "                                OrderLock(cur_ship, 0);",
              "                                ChangeState('WarriorsOnAttack', cur_ship);",
              "                            }",
              "",
              "                            ChangeState('WBOnAttack', cur_ruin);",
              "                            EtherDelete('ShuWarriors_Operation' + Id(cur_ruin));",
              "                        }",
              "                        else",
              "                        {",
              "                            if(GlobalWBOperationsArray[i, 'AttackDate'] <= CurTurn() + 1) //+1 здесь, чтобы предупредить выставление приказа телепортации ВБ на один день",
              "                            {",
              "                                //Если ещё не все военные добрались до ВБ (иначе откладываем начало)",
              "                                if(!IsAllAtMilitaryBase(cur_ruin, i)) ShipDestination(cur_ruin, 'Date', CurTurn() + 2);",
              "                            }",
              "",
              "                            //Пока ВБ находится в режиме подготовки к прыжку, она активно восстанавливает свой повреждённый корпус",
              "                            if(!StarBattle(ShipStar(cur_ruin)))",
              "                            {",
              "                                j = ItemSize(ShipItems(cur_ruin, 0));",
              "                                if(HullHP(cur_ruin) < j)",
              "                                {",
              "                                    j = round(0.034 * j);",
              "                                    HullHP(cur_ruin, HullHP(cur_ruin) + j);",
              "                                    //Из тёрна всё равно не получится...",
              "                                    //if(FilmFlags(0)) ShowEffect('Weapon.NoGraph', 0, cur_ruin, cur_ruin, j, 0, 0, 0,255,0);",
              "                                }",
              "",
              "                                //Выгоняем к чёрту пиратов и прочую шваль",
              "                                if(ShipInNormalSpace(cur_ruin)) {",
              "                                    dword st = ShipStar(cur_ruin);",
              "                                    for(y=0;StarShips(st)>y;y=y+1) {",
              "                                        dword st2 = StarShips(st,y);",
              "                                        if(ShipOwner(st2) == PirateClan || ShipTypeN(st2) == t_Pirate) {",
              "                                            if(GetShipRuins(st2)) {",
              "                                                if(GetShipRuins(st2) == cur_ruin) {",
              "                                                    OrderTakeOff(st2);",
              "                                                }",
              "                                            }",
              "                                        }",
              "                                    }",
              "                                }",
              "                            }",
              "                        }",
              "                    }",
              "                }",
              "                else //Если ВБ была уничтожена",
              "                {",
              "                    for(k = ArrayDim(GlobalWBOperationsArray[i, 'AlliesForcesId']) - 1; k >= 1; k = k - 1)",
              "                    {",
              "                        cur_ship = IdToShip(GlobalWBOperationsArray[i, 'AlliesForcesId', k]);",
              "                        if(ShipStar(cur_ship) != GlobalWBOperationsArray[i, 'StarToAttackId'])",
              "                        {",
              "                            //Типа недостроенные военные, заказанные на планетах, \"отменяются\"",
              "                            if(int(GetData(0, cur_ship)) > 0)",
              "                            {",
              "                                if(StateIs(cur_ship, 'WarriorsOnPrepare'))",
              "                                {",
              "                                    ShipOut(cur_ship);",
              "                                    ShipDestroy(cur_ship, 1);",
              "                                    ArrayDelete(GlobalWBOperationsArray[i, 'AlliesForcesId'], k);",
              "                                    continue;",
              "                                }",
              "                            }",
              "",
              "                            if(GetData(0, cur_ship))",
              "                            {",
              "                                //Если игрок находится в режиме прямого управления флагманом",
              "                                if(int(GetData(0, cur_ship)) == -3)",
              "                                {",
              "                                    SetData(-4, 0, cur_ship);",
              "                                    continue;",
              "                                }",
              "                                //Если игрок совершает посадку на флагман для перехода в режим прямого управления",
              "                                else if(ShipOrder(Player()) == 2)",
              "                                {",
              "                                    if(ShipOrderObj(Player()) == cur_ship) OrderMove(Player(), CoordX(cur_ship), CoordY(cur_ship));",
              "                                }",
              "                            }",
              "",
              "                            OrderLock(cur_ship, 0);",
              "                            ShipOut(cur_ship);",
              "                            ArrayDelete(GlobalWBOperationsArray[i, 'AlliesForcesId'], k);",
              "                        }",
              "                    }",
              "                    EtherDelete('ShuWarriors_Operation' + GlobalWBOperationsArray[i, 'MilitaryBaseId']);",
              "                }",
              "            }",
              "        }",
              "",
              "        //Если все участники операции уничтожены, либо были выведены из скрипта, удаляем операцию",
              "        //(больше игрок с ней всё равно ничего сделать не сможет, даже если в атакуемой системе по-прежнему висит скакнувшая туда ВБ)",
              "        if(ArrayDim(GlobalWBOperationsArray[i, 'AlliesForcesId']) <= 1)",
              "        {",
              "            //Проверка на случай, если сама ВБ ещё жива и готовится к скачку",
              "            check = 1;",
              "            if(GlobalWBOperationsArray[i, 'GatheringPlaceId'] == -1)",
              "            {",
              "                cur_ruin = IdToShip(GlobalWBOperationsArray[i, 'MilitaryBaseId']);",
              "                if(cur_ruin)",
              "                {",
              "                    if(StateIs(cur_ruin, 'WBOnPrepare')) check = 0;",
              "                }",
              "            }",
              "",
              "            //Если с операцией уже ну совсем ничего нельзя сделать - удаляем её",
              "            if(check)",
              "            {",
              "                //Перед удалением операции из массива производим перенумерацию в скриптовых объектах военных в операциях выше по списку",
              "                //(короче говоря, компенсируем будущий сдвиг)",
              "                for(j = tint1; j > i; j = j - 1)",
              "                {",
              "                    for(k = ArrayDim(GlobalWBOperationsArray[j, 'AlliesForcesId']) - 1; k >= 1; k = k - 1)",
              "                    {",
              "                        cur_ship = IdToShip(GlobalWBOperationsArray[j, 'AlliesForcesId', k]);",
              "                        SetData(j - 1, 3, cur_ship);",
              "                    }",
              "                }",
              "",
              "                tint1 = tint1 - 1;",
              "                EtherDelete('ShuWarriors_Operation' + IdToShip(GlobalWBOperationsArray[i, 'MilitaryBaseId']));",
              "                ArrayDelete(GlobalWBOperationsArray, i);",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Если пришло время постройки новой партии элитных военных",
              "if(CurTurn() >= EliteWarriorsSpawnTimer)",
              "{",
              "    //Выбирается подходящая для спавна система, с военной базой и текущим числом военных менее N",
              "    ArrayClear(tarr1);",
              "    cur_ruin = 0;",
              "    for(i = GalaxyStars() - 1; i >= 0; i = i - 1)",
              "    {",
              "        cur_star = GalaxyStar(i);",
              "",
              "        //Пропускаем не коалиционные системы и системы, в которых в данный момент идёт бой",
              "        if(StarOwner(cur_star) != 0) continue;",
              "        if(StarBattle(cur_star)) continue;",
              "",
              "        //Пропускаем системы без военной базы",
              "        if(!StarRuins(cur_star, 'WB')) continue;",
              "",
              "        //Считаем военные корабли в системе и если их более 7, пропускаем систему",
              "        check = 0;",
              "        for(j = StarPlanets(cur_star) - 1; j >= 0; j = j - 1)",
              "        {",
              "            cur_planet = StarPlanets(cur_star, j);",
              "            if(PlanetOwner(cur_planet) == None) continue;",
              "            check = check + PlanetWarriors(cur_planet);",
              "        }",
              "",
              "        if(check < 7) ArrayAdd(tarr1, cur_star);",
              "        else continue;",
              "    }",
              "",
              "    //Если таковые системы найдены, начинается строительство военных в случайной из них",
              "    if(ArrayDim(tarr1) > 1)",
              "    {",
              "        cur_star = tarr1[Rnd(1, ArrayDim(tarr1) - 1, GetObjectGenerationSeed(GalaxyPtr()) + sqr(CurTurn()))];",
              "        cur_ruin = StarRuins(cur_star, 'WB');",
              "",
              "        //Спавним на выбранной планете от 5 до 8 элитных военных",
              "        for(i = RndObject(5, 8, cur_planet); i >= 1; i = i - 1)",
              "        {",
              "            cur_ship = SpawnEliteWarrior(FindPlanet(cur_star, 'NotNone'), 500);",
              "            //После чего отправляем их на военную базу, чтобы сымитировать его \"рождение\" корабля именно на ней",
              "            TransferShip(cur_ship, cur_ruin);",
              "        }",
              "",
              "        //Обновляем таймер до следующего возможного спавна группы элитных военных",
              "        //От двух до трёх лет",
              "        EliteWarriorsSpawnTimer = CurTurn() + Rnd(730, 1095);",
              "    }",
              "}",
              "",
              "//Считаем убийства нормисов игроком",
              "for(i=GalaxyEvents()-1; i>=0; i=i-1) {",
              "    if(GalaxyEventDate(i) < CurTurn()) break;",
              "    tint2 = 0;",
              "    tstr1 = '';",
              "    if(GalaxyEventType(i)=='PlayerKillsShip' || GalaxyEventType(i)=='PlayerAssistKillsShip') {",
              "        //игрок убил кого-то",
              "        tstr1 = GalaxyEventsTextData(i,2);",
              "        tint1 = GalaxyEventData(i,5);",
              "        tint2 = 1;",
              "    }",
              "    else if(GalaxyEventType(i)=='PlayerTranclucatorAssistKillsShip' || GalaxyEventType(i)=='PlayerTranclucatorKillsShip') {",
              "        //игрок убил кого-то",
              "        tstr1 = GalaxyEventsTextData(i,3);",
              "        tint1 = GalaxyEventData(i,7);",
              "        tint2 = 1;",
              "    }",
              "    else if(GalaxyEventType(i)=='PlayerCompanionAssistKillsShip' || GalaxyEventType(i)=='PlayerCompanionKillsShip') {",
              "        //игрок убил кого-то",
              "        tstr1 = GalaxyEventsTextData(i,2);",
              "        tint1 = GalaxyEventData(i,8);",
              "        tint2 = 1;",
              "    }",
              "    else if(GalaxyEventType(i) == 'PlayerLiberatesSystem') {",
              "        //Рейнджер \"согласился\" на участие в операции вояк - дарим заготовленный подарок",
              "        if(GalaxyEventData(i,0) == target_star) {",
              "            for(j=0;StarShips(GalaxyStar(target_star-1))>j;j=j+1) {",
              "                cur_ship = StarShips(GalaxyStar(target_star-1),j);",
              "                if(~ShipFindCustomShipInfoByType(cur_ship,'ShuWarriors_SystemDetecting')) {",
              "                    if(GalaxyEventData(i,3) > 4) {",
              "                        target_star = 0;",
              "                        ClearGiftInfos();",
              "                        if(gift_type == 1) {",
              "                            Sound('Sound.NewMsg');",
              "                            ShipMoney(Player(),ShipMoney(Player())+gift_count);",
              "                            NewsAdd(\"Эге, рейнджер! Ты неплохо себя показал в этом бою. И вправду - рейнджеры чего-то да стоят! Наше командование уже перечислило тебе\"+' '+gift_count+' cr. '+\"Будем рады увидеть тебя бок о бок с нами в дальнейших сражениях\");",
              "                        }",
              "                        else if(gift_type == 2) {",
              "                            Sound('Sound.NewMsg');",
              "                            if(StarSeries(GalaxyStar(target_star-1)) == 0) tstr1 = \"Блазер\";",
              "                            else if(StarSeries(GalaxyStar(target_star-1)) == 1) tstr1 = \"Келлер\";",
              "                            else tstr1 = \"Террон\";",
              "                            NewsAdd(\"Эге, рейнджер! Ты неплохо себя показал в этом бою. И вправду - рейнджеры чего-то да стоят! Наше командование уже оформило тебе\"+' '+gift_count+' '+\"копий камуфляжа серии\"+' '+tstr1+'. '+\"Будем рады увидеть тебя бок о бок с нами в дальнейших сражениях\");",
              "                        }",
              "                        else if(gift_type == 3) {",
              "                            Sound('Sound.NewMsg');",
              "                            GiveReward(Player(),ShipPilotRace(GalaxyStar(target_star-1)),0);",
              "                            NewsAdd(\"Эге, рейнджер! Ты неплохо себя показал в этом бою. И вправду - рейнджеры чего-то да стоят! Наше командование уже оформило на твоё имя новенькую награду. Будем рады увидеть тебя бок о бок с нами в дальнейших сражениях\");",
              "                        }",
              "                        else {",
              "                            Sound('Sound.NewMsg');",
              "                            SetProgramm(gift_type,GetProgramm(gift_type)+gift_count);",
              "                            NewsAdd(\"Эге, рейнджер! Ты неплохо себя показал в этом бою. И вправду - рейнджеры чего-то да стоят! Наше командование уже оформило тебе\"+' '+gift_count+' '+\"одной из наших антидоминаторских программ. Будем рады увидеть тебя бок о бок с нами в дальнейших сражениях\");",
              "                        }",
              "",
              "                        break;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "",
              "    if(tint2 == 1) {",
              "        if(findsubstr(tstr1,'Klissan') == -1) {",
              "            if(tstr1 == 'RC' || tstr1 == 'SB' || tstr1 == 'DD' || tstr1 == 'TC' || tstr1 == 'SSB' || tstr1 == 'BK') {",
              "                Debuff = Debuff + 3;",
              "                DebuffCD = 370;",
              "                //NewsAdd('Уничтожил хорошую базу '+GalaxyEventsTextData(i,0)+' '+tstr1);",
              "            }",
              "            else if(tstr1 == 'WB' || tstr1 == 'Inhibitor' || tstr1 == 'DB') {",
              "                Debuff = Debuff + 5;",
              "                DebuffCD = 370;",
              "                //NewsAdd('Уничтожил военный объект '+GalaxyEventsTextData(i,0)+' '+tstr1);",
              "            }",
              "            else if(tstr1 == 'FemRanger' || tstr1 == 'Coalition_mod_tryfixbalance' || tstr1 == 'Builder' || tstr1 == 'RangerExplorer' || ~findsubstr(tstr1,'Nisper') || ~findsubstr(tstr1,'Crusader') || tstr1 == 'Otstupnik' || tstr1 == 'Warrior' || tstr1 == 'EliteWarrior' || ~findsubstr(tstr1,'Militiaman')) {",
              "                Debuff = Debuff + 2;",
              "                DebuffCD = 370;",
              "                //NewsAdd('Уничтожил вояку '+GalaxyEventsTextData(i,0)+' '+tstr1);",
              "            }",
              "            else if(tstr1 == 'Ranger') {",
              "                if(tint1 != 1) {",
              "                    Debuff = Debuff + 2;",
              "                    DebuffCD = 370;",
              "                    //NewsAdd('Уничтожил рейнджера '+GalaxyEventsTextData(i,0)+' '+tstr1);",
              "                }",
              "            }",
              "            else if(tstr1 == 'Dreadnought') {",
              "                Debuff = Debuff + 4;",
              "                DebuffCD = 370;",
              "                //NewsAdd('Уничтожил дредноут '+GalaxyEventsTextData(i,0)+' '+tstr1);",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "if(DebuffCD > 0) DebuffCD = DebuffCD - 1;",
              "else Debuff = 0;",
              "",
              "if(Debuff >= 30) {",
              "    Sound('Sound.NewMsg');",
              "    if(RndObject(1,3,Player()) == 3 && ShipRank(Player()) && ShipRank(Player()) < 7) {",
              "        //Игрока лишают звания за проступки",
              "        player_rank = ShipRank(Player());",
              "        if(player_rank == 6) player_str_rank = CT('Rank.Ace.Name');",
              "        else if(player_rank == 5) player_str_rank = CT('Rank.Leader.Name');",
              "        else if(player_rank == 4) player_str_rank = CT('Rank.Wingman.Name');",
              "        else if(player_rank == 3) player_str_rank = CT('Rank.Pilot.Name');",
              "        else if(player_rank == 2) player_str_rank = CT('Rank.Cadet.Name');",
              "        else if(player_rank == 1) player_str_rank = CT('Rank.Rookie.Name');",
              "        ShipRankPoints(Player(),ShipRankPoints(Player())-RndObject(100,200,Player()));",
              "        ShipRaiseRank(Player(),ShipRank(Player())-1);",
              "        NewsAdd(\"Рейнджер <Player>! Ваши \\\"достижения\\\" в области уничтожения кораблей Коалиции не могли не заинтересовать КВСМК. В связи с этим командование приняло решение о <color=220,20,20>понижении</color> вас в звании. Отныне вы -\"+' '+player_str_rank+'!'+CT('FormInfo.br')+\"Без уважения, КВСМК.\");",
              "    }",
              "    else {",
              "        ShipRankPoints(Player(),ShipRankPoints(Player())-100);",
              "        NewsAdd(\"Рейнджер <Player>! Ваши \\\"достижения\\\" в области уничтожения кораблей Коалиции не могли не заинтересовать КВСМК. В связи с этим командование приняло решение о <color=220,20,20>лишении</color> вас <clr>100<clrEnd> очков воинского звания.\"+CT('FormInfo.br')+\"Без уважения, КВСМК.\");",
              "    }",
              "",
              "    if(Debuff > 19) Debuff = Debuff - 20;",
              "    else Debuff = 0;",
              "}",
              "",
              "if(CurTurn() > 300) {",
              "    //Проверяем и доспаниваем капитанов",
              "    if(GroupCount(CaptainsGroup) < ControlledSystems(0)) {",
              "        for(i=0;GalaxyStars()>i;i=i+1) {",
              "            tdwd1 = GalaxyStar(i);",
              "            if(!StarOwner(tdwd1) && StarCustomFaction(tdwd1) != '') {",
              "                k = 0;",
              "                for(j=0;(GroupCount(CaptainsGroup)-1)>j;j=j+1) {",
              "                    if(PlanetToStar(ShipStatistic(GroupShip(CaptainsGroup,j),10)) == tdwd1) {",
              "                        k = 1;",
              "                        break;",
              "                    }",
              "                }",
              "",
              "                if(k) continue;",
              "                else {",
              "                    SpawnCaptain(tdwd1);",
              "                    break;",
              "                }",
              "            }",
              "        }",
              "    }",
              "",
              "    //Проверяем новых дипломатов и создаём им корабли сопровождения",
              "    if(GalaxyShipId()>lastShipId) {",
              "        tdwd=BuildListOfNewShips(tarr1,lastShipId,1+2+4+8+16+256+4096+8192,1+2+4+8+16+128,1,'');",
              "        cur_ship = 0;",
              "        int coun;",
              "        if(tdwd) {    //Если найден хотя бы один корабль",
              "            for(i=0;i<ArrayDim(tarr1);i=i+1) {",
              "                tdwd=0;    //Обнуляем флаг",
              "                cur_ship=tarr1[i];    //Выбираем корабль",
              "                if(IsPlayer(cur_ship)) continue;",
              "                if(cur_ship < 1) continue;",
              "                if(ShipInScript(cur_ship)) continue;",
              "                if(Rnd(0,3) && ShipType(cur_ship) == 'Diplomat') {",
              "                    tdwd1 = GetShipPlanet(cur_ship);",
              "                    if(tdwd1 < 1) continue;",
              "                    if(PlanetOwner(tdwd1) > 4) continue;",
              "",
              "                    k = PlanetRace(tdwd1);",
              "                    PlanetRace(tdwd1,ShipPilotRace(cur_ship));",
              "                    cur_ruin = BuyWarrior(tdwd1,1000);",
              "                    PlanetRace(tdwd1,k);",
              "                    //Потому что дипломатов игра (может? Или всегда?) переносит на совсем другую планету",
              "                    ShipStatistic(cur_ruin,10,ShipStatistic(cur_ship,10));",
              "                    ShipRefit(cur_ruin,300);",
              "                    ShipRefit(cur_ruin,300);",
              "                    ShipRefit(cur_ruin,300);",
              "                    if(ItemLevel(ShipEqInSlot(cur_ruin,t_Engine)) < GalaxyTechLevel()) ItemLevel(ShipEqInSlot(cur_ruin,t_Engine),GalaxyTechLevel());",
              "",
              "                    //Чтобы сопровождение не оказалось бесполезной обузой",
              "                    while(ShipSpeed(cur_ruin) + 75 < ShipSpeed(cur_ship)) {",
              "                        ShipSpecialBonuses(cur_ruin,bonSpeed,ShipSpecialBonuses(cur_ruin,bonSpeed)+100);",
              "                        ShipCalcParam(cur_ruin);",
              "                    }",
              "",
              "                    ShipJoin(Cortezh,cur_ruin,'',Id(cur_ship),0);",
              "                    ChangeState('StateDef',cur_ruin);",
              "",
              "                    //NewsAdd(Name(cur_ruin) + ' is following '+Name(cur_ship)+'. PolWarriors');",
              "",
              "                    ShipAddCustomShipInfo(cur_ruin,'ShuWarriors_DiploOrderedTarget','NoShow');",
              "                    ShipAddCustomShipInfo(cur_ship,'ShuWarriors_DiploUnderDef','NoShow',Id(cur_ruin));",
              "                }",
              "                //Все силы мобилизованы - обычные корабли больше не появляются",
              "                /*if(!StarOwner(ShipStar(cur_ship)) && StarCustomFaction(ShipStar(cur_ship)) == '') {",
              "                    if(StarBattle(ShipStar(cur_ship))) {",
              "                        if(ShipType(cur_ship) == 'Diplomat' || ShipType(cur_ship) == 'Liner' || ShipType(cur_ship) == 'Transport') {",
              "                            if(~ArrayFind(mobilization_powers,GetShipPlanet(cur_ship))) {",
              "                                OrderLock(cur_ship,1);",
              "                                mobilization_ready[Name(GetShipPlanet(cur_ship))] = mobilization_ready[Name(GetShipPlanet(cur_ship))] + 25;",
              "                                ShipDestroy(cur_ship);",
              "                            }",
              "                        }",
              "                        else if(ShipType(cur_ship) == 'Pirate') {",
              "                            if(~ArrayFind(mobilization_powers,GetShipPlanet(cur_ship))) {",
              "                                OrderLock(cur_ship,1);",
              "                                mobilization_ready[Name(GetShipPlanet(cur_ship))] = mobilization_ready[Name(GetShipPlanet(cur_ship))] + 10;",
              "                                ShipDestroy(cur_ship);",
              "                            }",
              "                        }",
              "                    }",
              "                }*/",
              "            }",
              "        }",
              "        lastShipId=GalaxyShipId();    //Обновляем Id последнего рожденного корабля",
              "    }",
              "}",
              "",
              "//Обновляем мобилизационный ресурс (отключено по причине перерасхода ресурсов движка)",
              "/*if(!CoalitionDefeated()) {",
              "    //В целях оптимизации проводим это всё каждый пятый ход",
              "    if(CurTurn() % 10 == 0) {",
              "        //Составляем \"мобилизационный массив\" планет",
              "        for(i=0;GalaxyStars()>i;i=i+1) {",
              "            cur_star = GalaxyStar(i);",
              "            if(StarOwner(cur_star)) continue;",
              "            if(StarCustomFaction(cur_star) != '') continue;",
              "            for(j=0;StarPlanets(cur_star)>j;j=j+1) {",
              "                if(~ArrayFind(mobilization_powers,StarPlanets(cur_star,j))) continue;",
              "                if(PlanetOwner(StarPlanets(cur_star,j)) == None) continue;",
              "                if(PlanetOwner(StarPlanets(cur_star,j)) == PirateClan) continue;",
              "                ArrayAdd(mobilization_powers,Id(StarPlanets(cur_star,j)));",
              "                ArrayAdd(mobilization_ready,0,Name(StarPlanets(cur_star,j)));",
              "            }",
              "        }",
              "        //Теперь проверяем массив мобилизации",
              "        for(i=(ArrayDim(mobilization_powers)-1);0<=i;i=i-1) {",
              "            cur_planet = IdToPlanet(mobilization_powers[i]);",
              "            if(PlanetOwner(cur_planet) > Gaal) {",
              "                ArrayDelete(mobilization_powers,i);",
              "                ArrayDelete(mobilization_ready,i);",
              "            }",
              "            else {",
              "                mobilization_ready[i] = mobilization_ready[i] + min(20 + round(PlanetPopulation(cur_planet) / 100000),100);",
              "                if(mobilization_ready[i] > PlanetPopulation(cur_planet) / 1000) mobilization_ready[i] = PlanetPopulation(cur_planet) / 1000;",
              "                if(StarBattle(PlanetToStar(cur_planet))) {",
              "                    if(mobilization_ready[i] >= 100 && PlanetWarriors(cur_planet) < 5) {",
              "                        cur_ship = BuyWarrior(cur_planet);",
              "                        ShipRefit(cur_ship,300,200);",
              "                        mobilization_ready[i] = mobilization_ready[i] - 100;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "else {",
              "    ArrayClear(mobilization_powers);",
              "    ArrayDelete(mobilization_powers,0);",
              "    ArrayAdd(mobilization_powers,Id(ShipStatistic(Player(),10)),Name(ShipStatistic(Player(),10)));",
              "}*/",
              "",
              "//Обработчик для наступлений Коалиции по всему фронту",
              "if(!mass_attack_stage) {",
              "    //Если у врагов нет или слишком мало систем, то не начинаем",
              "    if(ControlledSystems(0) + 7 < GalaxyStars()) {",
              "        //Начинаем подготовку к атаке",
              "        if(ControlledSystems(0) > 20) {",
              "            if(mass_attack_cd) mass_attack_cd = mass_attack_cd - 1;",
              "            else {",
              "                mass_attack_HQ = 0;",
              "                mass_attack_stage = 1;",
              "                for(i=0;GalaxyStars()>i;i=i+1) {",
              "                    //Нам нужна ВБ как штаб, а также - все \"излишние\" военные",
              "                    cur_star = GalaxyStar(i);",
              "                    for(j=0;StarShips(cur_star)>j;j=j+1) {",
              "                        cur_ship = StarShips(cur_star,j);",
              "                        if(ShipInScript(cur_ship)) continue;",
              "                        if(ShipInGameEvent(cur_ship)) continue;",
              "                        if(ShipType(cur_ship) == 'WB') {",
              "                            //Выбираем ближайшую к дониматорам военку",
              "                            if(!mass_attack_HQ) mass_attack_HQ = Id(cur_ship);",
              "                            else {",
              "                                if(DistToNearestEnemySystem(cur_star) < DistToNearestEnemySystem(ShipStar(IdToShip(mass_attack_HQ)))) mass_attack_HQ = Id(cur_ship);",
              "                            }",
              "                        }",
              "                        if(ShipType(cur_ship) == 'Warrior' || ShipType(cur_ship) == 'Militiaman1' || ShipType(cur_ship) == 'Militiaman2' || ShipType(cur_ship) == 'Militiaman3' || ShipType(cur_ship) == 'Dreadnought' || ShipType(cur_ship) == 'EliteWarrior' || (ShipType(cur_ship) == 'Warrior' && ShipSubType(cur_ship))) {",
              "                            ShipJoin(Reserve,cur_ship);",
              "                        }",
              "                        if(ShipType(cur_ship) == 'Ranger' || ShipType(cur_ship) == 'RangerExplorer') {",
              "                            if(!Rnd(0,4)) ShipJoin(Reserve,cur_ship);",
              "                        }",
              "                    }",
              "                }",
              "",
              "                //Если нашли ВБ, которая будет штабом",
              "                if(mass_attack_HQ) {",
              "                    k = CountTargets();",
              "                    if(GroupCount(Reserve) > k * 15) {",
              "                        mass_attack_star = Id(ShipStar(IdToShip(mass_attack_HQ)));",
              "                        NoComeKlingToStar(GalaxyStar(mass_attack_star-1),1);",
              "                        //Операция подтверждена, дальше отработает стейткод",
              "                    }",
              "                    else mass_attack_stage = 0;",
              "                }",
              "                else mass_attack_stage = 0;",
              "            }",
              "        }",
              "    }",
              "}",
              "else if(mass_attack_stage == 1) {",
              "    if(GroupCount(Attackers) && !GroupCount(Reserve)) {",
              "        start_date = CurTurn() + 90;",
              "        k = CountTargets();",
              "        ChooseTargets(targ_arr,k);",
              "",
              "        if(k == 3) tstr2 = \"star1, star2 и star3\";",
              "        else if(k == 4) tstr2 = \"star1, star2, star4 и star3\";",
              "        else if(k == 5) tstr2 = \"star1, star2, star4, star5 и star3\";",
              "        else tstr2 = \"star1, star2, star4, star5, star6, star7 и star3\";",
              "        tstr1 = Format(\"Внимание всем!\"+Format('<br>')+\"Командование Вооружённых Сил Межзвёздной Коалиции приняло решение о начале беспрцендентной по своей полномасштабности операции - атаке силами военного флота по линии сопрокосновния с противником! Под удар попадут силы захватчиков в системах\"+' '+tstr2+'. '+\"Точкой сбора военных и всех добровольцев будет в системе starHQ, а управление операцией возьмёт на себя экипаж военной базы\"+' '+ShortName(IdToShip(mass_attack_HQ))+'. '+\"Начало операции назанчено на\"+' '+GameDateTxtByTurn(start_date)+'.','starHQ',ShipStar(IdToShip(mass_attack_HQ)),'star1',GalaxyStar(targ_arr[0]-1),'star2',GalaxyStar(targ_arr[1]-1),'star3',GalaxyStar(targ_arr[2]-1),'star4',GalaxyStar(targ_arr[3]-1),'star5',GalaxyStar(targ_arr[4]-1),'star6',GalaxyStar(targ_arr[5]-1),'star7',GalaxyStar(targ_arr[6]-1));",
              "        AddPlanetNews(tstr1,97);",
              "        NewsAdd(tstr1);",
              "        mass_attack_stage = 2;",
              "    }",
              "}",
              "else if(mass_attack_stage == 2) {",
              "    if(!GroupCount(Reserve)) {",
              "        //Назначаем системы для атаки",
              "        for(i=0;GroupCount(Attackers)>i;i=i+ArrayDim(targ_arr)) {",
              "            for(j=0;j<ArrayDim(targ_arr);j=j+1) {",
              "                SetData(0,GroupShip(Attackers,j),targ_arr[j]);",
              "            }",
              "        }",
              "        mass_attack_stage = 3;",
              "    }",
              "}",
              "else if(mass_attack_stage == 3) {",
              "    //Собираем войска в резерв",
              "    for(i=0;GalaxyStars()>i;i=i+1) {",
              "        cur_star = GalaxyStar(i);",
              "        for(j=0;StarShips(cur_star)>j;j=j+1) {",
              "            cur_ship = StarShips(cur_star,j);",
              "            if(ShipInScript(cur_ship)) continue;",
              "            if(ShipInGameEvent(cur_ship)) continue;",
              "            if(ShipType(cur_ship) == 'Warrior' || ShipType(cur_ship) == 'Militiaman1' || ShipType(cur_ship) == 'Militiaman2' || ShipType(cur_ship) == 'Militiaman3' || ShipType(cur_ship) == 'EliteWarrior' || (ShipType(cur_ship) == 'Warrior' && ShipSubType(cur_ship))) {",
              "                ShipJoin(Reserve,cur_ship);",
              "            }",
              "        }",
              "    }",
              "",
              "    //Если военку расшатали или она собирается свалить, меняем военку",
              "    if(ShipInGameEvent(IdToShip(mass_attack_HQ)) || IdToShip(mass_attack_HQ) < 1) {",
              "        mass_attack_HQ = 0;",
              "            for(i=0;GalaxyStars()>i;i=i+1) {",
              "                //Нам нужна ВБ как штаб, а также - все \"излишние\" военные",
              "                cur_star = GalaxyStar(i);",
              "                for(j=0;StarShips(cur_star)>j;j=j+1) {",
              "                    cur_ship = StarShips(cur_star,j);",
              "                    if(ShipInScript(cur_ship)) continue;",
              "                    if(ShipInGameEvent(cur_ship)) continue;",
              "                    if(ShipType(cur_ship) == 'WB') {",
              "                        //Выбираем ближайшую к дониматорам военку",
              "                        if(!mass_attack_HQ) mass_attack_HQ = Id(cur_ship);",
              "                        else {",
              "                            if(DistToNearestEnemySystem(cur_star) < DistToNearestEnemySystem(ShipStar(IdToShip(mass_attack_HQ)))) mass_attack_HQ = Id(cur_ship);",
              "                        }",
              "",
              "                        NoComeKlingToStar(GalaxyStar(mass_attack_star-1),0);",
              "                        NoComeKlingToStar(ShipStar(cur_ship));",
              "                        mass_attack_star = Id(ShipStar(cur_ship));",
              "                    }",
              "                }",
              "            }",
              "",
              "        //Мы не нашли военку (что КРАЙНЕ странно) - завершаем ситуацию (ну как бы штаб ушатали)",
              "        mass_attack_stage = 4;",
              "    }",
              "",
              "    //Считаем, сколько систем освобождено",
              "    j = 0;",
              "    for(i=0;i<ArrayDim(targ_arr);i=i+1) {",
              "        tdwd = GalaxyStar(targ_arr[i]-1);",
              "        if(!StarOwner(tdwd) && StarCustomFaction(tdwd) != '') j = j + 1;",
              "    }",
              "",
              "    for(i=0;i<ArrayDim(targ_arr);i=i+1) {",
              "        //Считаем вояк по целевым системам",
              "        tdwd = GalaxyStar(targ_arr[i]-1);",
              "        k = 0;",
              "        for(j=0;StarShips(tdwd)>j;j=j+1) {",
              "            if(ShipOwner(StarShips(tdwd,j)) > 4) continue;",
              "            else if(!StateIs(StarShips(tdwd,j),'MainState')) continue;",
              "            else k = k + 1;",
              "        }",
              "",
              "        if(!StarOwner(tdwd) && StarCustomFaction(tdwd) != '') {",
              "            //Освобождённая система, оставляем небольшой гарнизон",
              "            if(k > 5) {",
              "                k = k - 5;",
              "                for(j=0;k>j;j=j+1) {",
              "                    //Остальных выгоняем в резерв",
              "                    ShipJoin(Reserve,StarShips(tdwd,j));",
              "                }",
              "            }",
              "        }",
              "        else {",
              "            if(k < 8) {",
              "                //Система ещё захвачена, и если в ней не хватает военных, чтобы её отбивать - отправляем подкрепление",
              "                //Но сначала проверим, не летит ли в эту систему подкреп",
              "                for(j=0;GroupCount(Attackers)>j;j=j+1) {",
              "                    if(GalaxyStar(GetData(0,GroupShip(Attackers,j))-1) == tdwd) k = k + 1;",
              "                }",
              "                if(k < 8) {",
              "                    if(GroupCount(Reserve) > 7) y = 7;",
              "                    else y = GroupCount(Reserve);",
              "",
              "                    for(j=0;k>j;j=j+1) {",
              "                        //Отправляем на помощь солдат",
              "                        ShipJoin(Attackers,StarShips(tdwd,j));",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "",
              "    if(ArrayDim(targ_arr) == j) {",
              "        //Все системы освобождены, ура!",
              "        Sound('Sound.NewMsg');",
              "        tstr1 = \"Да здравствует КВСМК!\"+Format('<br>')+\"В результате сверхуспешной операции наших вооружённых сил удалось освободить\"+' '+ArrayDim(targ_arr)+ ' '+\"систем. Разгром захватчиков стал ещё ближе. Слава Коалиции!\";",
              "        AddPlanetNews(tstr1,97);",
              "        NewsAdd(tstr1);",
              "        mass_attack_stage = 4;",
              "    }",
              "    else {",
              "        //Смотрим, закончились ли битвы",
              "        j = 0;",
              "        int y = 0;",
              "        for(i=0;i<ArrayDim(targ_arr);i=i+1) {",
              "            tdwd = GalaxyStar(targ_arr[i]-1);",
              "            if(!StarOwner(tdwd) && StarCustomFaction(tdwd) != '') j = j + 1;",
              "            else if(!StarBattle(tdwd)) y = y + 1;",
              "        }",
              "",
              "        if(ArrayDim(targ_arr) == (j+y)) {",
              "            //Все бои закончились, резервы тоже закончились, завершаем операцию",
              "            if((GroupCount(Reserve) + GroupCount(Attackers) - (j * 5)) / y < 10) {",
              "                mass_attack_stage = 4;",
              "            }",
              "        }",
              "    }",
              "}",
              "else {",
              "    //Ситуация завершена, снимаем защиту и назначаем кд",
              "    NoComeKlingToStar(GalaxyStar(mass_attack_star-1),0);",
              "    mass_attack_cd = 200 - ControlledSystems(0);",
              "    mass_attack_cd = Rnd(170,355) / 100 * mass_attack_cd;",
              "}",
              "",
              "//Игроку предлагают присоединиться к атаке за \"приз\"",
              "if(CurTurn() > 300) {",
              "    cur_star = ShipStar(Player());",
              "    if(star_tried != cur_star) {",
              "        if(!ShipOnSidePirateClan(Player())) {",
              "            if(!StarOwner(cur_star)) {",
              "                for(i=0;StarShips(cur_star)>i;i=i+1) {",
              "                    cur_ship = StarShips(cur_star,i);",
              "                    if(ShipRadarRange(cur_ship) < Dist(cur_ship,Player())) continue;",
              "                    if(!ShipInNormalSpace(cur_ship)) continue;",
              "                    if(ShipType(cur_ship) == 'WB') break;",
              "                    if(ShipInGameEvent(cur_ship)) {",
              "                        //Подчищаем инфошки у военных, которые, возможно, ранее предлагали игроку поучаствовать в операции",
              "                        ClearGiftInfos();",
              "                        target_star = 0;",
              "                        //gift_type == 1 - деньги",
              "                        //gift_type == 2 - камуфляж",
              "                        //gift_type == 3 - медаль",
              "                        //gift_type == 5-11 - программы",
              "                        gift_type = Rnd(1,11);",
              "                        while(gift_type == 4) gift_type = Rnd(1,11);",
              "",
              "                        if(gift_type == 1) gift_count = GalaxyMoney(3);",
              "                        else if(gift_type == 2) gift_count = Rnd(2,5);",
              "                        else if(gift_type == 3) gift_count = 1;",
              "                        else if(gift_type == 5) gift_count = Rnd(7,12);",
              "                        else gift_count = Rnd(2,5);",
              "",
              "                        Ether(10,'',\"Эгей, рейнджер! Не хочешь помочь нашей бравой армии разобраться с проклятыми захватчиками? Тогда дуй с нами освобождать систему! Посмотрим, кто быстрее справится с захватчиками: хвалёные рейнджеры или рабочие лошадки! Ну а если сомневаешься, то у нас припасён небольшой подарочек для тех, кто присоединится к нашей операции. Ну что, по рукам?\",cur_ship);",
              "",
              "                        star_tried = cur_star;",
              "                        for(j=0;StarShips(cur_star)>j;j=j+1) {",
              "                            cur_ship = StarShips(cur_star,j);",
              "                            ShipAddCustomShipInfo(cur_ship,'ShuWarriors_SystemDetecting','NoShow');",
              "                        }",
              "                        break;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  8,
          "#":  10,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "cur_ruin = GetShipRuins(Player());",
              "if(cur_ruin)",
              "{",
              "    if(ShipType(cur_ruin) == 'PlayerBridge')",
              "    {",
              "        //Если игрок в данный момент управляет флагманом",
              "        if(~ShipFindCustomShipInfoByType(Player(), 'ShuWarriors_FlagshipDirectControl'))",
              "        {",
              "            if(PlayerBridge() == 3)",
              "            {",
              "                cur_ship = IdToShip(ShipCustomShipInfoData(Player(), 'ShuWarriors_FlagshipDirectControl', 1));",
              "                tstr1 = Format(CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.PlayerAbandonFlagship'), '<Flagship'+'>', Name(Player()));",
              "                AddDialogInject('OperationFlagshipDialog', '', tstr1, 50, 0, 3);",
              "            }",
              "        }",
              "    }",
              "    else if(ShipType(cur_ruin) == 'WB')",
              "    {",
              "        AddDialogBlock(CT('FormRuins.WB.WarOperation.PlayerSend'), 2); //Блокируем ванильный диалог о заказе военной операции",
              "",
              "",
              "        //Подменяем диалог информирования о звании",
              "        AddDialogBlock(CT('FormRuins.WB.NextRank.PlayerSend'), 2);",
              "",
              "        player_rank = ShipRank(Player());",
              "        if(player_rank >= 7) player_str_rank = 'Admiral';",
              "        else if(player_rank == 6) player_str_rank = 'Commander';",
              "        else if(player_rank == 5) player_str_rank = 'Ace';",
              "        else if(player_rank == 4) player_str_rank = 'Leader';",
              "        else if(player_rank == 3) player_str_rank = 'Wingman';",
              "        else if(player_rank == 2) player_str_rank = 'Pilot';",
              "        else if(player_rank == 1) player_str_rank = 'Cadet';",
              "        else player_str_rank = 'Rookie';",
              "",
              "        player_str_rank = CT('Rank.'+player_str_rank+'.Name');",
              "        AddDialogInject('RankDialog', '', Format(CT('WB.Mod_NextRank.PlayerSend'),'NextRank',player_str_rank), 5);",
              "",
              "        if(!ShipOnSidePirateClan(Player()))",
              "        {",
              "            //Если ВБ уже организует операцию (в том числе, если сама она никуда не летит)",
              "            on_prepare = 0;",
              "            if(ShipInCurScript(cur_ruin))",
              "            {",
              "                if(StateIs(cur_ruin, 'WBOnPrepare')) on_prepare = 1;",
              "            }",
              "",
              "            if((!ShipInGameEvent(cur_ruin) && ShipInNormalSpace(cur_ruin)) || on_prepare)",
              "            {",
              "                check = (!ShipInScript(cur_ruin, 0) && !ShipOrder(cur_ruin) && !ShipDestination(cur_ruin) && !StarBattle(ShipStar(cur_ruin)));",
              "",
              "                //Возможные уровни вовлечения игрока в организацию атаки (зависят от военного звания и навыка лидерства):",
              "                //operation_lvl == 0 - игрок не может заказать никакую операцию, поскольку имеет 0 звание",
              "                //operation_lvl == 1 - игрок может заказать обычную операцию (аналог ванильной), когда целевую систему и состав нападающих определяет ВБ, а игрок только платит",
              "                //operation_lvl == 2 - игрок может заказать операцию, а также может выбрать один из флагманов (если он будет среди военных кораблей) своим командным кораблём и самолично повести атакующую группу в бой",
              "                //operation_lvl == 3 - игрок может заказать операцию с участием флагманов, а также сам выбирает систему для атаки",
              "                //operation_lvl == 4 - игрок может заказать операцию с участием флагманов (включая дредноуты, если подключена EvoArmada) и самой ВБ, а также сам выбирает систему для атаки",
              "                int leadership = ShipSkill(Player(), 'Leadership');",
              "                operation_lvl = 0;",
              "                player_rank = ShipRank(Player());",
              "                if(player_rank >= 7) //Адмирал",
              "                {",
              "                    if(leadership == 6) operation_lvl = 4;",
              "                    else operation_lvl = 3;",
              "                    player_str_rank = lowercase(CT('Rank.Admiral.Name'));",
              "                }",
              "                else if(player_rank == 6) //Командор",
              "                {",
              "                    if(leadership == 6) operation_lvl = 3;",
              "                    else operation_lvl = 2;",
              "                    player_str_rank = lowercase(CT('Rank.Commander.Name'));",
              "                }",
              "                else if(player_rank == 5) //Ас (Пилот)",
              "                {",
              "                    if(leadership == 6) operation_lvl = 2;",
              "                    else operation_lvl = 1;",
              "                    player_str_rank = lowercase(CT('Rank.Ace.Name'));",
              "                }",
              "                else if(player_rank == 4) //Истребитель",
              "                {",
              "                    operation_lvl = 1;",
              "                    player_str_rank = lowercase(CT('Rank.Leader.Name'));",
              "                }",
              "                else if(player_rank == 3) //Капитан",
              "                {",
              "                    operation_lvl = 1;",
              "                    player_str_rank = lowercase(CT('Rank.Wingman.Name'));",
              "                }",
              "                else if(player_rank == 2) //Пилот",
              "                {",
              "                    operation_lvl = 1;",
              "                    player_str_rank = lowercase(CT('Rank.Pilot.Name'));",
              "                }",
              "                else if(player_rank == 1) //Кадет",
              "                {",
              "                    operation_lvl = 1;",
              "                    player_str_rank = lowercase(CT('Rank.Cadet.Name'));",
              "                }",
              "                else player_str_rank = lowercase(CT('Rank.Rookie.Name')); //Новичок",
              "",
              "                //operation_lvl = 4; //Для отладки",
              "                dialog_path = 'Script.Mod_ShuWarriors.MilitaryOperationWBDialog.OnLevel' + operation_lvl;",
              "",
              "                //Диалог на оснащение своего военного",
              "                if(!ShipInGameEvent(cur_ruin) && ShipInNormalSpace(cur_ruin) && player_rank > 2) {",
              "                    AddDialogInject('CreateWarrior',\"Если у тебя завалялось много лишнего оборудования, то можешь помочь нам с оснащением пилотов.\",\"Хочу оснастить пилота\",10);",
              "                }",
              "",
              "                if(!on_prepare)",
              "                {",
              "                    cur_sector = StarToCon(ShipStar(cur_ruin));",
              "                    operation_num = 0; //Будет получен после инициализации новой операции",
              "                    coals_power_percent = 0; //Т.к. атакующие ещё не выбраны",
              "",
              "                    if(operation_lvl == 1)",
              "                    {",
              "                        min_coals_power_percent = 100;",
              "                        max_coals_power_percent = 200; //Чисто визуальный индикатор критического превосходства",
              "                        stars_cnt_to_choose = 15; //Выбирается из этого числа автоматически",
              "                        //min_warriors_to_add_WB = 5;",
              "                    }",
              "                    else if(operation_lvl == 2)",
              "                    {",
              "                        min_coals_power_percent = 100;",
              "                        max_coals_power_percent = 200; //Чисто визуальный индикатор критического превосходства",
              "                        stars_cnt_to_choose = 15; //Выбирается из этого числа автоматически",
              "                        //min_warriors_to_add_WB = 5;",
              "                    }",
              "                    else if(operation_lvl == 3)",
              "                    {",
              "                        min_coals_power_percent = 85;",
              "                        max_coals_power_percent = 200; //Чисто визуальный индикатор критического превосходства",
              "                        stars_cnt_to_choose = 10; //Выбирает игрок",
              "                        //min_warriors_to_add_WB = 5;",
              "                    }",
              "                    else /*if(operation_lvl == 4)*/",
              "                    {",
              "                        min_coals_power_percent = 75;",
              "                        max_coals_power_percent = 200; //Чисто визуальный индикатор критического превосходства",
              "                        stars_cnt_to_choose = 15; //Выбирает игрок",
              "                        min_warriors_to_add_WB = 5;",
              "                    }",
              "",
              "                    if(!check) AddDialogBlock(CT(dialog_path + '.PlayerRequestOperation'), 1);",
              "                    AddDialogInject('MilitaryOperationWBDialog', '', CT('Script.Mod_ShuWarriors.MilitaryOperationWBDialog.OnLevel' + operation_lvl + '.PlayerRequestOperation'), 0, 0, 1);",
              "                }",
              "                else",
              "                {",
              "                    operation_num = FindWBOperation(Id(cur_ruin));",
              "                    AddDialogInject('MilitaryOperationWBDialog', '', CT(dialog_path + '.PlayerAskWBPrepareStatus'), 0, 0, 1);",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "else",
              "{",
              "    cur_ship = GetTalkShip();",
              "    if(cur_ship)",
              "    {",
              "        if(ShipInCurScript(cur_ship))",
              "        {",
              "            if(StateIs(cur_ship, 'WarriorsOnAttack'))",
              "            {",
              "                if(!TalkByAI())",
              "                {",
              "                    operation_num = GetData(3, cur_ship);",
              "",
              "                    //Игрок запрашивает разрешение у флагмана взять его под свой контроль",
              "                    i = GetData(0, cur_ship);",
              "                    if(i == -2)",
              "                    {",
              "                        tstr1 = CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.PlayerAskDirectControl');",
              "                        AddDialogInject('OperationFlagshipDialog', '', tstr1, 0, 0, 1);",
              "                    }",
              "                    //Флагман принудительно прекращает прямой контроль игрока над собой",
              "                    else if(i < -3)",
              "                    {",
              "                        AddDialogOverride('OperationFlagshipDialog', 10000, 2);",
              "                        exit;",
              "                    }",
              "",
              "                    //Только со 2 уровня вовлечённости игрока",
              "                    if(GlobalWBOperationsArray[operation_num, 'OrganizedByPlayer'] >= 2)",
              "                    {",
              "                        tstr1 = CT('Script.Mod_ShuWarriors.OperationWarriorDialog.PlayerOrderTarget');",
              "                        AddDialogInject('OperationWarriorDialog', '', tstr1, 0, 0, 0);",
              "                        tdwd1 = IdToShip(GetData(1, cur_ship), 1);",
              "                        if(tdwd1) //Если военному задана конкретная цель для атаки",
              "                        {",
              "                            tstr1 = Format(CT('Script.Mod_ShuWarriors.OperationWarriorDialog.PlayerOrderCancel'), '<Target'+'>', Name(tdwd1));",
              "                            AddDialogInject('OperationWarriorDialog', '', tstr1, 0, 0, 1);",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "            else if(StateIs(cur_ship, 'MainState')) {",
              "                if(RelationToRanger(cur_ship,Player()) > 9) DText(\"Рейнджер, данный корабль занят в операции по полномасштабному освобождению систем Коалиции. Просим вас не мешать нам и отключиться от линии высокочастотной связи.\");",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  29,
          "#":  30,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Data0 == номер хода до начала движения военного к месту сбора (если >0) или маркер (-1), что данный военный является флагманом операции (ожидается, что это может быть только линкор или дредноут)",
              "//Data1 == Id системы сбора, в которую полетит данный военный перед тем, как получить приказ прыгать в атакуемую систему (если <0, значит, военный уже летит в систему атаки, если 0, значит, военный уже долетел, либо сбор назначен на ВБ)",
              "//Data2 == принимает 3 значения: 0 - лететь в скриптовое место GatheringPlace, <0 - Id атакуемой системы, который обнулится, как только первый военный из группы долетит до системы сбора и выставит координаты точки сбора, >0 - Id ВБ, на которой необходимо собраться и ждать дальнейших приказов",
              "//Data3 == номер операции в массиве GlobalWBOperationsArray, к которой приписан данный военный",
              "",
              "//NewsAdd('PolWarriors:'+Format('<br>')+'GetData(0) is '+GetData(0)+Format('<br>')+', GetData(1) is '+GetData(1)+Format('<br>')+', GetData(2) is '+GetData(2)+Format('<br>')+', GetData(3) is '+GetData(3));",
              "",
              "int time_left = GetData(0);",
              "if(time_left > 0)",
              "{",
              "    if(time_left <= CurTurn()) SetData(0, 0);",
              "    else exit; //Военный ещё \"не достроен\" - скипаем всю его логику",
              "}",
              "",
              "dword object;",
              "dword cur_star = ShipStar(CurShip);",
              "",
              "if(ShipInHyperSpace(CurShip)) exit; //Не трогаем военного, пока тот находится в гипере",
              "",
              "if(ShipInNormalSpace(CurShip))",
              "{",
              "    ShipFreeFlight(CurShip, 1); //Автонаведение орудий",
              "",
              "    object = ShipGetBad(CurShip);",
              "    if(object)",
              "    {",
              "        //Всяких рандомных уёбков-пиратов, нападающих на отдельных военных, атакующие будут валить всей отарой",
              "        //Через 10 дней этот корабль автоматически удалится из группы",
              "        if(!ShipInScript(object, 0)) ShipJoin(RandomAttackers, object, '', CurTurn() + 10);",
              "    }",
              "}",
              "",
              "//Совершаем прыжок (ебаная нумерация систем начинается с 0)",
              "if(GetData(1))",
              "{",
              "    if(!ShipInNormalSpace(CurShip))",
              "    {",
              "        OrderTakeOff(CurShip);",
              "        exit;",
              "    }",
              "",
              "    object = GalaxyStar(abs(int(GetData(1))) - 1);",
              "    if(cur_star != object)",
              "    {",
              "        OrderJump(CurShip, object);",
              "        exit;",
              "    }",
              "    else //Военный добрался до указанной системы",
              "    {",
              "        if(int(GetData(1)) < 0) //Отрицательный номер системы означает, что военный прилетел в атакуемую систему",
              "        {",
              "            SetData(0, 1);",
              "            ChangeState('WarriorsOnAttack');",
              "            exit;",
              "        }",
              "        else",
              "        {",
              "            SetData(0, 1);",
              "",
              "            //Если он добрался туда первый, то он же задаёт координаты точки прыжка всем остальным военным в своей группе",
              "            if(GetData(2))",
              "            {",
              "                int oper_num = GetData(3);",
              "",
              "                OrderJump(CurShip, GalaxyStar(abs(int(GetData(2))) - 1));",
              "",
              "                GlobalWBOperationsArray[oper_num, 'GatheringPointCoordX'] = ShipOrder(CurShip, 'X');",
              "                GlobalWBOperationsArray[oper_num, 'GatheringPointCoordY'] = ShipOrder(CurShip, 'Y');",
              "                int count_wars = ArrayDim(GlobalWBOperationsArray[oper_num, 'AlliesForcesId']) - 1;",
              "                if(count_wars <= 20) GlobalWBOperationsArray[oper_num, 'GatheringPointRadius'] = 150;",
              "                else if(count_wars <= 30) GlobalWBOperationsArray[oper_num, 'GatheringPointRadius'] = 200;",
              "                else GlobalWBOperationsArray[oper_num, 'GatheringPointRadius'] = 250;",
              "",
              "                for(i = count_wars; i >= 1; i = i - 1)",
              "                {",
              "                    dword warrior = IdToShip(GlobalWBOperationsArray[oper_num, 'AlliesForcesId', i]);",
              "                    SetData(0, 2, warrior); //Маркер движения в точку сбора в целевой системе",
              "                    ChangeState('WarriorsOnPrepare'); //На всякий случай сразу же дёргаем логику, если кто-то из военных вышел из гипера одновременно с этим кораблём в той же системе",
              "                }",
              "",
              "                //Если военному требуется дозаправка, то сперва отправляем его к ближайшей заселённой планете",
              "                if(ShipFuelLow(CurShip))",
              "                {",
              "                    if(!StarOwner(cur_star)) OrderLanding(CurShip, NearCivilPlanet(CurShip));",
              "                    else OrderMoveToGatherPoint(CurShip, GetData(3));",
              "                }",
              "                else OrderMoveToGatherPoint(CurShip, GetData(3));",
              "            }",
              "            else",
              "            {",
              "                //Если военному требуется дозаправка, то сперва отправляем его к ближайшей заселённой планете",
              "                if(ShipFuelLow(CurShip))",
              "                {",
              "                    if(!StarOwner(cur_star)) OrderLanding(CurShip, NearCivilPlanet(CurShip));",
              "                    else OrderMoveToGatherPoint(CurShip, GetData(3));",
              "                }",
              "                else OrderMoveToGatherPoint(CurShip, GetData(3));",
              "            }",
              "",
              "            exit;",
              "        }",
              "    }",
              "}",
              "//Садимся на указанную ВБ, либо здесь просто временно висит Id атакуемой системы",
              "else if(GetData(2))",
              "{",
              "    if(int(GetData(2)) > 0)",
              "    {",
              "        object = IdToShip(GetData(2));",
              "        if(object)",
              "        {",
              "            if(GetShipRuins(CurShip) != object)",
              "            {",
              "                dword object_star = ShipStar(object);",
              "                if(object_star != cur_star)",
              "                {",
              "                    if(!ShipInNormalSpace(CurShip)) OrderTakeOff(CurShip);",
              "                    else OrderJump(CurShip, object_star);",
              "                    exit;",
              "                }",
              "                else",
              "                {",
              "                    if(!ShipInNormalSpace(CurShip)) OrderTakeOff(CurShip);",
              "                    else OrderLanding(CurShip, object);",
              "                    exit;",
              "                }",
              "            }",
              "            else //Военный долетел и совершил посадку на ВБ, теперь просто ожидаем от неё дальнейших приказов",
              "            {",
              "                exit;",
              "            }",
              "        }",
              "        else //Целевую ВБ уничтожили, операция отменяется",
              "        {",
              "            ShipOut(CurShip);",
              "            exit;",
              "        }",
              "    }",
              "}",
              "else if(!GetData(2))",
              "{",
              "    //Летим в указанное скриптовое место (в точку сбора перед прыжком)",
              "    if(!ShipInNormalSpace(CurShip))",
              "    {",
              "        ShipRefuel(CurShip);",
              "        OrderTakeOff(CurShip);",
              "    }",
              "    else",
              "    {",
              "        //Если военному требуется дозаправка, то сперва отправляем его к ближайшей заселённой планете",
              "        if(ShipFuelLow(CurShip))",
              "        {",
              "            if(!StarOwner(cur_star)) OrderLanding(CurShip, NearCivilPlanet(CurShip));",
              "            else OrderMoveToGatherPoint(CurShip, GetData(3));",
              "        }",
              "        else OrderMoveToGatherPoint(CurShip, GetData(3));",
              "    }",
              "    exit;",
              "}",
              "",
              "if(!ShipOrder(CurShip))",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ShipFreeFlight(CurShip);",
              "    OrderLock(CurShip, 1);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  31,
          "#":  32,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Data0 == маркер (от -1 до -4), что данный военный является флагманом операции (ожидается, что это может быть только линкор или дредноут)",
              "//Data1 == ---",
              "//Data2 == ---",
              "//Data3 == номер операции в массиве GlobalWBOperationsArray, к которой приписан данный военный",
              "",
              "if(RelationToShip(CurShip, Player()) < 10)",
              "{",
              "    if(GetData(0))",
              "    {",
              "        //Если игрок находится в режиме прямого управления флагманом",
              "        if(int(GetData(0)) == -3)",
              "        {",
              "            SetData(-4, 0);",
              "            ShipFreeFlight(CurShip);",
              "            exit; //На следующий ход из акткода будет вызван диалог",
              "        }",
              "        //Если игрок совершал посадку на флагман для перехода в режим прямого управления",
              "        else if(ShipOrder(Player()) == 2)",
              "        {",
              "            if(ShipOrderObj(Player()) == CurShip) OrderMove(Player(), CoordX(CurShip), CoordY(CurShip));",
              "        }",
              "    }",
              "",
              "    int oper_num = GetData(3, CurShip);",
              "    for(int i = ArrayDim(GlobalWBOperationsArray[oper_num, 'AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "    {",
              "        if(GlobalWBOperationsArray[oper_num, 'AlliesForcesId', i] == Id(CurShip))",
              "        {",
              "            ArrayDelete(GlobalWBOperationsArray[oper_num, 'AlliesForcesId'], i);",
              "            break;",
              "        }",
              "    }",
              "    ShipOut(CurShip);",
              "    OrderLock(CurShip, 0);",
              "    ShipFreeFlight(CurShip);",
              "    exit;",
              "}",
              "",
              "if(ShipInHyperSpace(CurShip, 1)) exit; //Не трогаем военного, пока тот находится в гипере (в том числе на борту ВБ)",
              "if(!ShipInNormalSpace(CurShip)) exit;",
              "",
              "OrderLock(CurShip, 0);",
              "ShipFreeFlight(CurShip);",
              "",
              "int flagman_mark = GetData(0);",
              "if(flagman_mark)",
              "{",
              "    //Флагман атаки вызывает игрока, чтобы предложить тому взять флагман под прямой контроль",
              "    if(flagman_mark == -1)",
              "    {",
              "        if(ShipStar(Player()) == ShipStar(CurShip))",
              "        {",
              "            if(ShipInNormalSpace(Player()))",
              "            {",
              "                if(!ShipOnSidePirateClan(Player()))",
              "                {",
              "                    if(Dist(Player(), CurShip) <= ShipRadarRange(Player()))",
              "                    {",
              "                        GAnswerData = 0;",
              "                        Dialog(OperationFlagshipDialog, CurShip);",
              "                        if(ShipOrder(Player()) == 2) //Если игрок согласился взять флагман под контроль",
              "                        {",
              "                            if(ShipOrderObj(Player()) == CurShip)",
              "                            {",
              "                                OrderLock(CurShip, 1);",
              "                                OrderFollowShip(CurShip, Player(), 0);",
              "                                SetData(0, 1); //На всякий случай обнуляем приказ атаки конкретной цели",
              "                                ShipFreeFlight(CurShip, 1);",
              "                                exit;",
              "                            }",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "    //Если игрок совершает посадку на флагман с целью взять его под свой контроль",
              "    else if(flagman_mark == -2)",
              "    {",
              "        if(ShipOrder(Player()) == 2)",
              "        {",
              "            if(ShipOrderObj(Player()) == CurShip)",
              "            {",
              "                OrderLock(CurShip, 1);",
              "                OrderFollowShip(CurShip, Player(), 0);",
              "                ShipFreeFlight(CurShip, 1);",
              "                exit;",
              "            }",
              "        }",
              "    }",
              "    //Игрок управляет флагманом, самому флагману в этот момент ничего делать не надо",
              "    else if(flagman_mark == -3)",
              "    {",
              "        //Производим небольшой \"полевой ремонт\" орудий, чтобы игрок на флагмане не мог превратиться в совсем уж \"тыкву\"",
              "        for(i = ShipCntWeapon(Player()); i >= 1; i = i - 1)",
              "        {",
              "            dword gun = ShipWeapon(Player(), i);",
              "            if(ItemIsBroken(gun))",
              "            {",
              "                if(RndObject(1, 100, CurShip) <= 50) ItemDurability(gun, RndObject(5, 21, CurShip));",
              "            }",
              "            if(MissilesToRearm(gun))",
              "            {",
              "                if(RndObject(1, 100, CurShip) <= 50) MissilesToRearm(gun, 1);",
              "            }",
              "        }",
              "        exit;",
              "    }",
              "    //Игрока принудительно выгоняют с флагмана, после чего флагман сразу же выводится из скрипта",
              "    //else if(flagman_mark == -4) exit;",
              "}",
              "",
              "//Если военному была задана конкретная цель для атаки",
              "if(GetData(1))",
              "{",
              "    dword target = IdToShip(GetData(1));",
              "    if(target) //Если цель ещё жива",
              "    {",
              "        if(ShipStar(target) == ShipStar(CurShip))",
              "        {",
              "            OrderLock(CurShip, 1);",
              "            OrderFollowShip(CurShip, target, 1);",
              "            ShipSetBad(CurShip, target);",
              "        }",
              "        else ShipFreeFlight(CurShip);",
              "    }",
              "    else",
              "    {",
              "        SetData(0, 1);",
              "        ShipFreeFlight(CurShip);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  34,
          "#":  35,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(operation_lvl >= 2)",
              "{",
              "    //Если военные участники атаки ещё живы",
              "    if(ArrayDim(GlobalWBOperationsArray[operation_num, 'AlliesForcesId']) > 1)",
              "    {",
              "        //Статус даты атаки (укладывается ли операция в заданный график)",
              "        if(GlobalWBOperationsArray[operation_num, 'GatheringPlaceId'] > -1) //Военные собираются в системе",
              "        {",
              "            if((GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1) > CurTurn()) //Операция укладывается в график",
              "            {",
              "                tstr1 = CT(dialog_path + '.WBDateStatusOk');",
              "                tstr2 = Name(GalaxyStar(GlobalWBOperationsArray[operation_num, 'GatheringPlaceId'] - 1));",
              "                tstr3 = GameDateTxtByTurn(GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1);",
              "            }",
              "            else //Операция выбилась из графика",
              "            {",
              "                tstr1 = CT(dialog_path + '.WBDateStatusDelayed');",
              "                tstr2 = Name(GalaxyStar(GlobalWBOperationsArray[operation_num, 'GatheringPlaceId'] - 1));",
              "                tstr3 = CurTurn() - GlobalWBOperationsArray[operation_num, 'AttackDate'];",
              "            }",
              "        }",
              "        else //Военные собираются на военной базе",
              "        {",
              "            if((GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1) > CurTurn()) //Операция укладывается в график",
              "            {",
              "                tstr1 = CT(dialog_path + '.WBDateStatusOkWithWB');",
              "                tstr3 = GameDateTxtByTurn(GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1);",
              "            }",
              "            else //Операция выбилась из графика",
              "            {",
              "                tstr1 = CT(dialog_path + '.WBDateStatusDelayedWithWB');",
              "                tstr3 = CurTurn() - GlobalWBOperationsArray[operation_num, 'AttackDate'];",
              "            }",
              "        }",
              "",
              "        tstr1 = Format(tstr1,",
              "                       '<PlayerRank'+'>', player_str_rank,",
              "                       '<StarToAttack'+'>', '<color=0,50,200>' + Name(GalaxyStar(GlobalWBOperationsArray[operation_num, 'StarToAttackId'] - 1)) + '</color>',",
              "                       '<GatheringStar'+'>', '<color=0,50,200>' + tstr2 + '</color>',",
              "                       '<AttackDate'+'>', '<color=0,50,200>' + tstr3 + '</color>',",
              "                       '');",
              "",
              "        //Список и статус всех военных, готовящихся к операции",
              "        tstr2 = '';",
              "        for(i = 1; i < ArrayDim(GlobalWBOperationsArray[operation_num, 'AlliesForcesId']); i = i + 1)",
              "        {",
              "            cur_ship = IdToShip(GlobalWBOperationsArray[operation_num, 'AlliesForcesId', i]);",
              "",
              "            tstr2 = tstr2 + Format('<br>') + '- <color=0,50,200>' + Name(cur_ship) + '</color>';",
              "            if(GlobalWBOperationsArray[operation_num, 'GatheringPlaceId'] > -1) //Военные собираются в системе",
              "            {",
              "                if(IsShipAtGatherPoint(cur_ship, operation_num)) tstr2 = tstr2 + ' ' + CT(dialog_path + '.WBPrepareStatusShipArrived'); //Военный уже в точке сбора",
              "                else //Военный ещё в пути",
              "                {",
              "                    if((GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1) > CurTurn())",
              "                    {",
              "                        if(int(GetData(0, cur_ship)) > 0) tstr2 = tstr2 + ' ' + CT(dialog_path + '.WBPrepareStatusShipBuilding'); //Военный ещё не достроен",
              "                        else tstr2 = tstr2 + ' ' + CT(dialog_path + '.WBPrepareStatusShipOnItsWay'); //Военный в пути",
              "                    }",
              "                    else tstr2 = tstr2 + ' ' + CT(dialog_path + '.WBPrepareStatusShipShipDelayed'); //Военный задерживается",
              "                }",
              "            }",
              "            else //Военные собираются на военной базе",
              "            {",
              "                if(GetShipRuins(cur_ship) == cur_ruin) tstr2 = tstr2 + ' ' + CT(dialog_path + '.WBPrepareStatusShipArrived'); //Военный прибыл на ВБ",
              "                else //Военный ещё в пути",
              "                {",
              "                    if((GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1) > CurTurn())",
              "                    {",
              "                        if(int(GetData(0, cur_ship)) > 0) tstr2 = tstr2 + ' ' + CT(dialog_path + '.WBPrepareStatusShipBuilding'); //Военный ещё не достроен",
              "                        else tstr2 = tstr2 + ' ' + CT(dialog_path + '.WBPrepareStatusShipOnItsWay'); //Военный в пути",
              "                    }",
              "                    else tstr2 = tstr2 + ' ' + CT(dialog_path + '.WBPrepareStatusShipShipDelayed'); //Военный задерживается",
              "                }",
              "            }",
              "        }",
              "",
              "        //Собираем готовую реплику",
              "        tstr1 = '</color>' + Format(CT(dialog_path + '.WBPrepareStatus'),",
              "                                      '<PlayerRank'+'>', player_str_rank,",
              "                                      '<DateStatus'+'>', tstr1,",
              "                                      '<AttackShipsList'+'>', tstr2,",
              "                                      '');",
              "    }",
              "    else //Если все военные были уничтожены по пути к ВБ",
              "    {",
              "        //Собираем готовую реплику",
              "        tstr1 = '</color>' + Format(CT(dialog_path + '.WBPrepareStatusNoShips'),",
              "                                      '<PlayerRank'+'>', player_str_rank,",
              "                                      '<MilitaryBase'+'>', '<color=0,50,200>' + ShipName(cur_ruin) + '</color>',",
              "                                      '<StarToAttack'+'>', '<color=0,50,200>' + Name(GalaxyStar(GlobalWBOperationsArray[operation_num, 'StarToAttackId'] - 1)) + '</color>',",
              "                                      '<AttackDate'+'>', '<color=0,50,200>' + GameDateTxtByTurn(GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1) + '</color>',",
              "                                      '');",
              "    }",
              "",
              "    if((GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1) > CurTurn()) tstr2 = '</color>' + CT(dialog_path + '.PlayerPrepareStatusOk');",
              "    else tstr2 = '</color>' + CT(dialog_path + '.PlayerPrepareStatusDelayed');",
              "}",
              "else //Если уровень вовлечённости игрока недостаточно высок, чтобы получать подробный отчёт",
              "{",
              "    tstr1 = '</color>' + Format(CT(dialog_path + '.WBPrepareStatus'),",
              "                                  '<PlayerRank'+'>', player_str_rank,",
              "                                  '<StarToAttack'+'>', '<color=0,50,200>' + Name(GalaxyStar(GlobalWBOperationsArray[operation_num, 'StarToAttackId'] - 1)) + '</color>',",
              "                                  '');",
              "    tstr2 = '</color>' + CT(dialog_path + '.PlayerPrepareStatus');",
              "}",
              "//SFT('3333333333333333333333333333333');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  45,
          "#":  48,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Если уровень вовлечённости игрока слишком мал, то операция составляется за него автоматически",
              "if(operation_lvl <= 1)",
              "{",
              "    InitNewWBOperation(new_operation_arr, Id(cur_ruin), operation_lvl);",
              "",
              "    for(k = 1; k <= 15; k = k + 1)",
              "    {",
              "        //До N ближайших систем на выбор (лимит выставляется в начале диалога)",
              "        dword attack_star = stars_to_attack_arr[Rnd(1, min(ArrayDim(stars_to_attack_arr), stars_cnt_to_choose + 1), GetObjectGenerationSeed(GalaxyPtr()) + sqr(CurTurn() + 5363))];",
              "",
              "        //Автоматически выбираем место сбора",
              "        ArrayClear(tarr1);",
              "        tint1 = 5;",
              "        dword pirate_sector = StarToCon(PlanetToStar(PlanetPirateClan()));",
              "        for(i = 1; i < GalaxyStars(attack_star); i = i + 1)",
              "        {",
              "            cur_star = StarNearbyStars(attack_star, i);",
              "            if(StarOwner(cur_star)) continue;",
              "            if(StarCustomFaction(cur_star) != '') continue;",
              "            if(StarToCon(cur_star) == pirate_sector) continue;",
              "",
              "            //Нельзя выбрать систему в закрытом секторе или атакованную в настоящий момент",
              "            j = 0;",
              "            if(!SectorVisible(StarToCon(cur_star)) || StarBattle(cur_star))",
              "            {",
              "                tstr1 = DeleteTags(tstr1);",
              "                if(StarBattle(cur_star)) tstr1 = tstr1 + ' ' + CT(dialog_path + '.PlayerPlanningChooseStarUnderAttack');",
              "                j = 1;",
              "            }",
              "",
              "            if(!j) ArrayAdd(tarr1, Id(cur_star));",
              "",
              "            tint1 = tint1 - 1;",
              "            if(!tint1) break;",
              "        }",
              "",
              "        //Ищем подходящую система сбора среди доступных до тех пор, пока не найдём, либо пока не кончится счётчик переборов",
              "        ArrayClear(new_operation_arr['AlliesForcesId']);",
              "        if(ArrayDim(tarr1) > 1)",
              "        {",
              "            new_operation_arr['StarToAttackId'] = Id(attack_star);",
              "            new_operation_arr['GatheringPlaceId'] = tarr1[Rnd(1, ArrayDim(tarr1) - 1, GetObjectGenerationSeed(GalaxyPtr()) + sqr(CurTurn() + 8967))];",
              "",
              "            j = ArrayDim(militaries_arr['Warriors']);",
              "            for(i = 1; i < j; i = i + 1)",
              "            {",
              "                cur_ship = militaries_arr['Warriors', i];",
              "                if(~FindObjectInArray(new_operation_arr['AlliesForcesId'], Id(cur_ship))) continue;",
              "",
              "                ArrayAdd(new_operation_arr['AlliesForcesId'], Id(cur_ship));",
              "                new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + militaries_arr['WarriorsHireCost', i];",
              "                UpdateSidePowers();",
              "                if(coals_power_percent >= max_coals_power_percent)",
              "                {",
              "                    j = -1;",
              "                    break;",
              "                }",
              "            }",
              "            if(~j)",
              "            {",
              "                j = ArrayDim(militaries_arr['Battleships']);",
              "                for(i = 1; i < j; i = i + 1)",
              "                {",
              "                    cur_ship = militaries_arr['Battleships', i];",
              "                    if(~FindObjectInArray(new_operation_arr['AlliesForcesId'], Id(cur_ship))) continue;",
              "",
              "                    ArrayAdd(new_operation_arr['AlliesForcesId'], Id(cur_ship));",
              "                    new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + militaries_arr['BattleshipsHireCost', i];",
              "                    UpdateSidePowers();",
              "                    if(coals_power_percent >= max_coals_power_percent)",
              "                    {",
              "                        j = -1;",
              "                        break;",
              "                    }",
              "                }",
              "            }",
              "",
              "            //Сверяем соотношение сил между врагом в системе и атакующими военными в процентах",
              "            if(coals_power_percent >= min_coals_power_percent)",
              "            {",
              "                //Автоматически выбираем дату атаки",
              "                int min_time = 40;",
              "                int max_time = CurTurn() + (min_time * 2);",
              "                min_time = CurTurn() + min_time;",
              "                new_operation_arr['AttackDate'] = Rnd(min_time, min_time + (max_time - min_time), GetObjectGenerationSeed(GalaxyPtr()) + sqr(CurTurn() + 3574));",
              "                break;",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Если игрок уже создал планирование операции для данной ВБ на текущем ходу, то загружаем его, не создавая новое планирование",
              "int init_new = 0;",
              "if(new_operation_arr[0/*'PlanningDay'*/] != CurTurn()) init_new = 1;",
              "else if(new_operation_arr['MilitaryBaseId'] != Id(cur_ruin)) init_new = 1;",
              "else if(new_operation_arr['OrganizedByPlayer'] != operation_lvl) init_new = 1; //Если игрок ранее обновлял массив операции до получения нового звания на этом же ходу",
              "",
              "if(init_new)",
              "{",
              "    InitNewWBOperation(new_operation_arr, Id(cur_ruin), operation_lvl);",
              "",
              "    //Автоматический выбор системы, если игроку ещё не разрешают её выбирать",
              "    cur_star = 0;",
              "    if(new_operation_arr['OrganizedByPlayer'] <= 2)",
              "    {",
              "        //До N ближайших систем на выбор (лимит выставляется в начале диалога)",
              "        cur_star = stars_to_attack_arr[Rnd(1, min(ArrayDim(stars_to_attack_arr), stars_cnt_to_choose + 1), GetObjectGenerationSeed(GalaxyPtr()) + sqr(CurTurn() + 5363))];",
              "        new_operation_arr['StarToAttackId'] = Id(cur_star);",
              "    }",
              "",
              "    if(!cur_star)",
              "    {",
              "        tstr1 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenStarNotChoosed') + '</color>';",
              "        tstr3 = '<color=0,50,200>0</color>';",
              "    }",
              "    else",
              "    {",
              "        tstr1 = '<color=0,50,200>' + Name(cur_star) + '</color>';",
              "        UpdateSidePowers();",
              "        tstr3 = '<color=0,50,200>' + enemies_cnt + '</color>';",
              "    }",
              "",
              "    tstr1 = '</color>' + Format(CT(dialog_path + '.WBConfirmationYes'),",
              "                                  '<PlayerRank'+'>', player_str_rank,",
              "                                  '<StarToAttack'+'>', tstr1,",
              "                                  '<AlliesNumbers'+'>', '<color=255,0,0>0</color>',",
              "                                  '<EnemyNumbers'+'>', tstr3,",
              "                                  '<GatheringPlace'+'>', '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenGatherNotChoosed') + '</color>',",
              "                                  '<AttackDate'+'>', '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenDateNotChoosed') + '</color>',",
              "                                  '<Cost'+'>', '<color=0,50,200>0</color>',",
              "                                  '');",
              "    tstr2 = '</color>' + CT(dialog_path + '.PlayerToPlanning');",
              "    tstr3 = '</color>' + CT(dialog_path + '.PlayerBeginOperation');",
              "    tstr4 = '</color>' + CT(dialog_path + '.PlayerCancelOperation');",
              "}",
              "else",
              "{",
              "    if(ArrayDim(new_operation_arr['AlliesForcesId']) > 1) UpdateSidePowers(); //На всякий случай, т.к. часть переменных зануляются на старте диалога",
              "",
              "    if(new_operation_arr['StarToAttackId']) tstr1 = '<color=0,50,200>' + Name(GalaxyStar(new_operation_arr['StarToAttackId'] - 1)) + '</color>';",
              "    else tstr1 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenStarNotChoosed') + '</color>';",
              "",
              "    //Записываем счётчик вовлечённых в атаку военных",
              "    tstr2 = '<clr>' + (coals_cnt + big_coals_cnt) + '</color>';",
              "    i = ArrayDim(new_operation_arr['ShipyardsInvolvedId']) - 1; //Если игрок также заказал достройку военных на планетах",
              "    if(i) tstr2 = tstr2 + '+<clr>' + i + '</color>';",
              "    //Сверяем соотношение сил между врагом в системе и атакующими военными в процентах",
              "    if(coals_power_percent < min_coals_power_percent) tstr2 = Format(tstr2, '<clr', '<color=255,0,0', '');",
              "",
              "    //Записываем счётчик врагов в атакуемой системе",
              "    if(new_operation_arr['StarToAttackId']) tstr3 = '<color=0,50,200>' + enemies_cnt + '</color>';",
              "    else tstr3 = '<color=0,50,200>0</color>';",
              "",
              "    if(new_operation_arr['GatheringPlaceId'])",
              "    {",
              "        if(new_operation_arr['GatheringPlaceId'] > -1) tstr4 = '<color=0,50,200>' + Format(CT('FormGS.StarInfo'), '<Star'+'>', Name(GalaxyStar(new_operation_arr['GatheringPlaceId'] - 1)), '') + '</color>';",
              "        else tstr4 = '<color=0,50,200>' + Name(cur_ruin) + '</color>';",
              "    }",
              "    else tstr4 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenGatherNotChoosed') + '</color>';",
              "",
              "    if(new_operation_arr['AttackDate']) tstr5 = '<color=0,50,200>' + GameDateTxtByTurn(new_operation_arr['AttackDate']) + '</color>';",
              "    else tstr5 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenDateNotChoosed') + '</color>';",
              "",
              "    if(new_operation_arr['OperationCost'] <= ShipMoney(Player())) tstr6 = '<color=0,50,200>' + new_operation_arr['OperationCost'] + '</color>';",
              "    else tstr6 = '<color=255,0,0>' + new_operation_arr['OperationCost'] + '</color>';",
              "",
              "    //Собираем готовую реплику (проверка на случай, если выше операция была определена автоматически)",
              "    if(new_operation_arr['AttackDate'] || new_operation_arr['OrganizedByPlayer'] > 1)",
              "    {",
              "        tstr1 = '</color>' + Format(CT(dialog_path + '.WBAfterPlanning'),",
              "                                      '<PlayerRank'+'>', player_str_rank,",
              "                                      '<StarToAttack'+'>', tstr1,",
              "                                      '<AlliesNumbers'+'>', tstr2,",
              "                                      '<EnemyNumbers'+'>', tstr3,",
              "                                      '<GatheringPlace'+'>', tstr4,",
              "                                      '<AttackDate'+'>', tstr5,",
              "                                      '<Cost'+'>', tstr6,",
              "                                      '');",
              "        tstr2 = '</color>' + CT(dialog_path + '.PlayerToPlanning');",
              "        tstr3 = '</color>' + CT(dialog_path + '.PlayerBeginOperation');",
              "        tstr4 = '</color>' + CT(dialog_path + '.PlayerCancelOperation');",
              "    }",
              "    else //Автоподбор не смог найти достаточных сил для организации атаки",
              "    {",
              "        tstr1 = '</color>' + Format(CT(dialog_path + '.WBAfterPlanningNotFound'),",
              "                                      '<PlayerRank'+'>', player_str_rank,",
              "                                      '');",
              "        tstr2 = '</color>' + CT(dialog_path + '.PlayerAfterPlanningNotFound');",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  44,
          "#":  50,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + Format(CT(dialog_path + '.WBConfirmationNo'),",
              "                              '<PlayerRank'+'>', player_str_rank,",
              "                              '');",
              "tstr2 = '';"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  58,
          "#":  59,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + Format(CT(dialog_path + '.WBCancelOperation'),",
              "                              '<PlayerRank'+'>', player_str_rank,",
              "                              '');",
              "tstr2 = '';"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  56,
          "#":  61,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Запускаем подготовку к новой операции по запросу игрока",
              "ShipMoney(Player(), ShipMoney(Player()) - new_operation_arr['OperationCost']);",
              "Sound('Sound.Buy');",
              "",
              "cur_star = GalaxyStar(new_operation_arr['StarToAttackId'] - 1);",
              "",
              "ArrayDelete(new_operation_arr, 'PlanningDay'); //На данном этапе это уже не нужно",
              "operation_num = ArrayAdd(GlobalWBOperationsArray, new_operation_arr) - 1;",
              "",
              "new_operation_arr = newarray(1);",
              "new_operation_arr[0] = 0;",
              "GlobalWBOperationsArray[operation_num, 'AttackDate'] = GlobalWBOperationsArray[operation_num, 'AttackDate'] - 1; //Тёрнкод обсчитывается в конце расчёта хода, поэтому номера хода не соответствуют здравой логике",
              "",
              "if(GlobalWBOperationsArray[operation_num, 'GatheringPlaceId'] > -1)",
              "{",
              "    tstr1 = CT(dialog_path + '.WBBeginOperation');",
              "",
              "    //Координаты и радиус точки сбора военных в системе, если для места сбора выбрана система, а не ВБ",
              "    ArrayAdd(GlobalWBOperationsArray[operation_num], 0, 'GatheringPointCoordX');",
              "    ArrayAdd(GlobalWBOperationsArray[operation_num], 0, 'GatheringPointCoordY');",
              "    ArrayAdd(GlobalWBOperationsArray[operation_num], 0, 'GatheringPointRadius');",
              "",
              "    if(StarOwner(cur_star) == 1) tstr2 = 'Create';",
              "    else /*if(StarOwner(cur_star) == 2)*/ tstr2 = 'CreatePirates';",
              "    j = RndObject(0, 2, cur_star);",
              "    if(j) tstr2 = tstr2 + j;",
              "",
              "    tdwd1 = GalaxyStar(GlobalWBOperationsArray[operation_num, 'GatheringPlaceId'] - 1);",
              "    tstr2 = Format(CT('GalaxyNews.Group.WarriorLiberator.' + tstr2),",
              "                      '<StarNormal'+'>', Name(tdwd1),",
              "                      '<SectorNormal'+'>', Name(StarToCon(tdwd1)),",
              "                      '<StarEnemy'+'>', Name(cur_star),",
              "                      '<SectorEnemy'+'>', Name(StarToCon(cur_star)),",
              "                      '<Date'+'>', GameDateTxtByTurn(GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1));",
              "    AddPlanetNews(tstr2, 26);",
              "    Ether(7, 'ShuWarriors_Operation' + Id(cur_ruin), '<color=255,240,100>' + GameDateTxtByTurn(CurTurn()) + Format('</color><br> <br>') + tstr2);",
              "    Sound('Sound.NewMsg');",
              "}",
              "else",
              "{",
              "    tstr1 = CT(dialog_path + '.WBBeginOperationWithWB');",
              "    GlobalWBOperationsArray[operation_num, 'GatheringPlaceId'] = -1; //Ранее тут была записана стоимость участия ВБ в операции с отрицательным знаком",
              "    ShipDestination(cur_ruin, cur_star, GlobalWBOperationsArray[operation_num, 'AttackDate']);",
              "",
              "    tstr2 = 'Create';",
              "    j = RndObject(0, 2, cur_star);",
              "    if(j) tstr2 = tstr2 + j;",
              "",
              "    tdwd1 = ShipStar(cur_ruin);",
              "    tstr2 = Format(CT('GalaxyNews.WBGoToEnemyStar.' + tstr2),",
              "                      '<WB'+'>', ShipName(cur_ruin),",
              "                      '<WBStar'+'>', Name(tdwd1),",
              "                      '<WBSector'+'>', Name(StarToCon(tdwd1)),",
              "                      '<StarEnemy'+'>', Name(cur_star),",
              "                      '<SectorEnemy'+'>', Name(StarToCon(cur_star)),",
              "                      '<Date'+'>', GameDateTxtByTurn(GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1));",
              "    AddPlanetNews(tstr2, 45);",
              "    Ether(7, 'ShuWarriors_Operation' + Id(cur_ruin), '<color=255,240,100>' + GameDateTxtByTurn(CurTurn()) + Format('</color><br> <br>') + tstr2, cur_ruin);",
              "    Sound('Sound.NewMsg');",
              "}",
              "",
              "for(i = ArrayDim(GlobalWBOperationsArray[operation_num, 'AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "{",
              "    cur_ship = IdToShip(GlobalWBOperationsArray[operation_num, 'AlliesForcesId', i]);",
              "    cur_planet = GetShipHomePlanet(cur_ship);",
              "    RelationToRanger(cur_planet, Player(), max(RelationToRanger(cur_planet, Player()), 50));",
              "    if(GetShipPlanet(cur_ship) == cur_planet) TransferShip(cur_ship, GetShipHomePlanet(cur_ship)); //\"Приводим в чувства\" военных в гарнизонах (спасибо дабу за какаху)",
              "    OrderLock(cur_ship, 1);",
              "    ShipJoinToScript(cur_ship, 'Mod_ShuWarriors.OperativeWarriors.WarriorsOnPrepare');",
              "    if(Id(cur_ship) == GlobalWBOperationsArray[operation_num, 'FlagshipId'])",
              "    {",
              "        SetData(-1, 0, cur_ship); //Помечаем флагмана операции (игрок сможет взять его под свой личный контроль)",
              "        str text = ShipType(cur_ship);",
              "        if(text == 'Warrior')",
              "        {",
              "            //Также добавляем уникальный временный тип флагману операции",
              "            text = text + 'Big';",
              "            ShipType(cur_ship, text + 'Flagship');",
              "",
              "            //Необходимо, чтобы залочить игроку возможность активации камуфляжа на корпусе флагмана",
              "            j = ShipPilotRace(cur_ship);",
              "            if(j == Maloc) Chameleon(cur_ship, 'Ship.Maloc.' + text);",
              "            else if(j == Peleng) Chameleon(cur_ship, 'Ship.Peleng.' + text);",
              "            else if(j == People) Chameleon(cur_ship, 'Ship.People.' + text);",
              "            else if(j == Fei) Chameleon(cur_ship, 'Ship.Fei.' + text);",
              "            else if(j == Gaal) Chameleon(cur_ship, 'Ship.Gaal.' + text);",
              "        }",
              "        else ShipType(cur_ship, text + 'Flagship');",
              "    }",
              "",
              "    if(~GlobalWBOperationsArray[operation_num, 'GatheringPlaceId']) //Местом сбора выбрана система",
              "    {",
              "        SetData(GlobalWBOperationsArray[operation_num, 'GatheringPlaceId'], 1, cur_ship);",
              "        SetData(-GlobalWBOperationsArray[operation_num, 'StarToAttackId'], 2, cur_ship); //Маркер движения в точку сбора здесь выставит первый долетевший до системы сбора военный",
              "    }",
              "    else //Местом сбора выбрана ВБ",
              "    {",
              "        SetData(GlobalWBOperationsArray[operation_num, 'MilitaryBaseId'], 2, cur_ship);",
              "    }",
              "    SetData(operation_num, 3, cur_ship);",
              "",
              "    ShipFreeFlight(cur_ship); //Сразу же применяем выданные военному приказы",
              "}",
              "for(i = ArrayDim(GlobalWBOperationsArray[operation_num, 'ShipyardsInvolvedId']) - 1; i >= 1; i = i - 1)",
              "{",
              "    cur_planet = IdToPlanet(GlobalWBOperationsArray[operation_num, 'ShipyardsInvolvedId', i]);",
              "    RelationToRanger(cur_planet, Player(), max(RelationToRanger(cur_planet, Player()), 50));",
              "    cur_ship = BuyWarrior(cur_planet, 300);",
              "    TransferShip(cur_ship, cur_planet); //Вводим военного в список системы, иначе он не будет исполнять свою логику",
              "    ArrayAdd(GlobalWBOperationsArray[operation_num, 'AlliesForcesId'], Id(cur_ship));",
              "    ShipRefit(cur_ship);",
              "    ShipRefit(cur_ship);",
              "    ShipRefit(cur_ship);",
              "    ShipRefit(cur_ship);",
              "    ShipImproveItems(cur_ship, PlanetInventionLevel(cur_planet, 7) + RndObject(0, 2, cur_planet));",
              "    OrderLock(cur_ship, 1);",
              "    ShipJoinToScript(cur_ship, 'Mod_ShuWarriors.OperativeWarriors.WarriorsOnPrepare');",
              "    SetData(CurTurn() + RndObject(7, 14, cur_planet), 0, cur_ship); //Задержка до возможности взлёта с планеты только что построенного военного (типа доделывают корабль)",
              "    if(~GlobalWBOperationsArray[operation_num, 'GatheringPlaceId']) //Местом сбора выбрана система",
              "    {",
              "        SetData(GlobalWBOperationsArray[operation_num, 'GatheringPlaceId'], 1, cur_ship);",
              "        SetData(-GlobalWBOperationsArray[operation_num, 'StarToAttackId'], 2, cur_ship); //Маркер движения в точку сбора здесь выставит первый долетевший до системы сбора военный",
              "    }",
              "    else //Местом сбора выбрана ВБ",
              "    {",
              "        SetData(GlobalWBOperationsArray[operation_num, 'MilitaryBaseId'], 2, cur_ship);",
              "    }",
              "    SetData(operation_num, 3, cur_ship);",
              "}",
              "ArrayDelete(GlobalWBOperationsArray[operation_num], 'ShipyardsInvolvedId');",
              "ShipJoin(OperativeWB, cur_ruin);",
              "",
              "tstr1 = '</color>' + Format(tstr1,",
              "                              '<PlayerRank'+'>', player_str_rank,",
              "                              '<AttackDate'+'>', '<color=0,50,200>' + GameDateTxtByTurn(GlobalWBOperationsArray[operation_num, 'AttackDate'] + 1) + '</color>',",
              "                              '<StarToAttack'+'>', '<color=0,50,200>' + Name(cur_star) + '</color>',",
              "                              '');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  55,
          "#":  63,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Здесь собирается текст для экрана планирования",
              "if(!new_operation_arr['StarToAttackId'])",
              "{",
              "    tstr1 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenStarNotChoosed') + '</color>';",
              "    tstr2 = '<color=255,0,0>0</color>';",
              "    tstr3 = '<color=0,50,200>0</color>';",
              "    tstr4 = '<color=0,50,200>0%</color> / <color=0,50,200>0%</color>';",
              "    tstr5 = '<color=0,50,200>' + CT(dialog_path + '.WBPlanningScreenFlagshipNotChoosed') + '</color>';",
              "    tstr6 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenGatherNotChoosed') + '</color>';",
              "    tstr7 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenDateNotChoosed') + '</color>';",
              "    tstr8 = Format('<br>') + '- <color=0,50,200>' + CT(dialog_path + '.WBPlanningScreenShipsNotChoosed') + '</color>';",
              "}",
              "else",
              "{",
              "    cur_star = GalaxyStar(new_operation_arr['StarToAttackId'] - 1);",
              "",
              "    tstr1 = '<color=0,50,200>' + Name(GalaxyStar(new_operation_arr['StarToAttackId'] - 1)) + '</color>';",
              "",
              "    //Число атакующих военных",
              "    tstr2 = '<clr>' + (coals_cnt + big_coals_cnt) + '</color>';",
              "    //Если игрок также заказал достройку военных на планетах",
              "    i = ArrayDim(new_operation_arr['ShipyardsInvolvedId']) - 1;",
              "    if(i) tstr2 = tstr2 + '+<clr>' + i + '</color>';",
              "",
              "    //Выписываем число врагов в атакуемой системе",
              "    tstr3 = '<color=0,50,200>' + enemies_cnt + '</color>';",
              "",
              "    //Сверяем соотношение сил между врагом в системе и атакующими военными в процентах",
              "    if(coals_power_percent >= min_coals_power_percent)",
              "    {",
              "        if(coals_power_percent >= round(0.75 * max_coals_power_percent)) tstr4 = '<color=0,132,15>' + min(coals_power_percent, 999) + '%</color> / <color=0,50,200>100%</color>'; //Оптимальное значение силы атакующих подсвечивается зелёным",
              "        else tstr4 = '<color=0,50,200>' + min(coals_power_percent, 999) + '%</color> / <color=0,50,200>100%</color>';",
              "    }",
              "    else",
              "    {",
              "        tstr2 = Format(tstr2, '<clr', '<color=255,0,0', '');",
              "        tstr4 = '<color=255,0,0>' + min(coals_power_percent, 999) + '%</color> / <color=0,50,200>100%</color>';",
              "    }",
              "",
              "    //Выводим название выбранного флагмана, если тот выбран",
              "    if(!new_operation_arr['FlagshipId']) tstr5 = '<color=0,50,200>' + CT(dialog_path + '.WBPlanningScreenFlagshipNotChoosed') + '</color>';",
              "    else",
              "    {",
              "        tstr5 = Name(IdToShip(new_operation_arr['FlagshipId']));",
              "        i = GetGameOptions('FontDialog');",
              "        if(i == 1) tstr5 = CutStrLenght(tstr5, 23);",
              "        else if(i == 2) tstr5 = CutStrLenght(tstr5, 22);",
              "        else if(i == 3) tstr5 = CutStrLenght(tstr5, 21);",
              "        tstr5 = '<color=0,50,200>' + tstr5 + '</color>';",
              "    }",
              "",
              "    //Выводим название выбранного места сбора военных перед прыжком в атакуемую систему",
              "    if(!new_operation_arr['GatheringPlaceId']) tstr6 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenGatherNotChoosed') + '</color>';",
              "    else",
              "    {",
              "        if(new_operation_arr['GatheringPlaceId'] > 0) tstr6 = '<color=0,50,200>' + Name(GalaxyStar(new_operation_arr['GatheringPlaceId'] - 1)) + '</color>';",
              "        else //Местом сбора выбрана текущая военная база",
              "        {",
              "            tstr6 = Name(cur_ruin);",
              "            i = GetGameOptions('FontDialog');",
              "            if(i == 1 && count(tstr6) > 20)",
              "            {",
              "                tstr6 = CT('Script.Mod_ShuWarriors.MilitaryBaseShort') + ' ' + ShortName(cur_ruin);",
              "                CutStrLenght(tstr6, 20);",
              "            }",
              "            else if(i == 2 && count(tstr6) > 19)",
              "            {",
              "                tstr6 = CT('Script.Mod_ShuWarriors.MilitaryBaseShort') + ' ' + ShortName(cur_ruin);",
              "                CutStrLenght(tstr6, 19);",
              "            }",
              "            else if(i == 3 && count(tstr6) > 18)",
              "            {",
              "                tstr6 = CT('Script.Mod_ShuWarriors.MilitaryBaseShort') + ' ' + ShortName(cur_ruin);",
              "                CutStrLenght(tstr6, 18);",
              "            }",
              "            tstr6 = '<color=0,50,200>' + tstr6 + '</color>';",
              "        }",
              "    }",
              "",
              "    //Выводим выбранную для атаки дату",
              "    if(!new_operation_arr['AttackDate']) tstr7 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenDateNotChoosed') + '</color>';",
              "    else tstr7 = '<color=0,50,200>' + GameDateTxtByTurn(new_operation_arr['AttackDate']) + '</color>';",
              "",
              "    //Выводим список названий всех военных кораблей (а также ВБ, если участвует), записанных в операцию",
              "    tstr8 = '';",
              "    if(!coals_cnt) tstr8 = Format('<br>') + '- <color=0,50,200>' + CT(dialog_path + '.WBPlanningScreenShipsNotChoosed') + '</color>';",
              "    else for(i = 1; i < ArrayDim(new_operation_arr['AlliesForcesId']); i = i + 1) tstr8 = tstr8 + Format('<br>') + '- <color=0,50,200>' + Name(IdToShip(new_operation_arr['AlliesForcesId', i])) + '</color>';",
              "    if(new_operation_arr['GatheringPlaceId'] < 0) tstr8 = tstr8 + Format('<br>') + '- <color=0,50,200>' + Name(cur_ruin) + '</color>';",
              "}",
              "",
              "if(new_operation_arr['OperationCost'] <= ShipMoney(Player())) tstr9 = '<color=0,50,200>' + new_operation_arr['OperationCost'] + '</color>';",
              "else tstr9 = '<color=255,0,0>' + new_operation_arr['OperationCost'] + '</color>';",
              "",
              "tstr1 = '</color>' + Format(CT(dialog_path + '.WBPlanningScreen'),",
              "                              '<SplitLine'+'>', split_str,",
              "                              '<Indent'+'>', indent_str,",
              "                              '<StarToAttack'+'>', tstr1,",
              "                              '<AlliesNumbers'+'>', tstr2,",
              "                              '<EnemyNumbers'+'>', tstr3,",
              "                              '<ForcesRatio'+'>', tstr4,",
              "                              '<Flagship'+'>', tstr5,",
              "                              '<GatheringPlace'+'>', tstr6,",
              "                              '<AttackDate'+'>', tstr7,",
              "                              '<AttackShipsList'+'>', tstr8,",
              "                              '<Cost'+'>', tstr9,",
              "                              '');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  64,
          "#":  65,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(check < 0) exit; //Для отсечения лишних ответов при выборе системы/кораблей",
              "",
              "//Здесь собираются ответы для экрана планирования",
              "int star_not_choosed = 1;",
              "if(new_operation_arr['StarToAttackId']) star_not_choosed = 0;",
              "",
              "if(new_operation_arr['OrganizedByPlayer'] > 2)",
              "{",
              "    //Выбор системы для атаки",
              "    InjectAnswer('PlanScr', CT(dialog_path + '.PlayerPlanningChooseStar'), 1);",
              "}",
              "",
              "//Выбор атакующих военных",
              "AddDialogBlock(CT(dialog_path + '.PlayerPlanningChooseAttackers'), star_not_choosed);",
              "InjectAnswer('PlanScr', CT(dialog_path + '.PlayerPlanningChooseAttackers'), 2);",
              "",
              "//Выбор флагмана (доступен только, если в составе атакующих имеется линкор или дредноут)",
              "if(!CurrentMods('Tweaks\\SR2Dominators') && !CurrentMods('Tweaks\\SR2Reboot')) //В \"ретро-модах\" не существует флагманов",
              "{",
              "    check = 1;",
              "    if(!star_not_choosed)",
              "    {",
              "        if(big_coals_cnt) check = 0;",
              "    }",
              "    AddDialogBlock(CT(dialog_path + '.PlayerPlanningChooseFlagship'), check);",
              "    InjectAnswer('PlanScr', CT(dialog_path + '.PlayerPlanningChooseFlagship'), 3);",
              "}",
              "",
              "if(new_operation_arr['OrganizedByPlayer'] >= 2)",
              "{",
              "    //Заказать постройку кораблей на коалиционных планетах сектора (возможно только если игроку не хватает сил для нападения даже после выбора всех доступных военных кораблей в секторе)",
              "    check = 1;",
              "    if(!star_not_choosed)",
              "    {",
              "        //Достроить новые корабли можно, только если всех доступных для атаки сил в секторе не хватает",
              "        if(",
              "            (coals_power_percent < min_coals_power_percent && ArrayDim(new_operation_arr['AlliesForcesId']) - 1 >= ships_available) ||",
              "            ArrayDim(new_operation_arr['ShipyardsInvolvedId']) > 1",
              "          ) check = 0;",
              "    }",
              "    AddDialogBlock(CT(dialog_path + '.PlayerPlanningConstructionOrder'), check);",
              "    InjectAnswer('PlanScr', CT(dialog_path + '.PlayerPlanningConstructionOrder'), 4);",
              "}",
              "",
              "//Выбор места сбора военных перед атакой",
              "AddDialogBlock(CT(dialog_path + '.PlayerPlanningChooseGatheringPlace'), star_not_choosed);",
              "InjectAnswer('PlanScr', CT(dialog_path + '.PlayerPlanningChooseGatheringPlace'), 5);",
              "",
              "//Выбор точной даты атаки",
              "//Игрок может выбирать только из ограниченного диапазона и только после того, как все остальные обязательные условия для атаки будут выполнены",
              "if(star_not_choosed) check = 1;",
              "else if(!new_operation_arr['GatheringPlaceId']) check = 1;",
              "else if(coals_power_percent < min_coals_power_percent) check = 1;",
              "else check = 0;",
              "AddDialogBlock(CT(dialog_path + '.PlayerPlanningChooseAttackDate'), check);",
              "InjectAnswer('PlanScr', 'snap~' + CT(dialog_path + '.PlayerPlanningChooseAttackDate'), 6);",
              "",
              "//Завершить планирование",
              "InjectAnswer('PlanScr', CT(dialog_path + '.PlayerPlanningDone'), 0);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  114,
          "#":  71,
          "Code.Type":  "Turn",
          "Code":          
          [
              "FindStarToAttack(cur_ruin, stars_to_attack_arr);",
              "ships_available = FindAllMilitaryShipsInSector(cur_sector, militaries_arr, 1);",
              "",
              "if(ArrayDim(stars_to_attack_arr) > 1 && ArrayDim(militaries_arr['Warriors']) > 1)",
              "{",
              "    //Установка длины \"дефисного разделителя\" и отступа в зависимости от выбранного в игре размера шрифта",
              "    i = GetGameOptions('FontDialog');",
              "    if(!i)",
              "    {",
              "        split_str = '</color>-----------------------------------------------------------';",
              "        indent_str = CT('FormInfo.td_310') + CT('FormInfo.align_right');",
              "    }",
              "    else if(i == 1)",
              "    {",
              "        split_str = '</color>------------------------------------------';",
              "        indent_str = CT('FormInfo.td_312') + CT('FormInfo.align_right');",
              "    }",
              "    else if(i == 2)",
              "    {",
              "        split_str = '</color>-------------------------------------------';",
              "        indent_str = CT('FormInfo.td_324') + CT('FormInfo.align_right');",
              "    }",
              "    else //if(i == 3)",
              "    {",
              "        split_str = '</color>--------------------------------------';",
              "        indent_str = CT('FormInfo.td_325') + CT('FormInfo.align_right');",
              "    }",
              "",
              "    coals_cnt = ArrayDim(militaries_arr['Warriors']) - 1;",
              "    coals_power = 0;",
              "    for(i = coals_cnt; i >= 1; i = i - 1) coals_power = coals_power + GetShipAverageStrength(militaries_arr['Warriors', i]);",
              "    average_warrior_power = coals_power / coals_cnt; //Запоминаем среднюю силу для расчёта примерной сила при заказе достройки военных на планетах сектора",
              "    coals_cnt = 0;",
              "    coals_power = 0;",
              "",
              "    tstr1 = '</color>' + Format(CT(dialog_path + '.WBRequestOperation'),",
              "                              '<PlayerRank'+'>', player_str_rank,",
              "                              '<Sector'+'>', '<color=0,50,200>' + Name(StarToCon(ShipStar(cur_ruin))) + '</color>',",
              "                              '<MilitaryBase'+'>', '<color=0,50,200>' + ShipName(cur_ruin) + '</color>',",
              "                              '');",
              "}",
              "//Если вдруг атаковать нечего",
              "else if(ArrayDim(stars_to_attack_arr) > 1)",
              "{",
              "    tstr1 = '</color>' + Format(CT(dialog_path + '.WBRequestOperationNoTargetStars'),",
              "                                  '<PlayerRank'+'>', player_str_rank,",
              "                                  '<Sector'+'>', Name(cur_sector),",
              "                                  '');",
              "    tstr2 = '</color>' + CT(dialog_path + '.PlayerRequestOperationNoTargetStars');",
              "    operation_lvl = -1;",
              "}",
              "//Если вдруг атаковать некем (в секторе не нашлось ни одного простого военного)",
              "else //if(ArrayDim(militaries_arr['Warriors']) > 1)",
              "{",
              "    tstr1 = '</color>' + Format(CT(dialog_path + '.WBRequestOperationNoTargetStars'),",
              "                                  '<PlayerRank'+'>', player_str_rank,",
              "                                  '<Sector'+'>', Name(cur_sector),",
              "                                  '');",
              "    tstr2 = '</color>' + CT(dialog_path + '.PlayerRequestOperationNoTargetStars');",
              "    operation_lvl = -1;",
              "}",
              "",
              "tstr1 = '</color>' + Format(CT(dialog_path + '.WBRequestOperation'),",
              "                              '<PlayerRank'+'>', player_str_rank,",
              "                              '<Sector'+'>', '<color=0,50,200>' + Name(StarToCon(ShipStar(cur_ruin))) + '</color>',",
              "                              '<MilitaryBase'+'>', '<color=0,50,200>' + ShipName(cur_ruin) + '</color>',",
              "                              '');",
              "tstr2 = '</color>' + CT(dialog_path + '.PlayerConfirmationYes');",
              "tstr3 = '</color>' + CT(dialog_path + '.PlayerConfirmationNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  66,
          "#":  79,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Выбор системы для атаки",
              "if(GAnswerData == 1)",
              "{",
              "    check = -1; //Маркер для диалога с выбором",
              "",
              "    for(i = 1; i < min(ArrayDim(stars_to_attack_arr), stars_cnt_to_choose + 1); i = i + 1) //До N ближайших систем на выбор (зависит от уровня вовлечённости игрока)",
              "    {",
              "        cur_star = stars_to_attack_arr[i];",
              "        if(Id(cur_star) != new_operation_arr['StarToAttackId']) tstr1 = Format(CT(dialog_path + '.PlayerPlanningChooseStarToAttack'), '<Star'+'>', Name(cur_star), '');",
              "        else tstr1 = Format(CT(dialog_path + '.PlayerPlanningChooseStarToAttack'), '<Star'+'>', '<color=0,50,200>' + Name(cur_star) + '</color>', ''); //Пометка для уже выбранной системы",
              "",
              "        if(StarOwner(cur_star) == 1)",
              "        {",
              "            tstr2 = StarCustomFaction(cur_star);",
              "            if(tstr2 == '')",
              "            {",
              "                if(StarSeries(cur_star) == 0) tstr1 = tstr1 + ' (<color=255,0,0>' + lowercase(CT('FormInfo.Blazeroids')) + '</color>)';",
              "                else if(StarSeries(cur_star) == 1) tstr1 = tstr1 + ' (<color=0,135,185>' + lowercase(CT('FormInfo.Kelleroids')) + '</color>)';",
              "                else if(StarSeries(cur_star) == 2) tstr1 = tstr1 + ' (<color=61,155,0>' + lowercase(CT('FormInfo.Terronoids')) + '</color>)';",
              "            }",
              "            else if(tstr2 == 'Klissan') tstr1 = tstr1 + ' (<color=93,155,93>' + lowercase(CT('FormGameSet2.Common.LevelGroupKlissan')) + '</color>)';",
              "        }",
              "        else if(StarOwner(cur_star) == 2) tstr1 = tstr1 + ' (<color=235,235,235>' + lowercase(CT('FormGameSet2.Common.LevelGroup1')) + '</color>)';",
              "",
              "        if(!SectorVisible(StarToCon(cur_star))) //Нельзя выбрать систему в закрытом секторе",
              "        {",
              "            tstr1 = DeleteTags(tstr1);",
              "            AddDialogBlock(tstr1, 1);",
              "        }",
              "        else AddDialogBlock(tstr1, 0);",
              "        InjectAnswer('PlanScrChoose', tstr1, cur_star);",
              "    }",
              "",
              "    //Назад",
              "    InjectAnswer('PlanScrChoose', CT(dialog_path + '.PlayerPlanningChooseBack'), 0);",
              "}",
              "//Выбор атакующих военных (доступных кораблей из списка)",
              "else if(GAnswerData == 2)",
              "{",
              "    check = -2; //Маркер для диалога с выбором",
              "    k = 0;",
              "",
              "    //Простые военные",
              "    for(i = 1; i < ArrayDim(militaries_arr['Warriors']); i = i + 1)",
              "    {",
              "        cur_ship = militaries_arr['Warriors', i];",
              "        if(FindObjectInArray(new_operation_arr['AlliesForcesId'], Id(cur_ship)) == -1)",
              "        {",
              "            if(coals_power_percent >= max_coals_power_percent) j = 1;",
              "            else j = 0;",
              "            tstr1 = Name(cur_ship);",
              "        }",
              "        else",
              "        {",
              "            j = 0;",
              "            tstr1 = '<color=0,50,200>' + Name(cur_ship) + '</color>'; //Пометка для уже выбранного корабля",
              "        }",
              "",
              "        if(!j) k = k + 1;",
              "        AddDialogBlock(tstr1, j);",
              "        InjectAnswer('PlanScrChoose', 'snap~' + tstr1, '1' + i);",
              "    }",
              "    //Линкоры (если есть)",
              "    for(i = 1; i < ArrayDim(militaries_arr['Battleships']); i = i + 1)",
              "    {",
              "        cur_ship = militaries_arr['Battleships', i];",
              "        if(FindObjectInArray(new_operation_arr['AlliesForcesId'], Id(cur_ship)) == -1)",
              "        {",
              "            if(coals_power_percent >= max_coals_power_percent) j = 1;",
              "            else j = 0;",
              "            tstr1 = Name(cur_ship);",
              "        }",
              "        else",
              "        {",
              "            j = 0;",
              "            tstr1 = '<color=0,50,200>' + Name(cur_ship) + '</color>'; //Пометка для уже выбранного корабля",
              "        }",
              "",
              "        if(!j) k = k + 1;",
              "        AddDialogBlock(tstr1, j);",
              "        InjectAnswer('PlanScrChoose', 'snap~' + tstr1, '2' + i);",
              "    }",
              "    //Дредноуты (если есть)",
              "    if(new_operation_arr['OrganizedByPlayer'] >= 4)",
              "    {",
              "        for(i = 1; i < ArrayDim(militaries_arr['Dreadnoughts']); i = i + 1)",
              "        {",
              "            cur_ship = militaries_arr['Dreadnoughts', i];",
              "            if(FindObjectInArray(new_operation_arr['AlliesForcesId'], Id(cur_ship)) == -1)",
              "            {",
              "                if(coals_power_percent >= max_coals_power_percent) j = 1;",
              "                else j = 0;",
              "                tstr1 = Name(cur_ship);",
              "            }",
              "            else",
              "            {",
              "                j = 0;",
              "                tstr1 = '<color=0,50,200>' + Name(cur_ship) + '</color>'; //Пометка для уже выбранного корабля",
              "            }",
              "",
              "            if(!j) k = k + 1;",
              "            AddDialogBlock(tstr1, j);",
              "            InjectAnswer('PlanScrChoose', 'snap~' + tstr1, '3' + i);",
              "        }",
              "    }",
              "",
              "    //Выбрать всех",
              "    tstr1 = CT(dialog_path + '.PlayerPlanningChooseAttackersAddAll');",
              "    if(coals_power_percent >= max_coals_power_percent) j = 1;",
              "    else if(k <= ArrayDim(new_operation_arr['AlliesForcesId']) - 1) j = 1; //Если уже и так выбраны все возможные корабли",
              "    else j = 0;",
              "    AddDialogBlock(tstr1, j);",
              "    InjectAnswer('PlanScrChoose', 'snap~' + tstr1, -1);",
              "    //Отменить всех",
              "    tstr1 = CT(dialog_path + '.PlayerPlanningChooseAttackersRemoveAll');",
              "    if(ArrayDim(new_operation_arr['AlliesForcesId']) > 1) j = 0;",
              "    else j = 1;",
              "    AddDialogBlock(tstr1, j);",
              "    InjectAnswer('PlanScrChoose', 'snap~' + tstr1, -2);",
              "    //Назад",
              "    InjectAnswer('PlanScrChoose', CT(dialog_path + '.PlayerPlanningChooseBack'), 0);",
              "}",
              "//Выбор флагмана (доступен только, если в составе атакующих имеется линкор или дредноут)",
              "else if(GAnswerData == 3)",
              "{",
              "    check = -3; //Маркер для диалога с выбором",
              "",
              "    for(i = 1; i < ArrayDim(new_operation_arr['AlliesForcesId']); i = i + 1)",
              "    {",
              "        cur_ship = IdToShip(new_operation_arr['AlliesForcesId', i]);",
              "        if(!ShipSubType(cur_ship)) continue; //Флагманом могут быть назначены линкоры и дредноуты",
              "",
              "        if(Id(cur_ship) != new_operation_arr['FlagshipId']) tstr1 = Name(cur_ship);",
              "        else tstr1 = '<color=0,50,200>' + Name(cur_ship) + '</color>'; //Пометка для уже выбранного флагмана",
              "",
              "        InjectAnswer('PlanScrChoose', tstr1, cur_ship);",
              "    }",
              "",
              "    //Отменить выбор",
              "    tstr1 = CT(dialog_path + '.PlayerPlanningChooseRemoveFlagship');",
              "    if(!new_operation_arr['FlagshipId']) j = 1;",
              "    else j = 0;",
              "    AddDialogBlock(tstr1, j);",
              "    InjectAnswer('PlanScrChoose', tstr1, -1);",
              "    //Назад",
              "    InjectAnswer('PlanScrChoose', CT(dialog_path + '.PlayerPlanningChooseBack'), 0);",
              "}",
              "//Заказать постройку кораблей на коалиционных планетах сектора (возможно только если игроку не хватает сил для нападения даже после выбора всех доступных военных кораблей в секторе)",
              "else if(GAnswerData == 4)",
              "{",
              "    check = -4; //Маркер для диалога с выбором",
              "",
              "    k = 0;",
              "    for(i = 0; i < ConStars(cur_sector); i = i + 1)",
              "    {",
              "        cur_star = ConStar(cur_sector, i);",
              "        if(StarOwner(cur_star)) continue;",
              "        if(StarCustomFaction(cur_star) != '') continue;",
              "        if(cur_star == PlanetToStar(PlanetPirateClan())) continue;",
              "",
              "        for(j = 0; j < StarPlanets(cur_star); j = j + 1)",
              "        {",
              "            cur_planet = StarPlanets(cur_star, j);",
              "            if(PlanetOwner(cur_planet) == None) continue;",
              "",
              "            tstr1 = Format(CT(dialog_path + '.PlayerPlanningConstructionOrderPlanet'), '<Planet'+'>', PlanetName(cur_planet));",
              "            if(~FindObjectInArray(new_operation_arr['ShipyardsInvolvedId'], Id(cur_planet))) tstr1 = tstr1 + ' ' + CT(dialog_path + '.PlayerPlanningConstructionOrderPlanetSet');",
              "            //Использовать верфи допускается только в случае острой нехватки кораблей для атаки",
              "            else if(coals_power_percent >= min_coals_power_percent)",
              "            {",
              "                tstr1 = DeleteTags(tstr1);",
              "                AddDialogBlock(tstr1, 1);",
              "            }",
              "",
              "            k = k + 1;",
              "            InjectAnswer('PlanScrChoose', 'snap~' + tstr1, cur_planet);",
              "        }",
              "    }",
              "",
              "    //Задействовать все",
              "    tstr1 = CT(dialog_path + '.PlayerPlanningChooseConstructionOrderAddAll');",
              "    if(coals_power_percent >= min_coals_power_percent) j = 1;",
              "    else if(k <= ArrayDim(new_operation_arr['ShipyardsInvolvedId']) - 1) j = 1; //Если уже и так выбраны все возможные планеты",
              "    else j = 0;",
              "    AddDialogBlock(tstr1, j);",
              "    InjectAnswer('PlanScrChoose', 'snap~' + tstr1, -1);",
              "    //Остановить все",
              "    tstr1 = CT(dialog_path + '.PlayerPlanningChooseConstructionOrderRemoveAll');",
              "    if(ArrayDim(new_operation_arr['ShipyardsInvolvedId']) > 1) j = 0;",
              "    else j = 1;",
              "    AddDialogBlock(tstr1, j);",
              "    InjectAnswer('PlanScrChoose', 'snap~' + tstr1, -2);",
              "    //Назад",
              "    InjectAnswer('PlanScrChoose', CT(dialog_path + '.PlayerPlanningChooseBack'), 0);",
              "}",
              "//Выбор места сбора военных перед атакой",
              "else if(GAnswerData == 5)",
              "{",
              "    check = -5; //Маркер для диалога с выбором",
              "",
              "    tint1 = 5;",
              "    dword pirate_sector = StarToCon(PlanetToStar(PlanetPirateClan()));",
              "    dword attack_star = GalaxyStar(new_operation_arr['StarToAttackId'] - 1);",
              "    for(i = 1; i < GalaxyStars(attack_star); i = i + 1)",
              "    {",
              "        cur_star = StarNearbyStars(attack_star, i);",
              "        if(StarOwner(cur_star)) continue;",
              "        if(StarCustomFaction(cur_star) != '') continue;",
              "        if(StarToCon(cur_star) == pirate_sector) continue;",
              "",
              "        if(Id(cur_star) != new_operation_arr['GatheringPlaceId']) tstr1 = Name(cur_star);",
              "        else tstr1 = '<color=0,50,200>' + Name(cur_star) + '</color>'; //Пометка для уже выбранной системы",
              "",
              "        //Нельзя выбрать систему в закрытом секторе или атакованную в настоящий момент",
              "        j = 0;",
              "        if(!SectorVisible(StarToCon(cur_star)) || StarBattle(cur_star))",
              "        {",
              "            tstr1 = DeleteTags(tstr1);",
              "            if(StarBattle(cur_star)) tstr1 = tstr1 + ' ' + CT(dialog_path + '.PlayerPlanningChooseStarUnderAttack');",
              "            j = 1;",
              "        }",
              "",
              "        AddDialogBlock(tstr1, j);",
              "        InjectAnswer('PlanScrChoose', tstr1, cur_star);",
              "",
              "        tint1 = tint1 - 1;",
              "        if(!tint1) break;",
              "    }",
              "",
              "    if(new_operation_arr['OrganizedByPlayer'] > 3)",
              "    {",
              "        //Добавляем возможность выбора в качестве точки сбора текущей ВБ (маркер -1)",
              "        if(new_operation_arr['GatheringPlaceId'] > -1)",
              "        {",
              "            tstr1 = Name(cur_ruin);",
              "            //Для выбора ВБ местом сбора необходимо иметь не менее 5 военных в атакующей группе",
              "            if(ArrayDim(new_operation_arr['AlliesForcesId']) < (min_warriors_to_add_WB + 1))",
              "            {",
              "                tstr1 = tstr1 + ' ' + CT(dialog_path + '.PlayerPlanningChooseGatheringPlaceNotEnoughShips');",
              "                AddDialogBlock(tstr1, 1);",
              "            }",
              "        }",
              "        else tstr1 = '<color=0,50,200>' + Name(cur_ruin) + '</color>';",
              "        InjectAnswer('PlanScrChoose', tstr1, -1);",
              "    }",
              "",
              "    //Назад",
              "    InjectAnswer('PlanScrChoose', CT(dialog_path + '.PlayerPlanningChooseBack'), 0);",
              "}",
              "//Выбор точной даты атаки (игрок может выбирать только из ограниченного диапазона)",
              "else if(GAnswerData == 6)",
              "{",
              "    int min_time = 40;",
              "    if(ArrayDim(new_operation_arr['ShipyardsInvolvedId']) > 1) min_time = min_time + 15;",
              "    int max_time = CurTurn() + (min_time * 3);",
              "    min_time = CurTurn() + min_time;",
              "    ArrayClear(tarr1);",
              "    ArrayDelete(tarr1, 0);",
              "    for(i = min_time; i <= max_time; i = i + 1) ArrayAdd(tarr1, GameDateTxtByTurn(i));",
              "    new_operation_arr['AttackDate'] = NumberBox('Bm.Icons.DateCalendar', CT(dialog_path + '.PlayerPlanningChooseAttackDateChoose'), min_time, max_time, max_time, '', min_time, tarr1);",
              "",
              "    check = 6;",
              "}",
              "//Завершение планирования",
              "else",
              "{",
              "    if(new_operation_arr['StarToAttackId']) tstr1 = '<color=0,50,200>' + Name(GalaxyStar(new_operation_arr['StarToAttackId'] - 1)) + '</color>';",
              "    else tstr1 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenStarNotChoosed') + '</color>';",
              "",
              "    //Записываем счётчик вовлечённых в атаку военных",
              "    tstr2 = '<clr>' + (coals_cnt + big_coals_cnt) + '</color>';",
              "    i = ArrayDim(new_operation_arr['ShipyardsInvolvedId']) - 1; //Если игрок также заказал достройку военных на планетах",
              "    if(i) tstr2 = tstr2 + '+<clr>' + i + '</color>';",
              "    //Сверяем соотношение сил между врагом в системе и атакующими военными в процентах",
              "    if(coals_power_percent < min_coals_power_percent) tstr2 = Format(tstr2, '<clr', '<color=255,0,0', '');",
              "",
              "    //Записываем счётчик врагов в атакуемой системе",
              "    if(new_operation_arr['StarToAttackId']) tstr3 = '<color=0,50,200>' + enemies_cnt + '</color>';",
              "    else tstr3 = '<color=0,50,200>0</color>';",
              "",
              "    if(new_operation_arr['GatheringPlaceId'])",
              "    {",
              "        if(new_operation_arr['GatheringPlaceId'] > -1) tstr4 = '<color=0,50,200>' + Format(CT('FormGS.StarInfo'), '<Star'+'>', Name(GalaxyStar(new_operation_arr['GatheringPlaceId'] - 1)), '') + '</color>';",
              "        else tstr4 = '<color=0,50,200>' + Name(cur_ruin) + '</color>';",
              "    }",
              "    else tstr4 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenGatherNotChoosed') + '</color>';",
              "",
              "    if(new_operation_arr['AttackDate']) tstr5 = '<color=0,50,200>' + GameDateTxtByTurn(new_operation_arr['AttackDate']) + '</color>';",
              "    else tstr5 = '<color=255,0,0>' + CT(dialog_path + '.WBPlanningScreenDateNotChoosed') + '</color>';",
              "",
              "    if(new_operation_arr['OperationCost'] <= ShipMoney(Player())) tstr6 = '<color=0,50,200>' + new_operation_arr['OperationCost'] + '</color>';",
              "    else tstr6 = '<color=255,0,0>' + new_operation_arr['OperationCost'] + '</color>';",
              "",
              "    //Собираем готовую реплику",
              "    tstr1 = '</color>' + Format(CT(dialog_path + '.WBAfterPlanning'),",
              "                                  '<PlayerRank'+'>', player_str_rank,",
              "                                  '<StarToAttack'+'>', tstr1,",
              "                                  '<AlliesNumbers'+'>', tstr2,",
              "                                  '<EnemyNumbers'+'>', tstr3,",
              "                                  '<GatheringPlace'+'>', tstr4,",
              "                                  '<AttackDate'+'>', tstr5,",
              "                                  '<Cost'+'>', tstr6,",
              "                                  '');",
              "    tstr2 = '</color>' + CT(dialog_path + '.PlayerToPlanning');",
              "    tstr3 = '</color>' + CT(dialog_path + '.PlayerBeginOperation');",
              "    tstr4 = '</color>' + CT(dialog_path + '.PlayerCancelOperation');",
              "",
              "    check = 0;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  84,
          "#":  85,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Выбор или перевыбор системы обнуляет всю ранее заданную информацию",
              "if(check == -1)",
              "{",
              "    if(GAnswerData) //Если игрок не закрыл экран выбора системы",
              "    {",
              "        if(Id(GAnswerData) != new_operation_arr['StarToAttackId'])",
              "        {",
              "            new_operation_arr['StarToAttackId'] = Id(GAnswerData);",
              "            ArrayClear(new_operation_arr['AlliesForcesId']);",
              "            ArrayClear(new_operation_arr['ShipyardsInvolvedId']);",
              "            new_operation_arr['FlagshipId'] = 0;",
              "            new_operation_arr['GatheringPlaceId'] = 0;",
              "            new_operation_arr['AttackDate'] = 0;",
              "",
              "            coals_cnt = 0;",
              "            big_coals_cnt = 0;",
              "            coals_power = 0.0;",
              "            coals_power_percent = 0;",
              "            enemies_cnt = 0;",
              "            enemies_power = 0.0;",
              "            new_operation_arr['OperationCost'] = 0;",
              "",
              "            UpdateSidePowers();",
              "        }",
              "    }",
              "",
              "    check = 0; //Чтобы больше не блокировать основные ответы экрана планирования после завершения выбора системы/кораблей",
              "}",
              "//Добавление/исключение военных в атакующую группу",
              "else if(check == -2)",
              "{",
              "    if(GAnswerData) //Если игрок не закрыл экран выбора военных",
              "    {",
              "        if(int(GAnswerData) == -1) //Игрок выбрал вариант \"Выбрать всех\"",
              "        {",
              "            j = ArrayDim(militaries_arr['Warriors']);",
              "            for(i = 1; i < j; i = i + 1)",
              "            {",
              "                cur_ship = militaries_arr['Warriors', i];",
              "                if(~FindObjectInArray(new_operation_arr['AlliesForcesId'], Id(cur_ship))) continue;",
              "",
              "                ArrayAdd(new_operation_arr['AlliesForcesId'], Id(cur_ship));",
              "                new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + militaries_arr['WarriorsHireCost', i];",
              "                UpdateSidePowers();",
              "                if(coals_power_percent >= max_coals_power_percent)",
              "                {",
              "                    j = -1;",
              "                    break;",
              "                }",
              "            }",
              "            if(~j)",
              "            {",
              "                j = ArrayDim(militaries_arr['Battleships']);",
              "                for(i = 1; i < j; i = i + 1)",
              "                {",
              "                    cur_ship = militaries_arr['Battleships', i];",
              "                    if(~FindObjectInArray(new_operation_arr['AlliesForcesId'], Id(cur_ship))) continue;",
              "",
              "                    ArrayAdd(new_operation_arr['AlliesForcesId'], Id(cur_ship));",
              "                    new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + militaries_arr['BattleshipsHireCost', i];",
              "                    UpdateSidePowers();",
              "                    if(coals_power_percent >= max_coals_power_percent)",
              "                    {",
              "                        j = -1;",
              "                        break;",
              "                    }",
              "                }",
              "            }",
              "            if(new_operation_arr['OrganizedByPlayer'] >= 4)",
              "            {",
              "                if(~j)",
              "                {",
              "                    j = ArrayDim(militaries_arr['Dreadnoughts']);",
              "                    for(i = 1; i < j; i = i + 1)",
              "                    {",
              "                        cur_ship = militaries_arr['Dreadnoughts', i];",
              "                        if(~FindObjectInArray(new_operation_arr['AlliesForcesId'], Id(cur_ship))) continue;",
              "",
              "                        ArrayAdd(new_operation_arr['AlliesForcesId'], Id(cur_ship));",
              "                        new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + militaries_arr['DreadnoughtsHireCost', i];",
              "                        UpdateSidePowers();",
              "                        if(coals_power_percent >= max_coals_power_percent)",
              "                        {",
              "                            j = -1;",
              "                            break;",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "        }",
              "        else if(int(GAnswerData) == -2) //Игрок выбрал вариант \"Отменить всех\"",
              "        {",
              "            ArrayClear(new_operation_arr['AlliesForcesId']);",
              "            ArrayClear(new_operation_arr['ShipyardsInvolvedId']);",
              "            new_operation_arr['FlagshipId'] = 0;",
              "            new_operation_arr['AttackDate'] = 0;",
              "            coals_cnt = 0;",
              "            big_coals_cnt = 0;",
              "            coals_power = 0;",
              "            coals_power_percent = 0;",
              "",
              "            //Если военных в атакующей группе стало недостаточно для использования ВБ в качестве места сбора",
              "            if(new_operation_arr['GatheringPlaceId'] < 0)",
              "            {",
              "                if(ArrayDim(new_operation_arr['AlliesForcesId']) < (min_warriors_to_add_WB + 1))",
              "                {",
              "                    new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + new_operation_arr['GatheringPlaceId'];",
              "                    new_operation_arr['GatheringPlaceId'] = 0;",
              "                }",
              "            }",
              "",
              "            new_operation_arr['OperationCost'] = 0;",
              "        }",
              "        else",
              "        {",
              "            if(substr(GAnswerData, 0, 1) == 1) str section = 'Warriors';",
              "            else if(substr(GAnswerData, 0, 1) == 2) section = 'Battleships';",
              "            else /*if(substr(GAnswerData, 0, 1) == 3)*/ section = 'Dreadnoughts';",
              "            int num = substr(GAnswerData, 1);",
              "            cur_ship = Id(militaries_arr[section, num]);",
              "",
              "            //Военный ещё не добавлен в группу - добавляем",
              "            int inner_num = FindObjectInArray(new_operation_arr['AlliesForcesId'], cur_ship);",
              "            if(inner_num == -1)",
              "            {",
              "                ArrayAdd(new_operation_arr['AlliesForcesId'], cur_ship);",
              "                new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + militaries_arr[section + 'HireCost', num];",
              "            }",
              "            //Военный уже в группе - исключаем",
              "            else",
              "            {",
              "                ArrayDelete(new_operation_arr['AlliesForcesId'], inner_num);",
              "                new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] - new_operation_arr['ShipyardsInvolvedId', 0];",
              "                ArrayClear(new_operation_arr['ShipyardsInvolvedId']);",
              "                if(cur_ship == new_operation_arr['FlagshipId']) new_operation_arr['FlagshipId'] = 0;",
              "                new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] - militaries_arr[section + 'HireCost', num];",
              "",
              "                //Если военных в атакующей группе стало недостаточно для использования ВБ в качестве места сбора",
              "                if(new_operation_arr['GatheringPlaceId'] < 0)",
              "                {",
              "                    if(ArrayDim(new_operation_arr['AlliesForcesId']) < (min_warriors_to_add_WB + 1))",
              "                    {",
              "                        new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + new_operation_arr['GatheringPlaceId'];",
              "                        new_operation_arr['GatheringPlaceId'] = 0;",
              "                    }",
              "                }",
              "            }",
              "",
              "            UpdateSidePowers();",
              "            if(coals_power_percent < min_coals_power_percent) new_operation_arr['AttackDate'] = 0;",
              "        }",
              "",
              "        GAnswerData = 2;",
              "    }",
              "    else check = 0; //Снимаем блокировку",
              "}",
              "//Выбор флагмана",
              "else if(check == -3)",
              "{",
              "    //Если игрок не закрыл экран выбора флагмана",
              "    if(GAnswerData == -1) new_operation_arr['FlagshipId'] = 0;",
              "    else if(GAnswerData) new_operation_arr['FlagshipId'] = Id(GAnswerData);",
              "",
              "    check = 0; //Снимаем блокировку",
              "}",
              "//Заказ постройки новых кораблей на коалиционных планетах сектора (возможен только если игроку не хватает сил для нападения даже после выбора всех доступных военных кораблей в секторе)",
              "else if(check == -4)",
              "{",
              "    if(GAnswerData)",
              "    {",
              "        if(GAnswerData == -1) //Игрок выбрал вариант \"Задействовать все\"",
              "        {",
              "            for(i = 0; i < ConStars(cur_sector); i = i + 1)",
              "            {",
              "                cur_star = ConStar(cur_sector, i);",
              "                if(StarOwner(cur_star)) continue;",
              "                if(StarCustomFaction(cur_star) != '') continue;",
              "                if(cur_star == PlanetToStar(PlanetPirateClan())) continue;",
              "",
              "                for(j = 0; j < StarPlanets(cur_star); j = j + 1)",
              "                {",
              "                    cur_planet = StarPlanets(cur_star, j);",
              "                    if(PlanetOwner(cur_planet) == None) continue;",
              "                    if(~FindObjectInArray(new_operation_arr['ShipyardsInvolvedId'], Id(cur_planet))) continue;",
              "",
              "                    ArrayAdd(new_operation_arr['ShipyardsInvolvedId'], Id(cur_planet));",
              "                    //Считаем цену постройки военного на данной планете (чем более продвинута планета по ГТУ, тем дороже обойдётся постройка)",
              "                    tint1 = CalcBuildWarriorStats(cur_planet, 0);",
              "",
              "                    new_operation_arr['ShipyardsInvolvedId', 0] = tint1 + new_operation_arr['ShipyardsInvolvedId', 0];",
              "                    new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + tint1;",
              "                    UpdateSidePowers();",
              "                    if(coals_power_percent >= min_coals_power_percent) break;",
              "                }",
              "            }",
              "        }",
              "        else if(GAnswerData == -2) //Игрок выбрал вариант \"Отменить все\"",
              "        {",
              "            new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] - new_operation_arr['ShipyardsInvolvedId', 0];",
              "            ArrayClear(new_operation_arr['ShipyardsInvolvedId']);",
              "            UpdateSidePowers();",
              "        }",
              "        else //Игрок выбрал из списка конкретную планету",
              "        {",
              "            cur_planet = GAnswerData;",
              "",
              "            //Считаем цену постройки военного на данной планете (чем более продвинута планета по ГТУ, тем дороже обойдётся постройка)",
              "            tint1 = CalcBuildWarriorStats(cur_planet, 0);",
              "",
              "            j = FindObjectInArray(new_operation_arr['ShipyardsInvolvedId'], Id(cur_planet));",
              "            if(j == -1) //Планеты ещё нет в списке, добавляем",
              "            {",
              "                ArrayAdd(new_operation_arr['ShipyardsInvolvedId'], Id(cur_planet));",
              "                new_operation_arr['ShipyardsInvolvedId', 0] = tint1 + new_operation_arr['ShipyardsInvolvedId', 0];",
              "                new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + tint1;",
              "            }",
              "            else //Планета уже добавлена в список, удаляем",
              "            {",
              "                ArrayDelete(new_operation_arr['ShipyardsInvolvedId'], j);",
              "                new_operation_arr['ShipyardsInvolvedId', 0] = new_operation_arr['ShipyardsInvolvedId', 0] - tint1;",
              "                new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] - tint1;",
              "            }",
              "",
              "            UpdateSidePowers();",
              "        }",
              "",
              "        GAnswerData = 4;",
              "    }",
              "    else check = 0; //Снимаем блокировку",
              "}",
              "//Выбор места сбора перед атакой",
              "else if(check == -5)",
              "{",
              "    //Если игрок не закрыл экран выбора места сбора",
              "    if(GAnswerData)",
              "    {",
              "        if(~int(GAnswerData)) //В качестве места сбора была выбрана система",
              "        {",
              "            if(new_operation_arr['GatheringPlaceId'] != GAnswerData)",
              "            {",
              "                if(new_operation_arr['GatheringPlaceId'] < 0) //Если ранее была выбрана военная база",
              "                {",
              "                    new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + new_operation_arr['GatheringPlaceId'];",
              "",
              "                    new_operation_arr['GatheringPlaceId'] = Id(GAnswerData);",
              "                    UpdateSidePowers();",
              "                }",
              "                else new_operation_arr['GatheringPlaceId'] = Id(GAnswerData);",
              "            }",
              "        }",
              "        else //В качестве места сбора была выбрана текущая ВБ",
              "        {",
              "            if(new_operation_arr['GatheringPlaceId'] > -1) //Если военная база не была выбрана ранее",
              "            {",
              "                i = CalcHireWarriorCost(cur_ruin, 3);",
              "                new_operation_arr['OperationCost'] = new_operation_arr['OperationCost'] + i;",
              "",
              "                new_operation_arr['GatheringPlaceId'] = -i;",
              "                UpdateSidePowers();",
              "            }",
              "        }",
              "    }",
              "",
              "    check = 0; //Снимаем блокировку",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  110,
          "#":  111,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//В эту группу попадают всякие случайные мудаки (пираты), рандомно нападающие на атакующих военных",
              "//Data0 - таймер до автоматического вывода данного корабля из группы",
              "if(GetData(0))",
              "{",
              "    if(GetData(0) <= CurTurn()) ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  90,
          "#":  115,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + Format(CT(dialog_path + '.WBRequestOperationNo'),",
              "                              '<PlayerRank'+'>', player_str_rank,",
              "                              '');",
              "tstr2 = '</color>' + CT(dialog_path + '.PlayerRequestOperationNo');",
              "operation_lvl = -1;",
              "//SFT('111111111111111111111111111111111');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  125,
          "#":  117,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = CurShip;",
              "SetData(-2, 0, cur_ship);",
              "",
              "player_rank = ShipRank(Player());",
              "if(player_rank >= 7) player_str_rank = lowercase(CT('Rank.Admiral.Name')); //Адмирал",
              "else if(player_rank == 6) player_str_rank = lowercase(CT('Rank.Commander.Name')); //Командор",
              "else if(player_rank == 5) player_str_rank = lowercase(CT('Rank.Ace.Name')); //Ас (Пилот)",
              "else if(player_rank == 4) player_str_rank = lowercase(CT('Rank.Leader.Name')); //Истребитель",
              "else /*if(player_rank == 3)*/ player_str_rank = lowercase(CT('Rank.Wingman.Name')); //Капитан",
              "",
              "if(ShipType(cur_ship) != 'Dreadnought') tstr1 = CT('Script.Mod_ShuWarriors.BattleshipDeclension');",
              "else tstr1 = CT('Script.Mod_ShuWarriors.DreadnoughtDeclension');",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.FlagshipAskDirectControl'),",
              "                               '<PlayerRank'+'>', player_str_rank,",
              "                               '<Flagship'+'>', '<color=0,50,200>' + Name(cur_ship) + '</color>',",
              "                               '<FlagshipShort'+'>', '<color=0,50,200>' + ShipName(cur_ship) + '</color>',",
              "                               '<FlagshipDeclension'+'>', '<color=0,50,200>' + tstr1 + ' ' + ShipName(cur_ship) + '</color>',",
              "                               '');",
              "tstr2 = '</color>' + CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.PlayerDirectControlYes');",
              "tstr3 = '</color>' + CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.PlayerDirectControlNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  122,
          "#":  123,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + Format(CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.FlagshipAskDirectControlYes'),",
              "                               '<PlayerRank'+'>', player_str_rank,",
              "                               '<Flagship'+'>', '<color=0,50,200>' + Name(cur_ship) + '</color>',",
              "                               '<FlagshipShort'+'>', '<color=0,50,200>' + ShipName(cur_ship) + '</color>',",
              "                               '');",
              "tstr2 = '</color>' + CT('Talk.Exit');",
              "",
              "OrderLanding(Player(), cur_ship);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  124,
          "#":  126,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = GetTalkShip();",
              "SetData(-2, 0, cur_ship); //На всякий случай",
              "",
              "player_rank = ShipRank(Player());",
              "if(player_rank >= 7) player_str_rank = lowercase(CT('Rank.Admiral.Name')); //Адмирал",
              "else if(player_rank == 6) player_str_rank = lowercase(CT('Rank.Commander.Name')); //Командор",
              "else if(player_rank == 5) player_str_rank = lowercase(CT('Rank.Ace.Name')); //Ас (Пилот)",
              "else if(player_rank == 4) player_str_rank = lowercase(CT('Rank.Leader.Name')); //Истребитель",
              "else /*if(player_rank == 3)*/ player_str_rank = lowercase(CT('Rank.Wingman.Name')); //Капитан",
              "",
              "if(HullDamage(cur_ship) < 85)",
              "{",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.FlagshipDirectControlYes'),",
              "                                   '<PlayerRank'+'>', player_str_rank,",
              "                                   '<Flagship'+'>', '<color=0,50,200>' + Name(cur_ship) + '</color>',",
              "                                   '<FlagshipShort'+'>', '<color=0,50,200>' + ShipName(cur_ship) + '</color>',",
              "                                   '');",
              "    tstr2 = '</color>' + CT('Talk.Exit');",
              "",
              "    OrderLanding(Player(), cur_ship);",
              "    OrderLock(cur_ship, 1);",
              "    OrderFollowShip(cur_ship, Player(), 0);",
              "    SetData(0, 1, cur_ship); //На всякий случай обнуляем приказ атаки конкретной цели",
              "    ShipFreeFlight(cur_ship, 1);",
              "}",
              "else //Флагман откажет игроку в прямом управлении, поскольку имеет критические повреждения",
              "{",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.FlagshipDirectControlNo'),",
              "                                   '<PlayerRank'+'>', player_str_rank,",
              "                                   '<Flagship'+'>', '<color=0,50,200>' + Name(cur_ship) + '</color>',",
              "                                   '<FlagshipShort'+'>', '<color=0,50,200>' + ShipName(cur_ship) + '</color>',",
              "                                   '');",
              "    tstr2 = '</color>' + CT('Talk.Exit');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  130,
          "#":  131,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Игрока выгоняют с флагмана за плохое поведение или потому, что бой в системе подошёл к концу",
              "dword flagship = cur_ship;",
              "dword star = ShipStar(Player());",
              "",
              "player_rank = ShipRank(Player());",
              "if(player_rank >= 7) player_str_rank = lowercase(CT('Rank.Admiral.Name')); //Адмирал",
              "else if(player_rank == 6) player_str_rank = lowercase(CT('Rank.Commander.Name')); //Командор",
              "else if(player_rank == 5) player_str_rank = lowercase(CT('Rank.Ace.Name')); //Ас (Пилот)",
              "else if(player_rank == 4) player_str_rank = lowercase(CT('Rank.Leader.Name')); //Истребитель",
              "else /*if(player_rank == 3)*/ player_str_rank = lowercase(CT('Rank.Wingman.Name')); //Капитан",
              "",
              "if(RelationToShip(flagship, Player()) > 9) //Игрока выгоняют, потому что подошло время",
              "{",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.FlagshipPlayerFliesOut'),",
              "                                   '<PlayerRank'+'>', player_str_rank,",
              "                                   '<Flagship'+'>', '<color=0,50,200>' + Name(flagship) + '</color>',",
              "                                   '<FlagshipShort'+'>', '<color=0,50,200>' + ShipName(flagship) + '</color>',",
              "                                   '<Star'+'>', '<color=0,50,200>' + Name(star) + '</color>',",
              "                                   '');",
              "    tstr2 = '</color>' + CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.PlayerFliesOut');",
              "",
              "    //Чинится, по сути, корабль игрока, а не флагман",
              "    HullHP(flagship, 'To100');",
              "    if(ShipFuelLow(flagship)) ShipRefuel(flagship);",
              "    for(i = ShipItems(flagship) - 1; i >= 1; i = i - 1)",
              "    {",
              "        dword cur_item = ShipItems(flagship, 1);",
              "        //Чинят только стандартную оборудку",
              "        if(ItemType(cur_item) >= t_Weapon13 && ItemType(cur_item) <= t_Weapon15) continue;",
              "        else if(ItemType(cur_item) == t_CustomWeapon)",
              "        {",
              "            if(GetCustomWeaponData(CustomWeaponType(cur_item), 'Availability') == 'NotSoldAndNodeRepair') continue;",
              "        }",
              "",
              "        ItemDurability(cur_item, max(ItemDurability(cur_item), RndObject(75, 85, flagship)));",
              "    }",
              "",
              "    check = 1;",
              "}",
              "else //Игрока выгоняют за плохое поведение",
              "{",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.FlagshipPlayerKickedOut'),",
              "                                   '<PlayerRank'+'>', player_str_rank,",
              "                                   '<Flagship'+'>', '<color=0,50,200>' + Name(flagship) + '</color>',",
              "                                   '<FlagshipShort'+'>', '<color=0,50,200>' + ShipName(flagship) + '</color>',",
              "                                   '<Star'+'>', '<color=0,50,200>' + Name(star) + '</color>',",
              "                                   '');",
              "",
              "    if(Rnd(1, 100, GetObjectGenerationSeed(GalaxyPtr()) + sqr(CurTurn())) <= 33) //Игроку удалость бежать",
              "    {",
              "        tstr2 = '</color>' + CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.PlayerKickedOutRun');",
              "        check = 2;",
              "    }",
              "    else //Игрока застрелили",
              "    {",
              "        tstr2 = '</color>' + CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.PlayerKickedOutDead');",
              "        check = 0;",
              "    }",
              "}",
              "",
              "if(check)",
              "{",
              "    TransferShip(flagship, star);",
              "    ShipSetCoords(flagship, CoordX(Player()), CoordY(Player()));",
              "    ShipAngle(flagship, ShipAngle(Player()));",
              "    OrderLock(flagship, 0);",
              "    int oper_num = GetData(3, flagship);",
              "    for(int i = ArrayDim(GlobalWBOperationsArray[oper_num, 'AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "    {",
              "        if(GlobalWBOperationsArray[oper_num, 'AlliesForcesId', i] == Id(flagship))",
              "        {",
              "            ArrayDelete(GlobalWBOperationsArray[oper_num, 'AlliesForcesId'], i);",
              "            break;",
              "        }",
              "    }",
              "    ShipOut(flagship);",
              "    ShipFreeFlight(flagship);",
              "    ShipType(flagship, Format(ShipType(flagship), 'Flagship', '', ''));",
              "",
              "    i = ShipCustomShipInfoData(Player(), 'ShuWarriors_FlagshipDirectControl', 2);",
              "    ShipSpecialBonuses(Player(), bonSkill1, ShipSpecialBonuses(Player(), bonSkill1) + i);",
              "    ShipSpecialBonuses(Player(), bonSkill2, ShipSpecialBonuses(Player(), bonSkill2) + i);",
              "    CapitalShipStats(Player(), 0);",
              "    TransformShipsIntoEachOther(Player(), flagship);",
              "    if(!findsubstr(ShipType(flagship), 'Warrior')) ShipType(flagship, '');",
              "    else ShipType(flagship, 'Dreadnought');",
              "    ShipDeleteCustomShipInfo(Player(), 'ShuWarriors_FlagshipDirectControl');",
              "",
              "    //На случай, если был подключён ExpScienceRanks и игрок садился на флагман на \"Клеще\"",
              "    if(!findsubstr(BonusNumInCfg(HullSpecial(Player())), 'ExpScienceRanks_Tick')) InterfaceState('StarMap', 'TickHullModeSwitcher', 1);",
              "",
              "    for(i = StarPlanets(star) - 1; i >= 0; i = i - 1) NoLanding(StarPlanets(star, i), 0);",
              "    for(i = StarRuins(star) - 1; i >= 0; i = i - 1) NoLanding(StarRuins(star, i), 0);",
              "    NoJump(0);",
              "",
              "    OrderNone(Player());",
              "    ShipOrder(Player(), 5);",
              "    ShipOrder(Player(), 'X', CoordX(Player()));",
              "    ShipOrder(Player(), 'Y', CoordX(Player()));",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  136,
          "#":  137,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipCustomShipInfoData(Player(), 'ShuWarriors_FlagshipDirectControl', 1, -1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  140,
          "#":  141,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Игрок выбрал ответ на мостике для покидания флагмана",
              "player_rank = ShipRank(Player());",
              "if(player_rank >= 7) player_str_rank = lowercase(CT('Rank.Admiral.Name')); //Адмирал",
              "else if(player_rank == 6) player_str_rank = lowercase(CT('Rank.Commander.Name')); //Командор",
              "else if(player_rank == 5) player_str_rank = lowercase(CT('Rank.Ace.Name')); //Ас (Пилот)",
              "else if(player_rank == 4) player_str_rank = lowercase(CT('Rank.Leader.Name')); //Истребитель",
              "else /*if(player_rank == 3)*/ player_str_rank = lowercase(CT('Rank.Wingman.Name')); //Капитан",
              "",
              "check = MessageBoxYesNo(Format(CT('Script.Mod_ShuWarriors.OperationFlagshipDialog.FlagshipAbandonConfirm'), '<PlayerRank'+'>', player_str_rank, ''));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  142,
          "#":  144,
          "Code.Type":  "Turn",
          "Code":          
          [
              "PlayerBridge(3);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  145,
          "#":  146,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword star = ShipStar(Player());",
              "dword flagship = IdToShip(ShipCustomShipInfoData(Player(), 'ShuWarriors_FlagshipDirectControl', 1));",
              "TransferShip(flagship, star);",
              "ShipSetCoords(flagship, CoordX(Player()), CoordY(Player()));",
              "ShipAngle(flagship, ShipAngle(Player()));",
              "OrderLock(flagship, 0);",
              "SetData(-2, 0, flagship);",
              "ShipFreeFlight(flagship);",
              "",
              "i = ShipCustomShipInfoData(Player(), 'ShuWarriors_FlagshipDirectControl', 2);",
              "ShipSpecialBonuses(Player(), bonSkill1, ShipSpecialBonuses(Player(), bonSkill1) + i);",
              "ShipSpecialBonuses(Player(), bonSkill2, ShipSpecialBonuses(Player(), bonSkill2) + i);",
              "CapitalShipStats(Player(), 0);",
              "TransformShipsIntoEachOther(Player(), flagship);",
              "if(!findsubstr(ShipType(flagship), 'Warrior')) ShipType(flagship, '');",
              "else ShipType(flagship, 'Dreadnought');",
              "ShipDeleteCustomShipInfo(Player(), 'ShuWarriors_FlagshipDirectControl');",
              "",
              "//На случай, если был подключён ExpScienceRanks и игрок садился на флагман на \"Клеще\"",
              "if(!findsubstr(BonusNumInCfg(HullSpecial(Player())), 'ExpScienceRanks_Tick')) InterfaceState('StarMap', 'TickHullModeSwitcher', 1);",
              "",
              "for(int i = StarPlanets(star) - 1; i >= 0; i = i - 1) NoLanding(StarPlanets(star, i), 0);",
              "for(i = StarRuins(star) - 1; i >= 0; i = i - 1) NoLanding(StarRuins(star, i), 0);",
              "NoJump(0);",
              "",
              "Sound('Sound.ForsageOn');",
              "TransferShip(Player(), star);",
              "OrderNone(Player());",
              "ShipOrder(Player(), 5);",
              "ShipOrder(Player(), 'X', CoordX(Player()));",
              "ShipOrder(Player(), 'Y', CoordX(Player()));",
              "FormChange('StarMap');",
              "ForceNextDay();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  133,
          "#":  148,
          "Code.Type":  "Turn",
          "Code":          
          [
              "FormChange('StarMap');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  149,
          "#":  150,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = GetTalkShip();",
              "",
              "player_rank = ShipRank(Player());",
              "if(player_rank >= 7) player_str_rank = lowercase(CT('Rank.Admiral.Name')); //Адмирал",
              "else if(player_rank == 6) player_str_rank = lowercase(CT('Rank.Commander.Name')); //Командор",
              "else if(player_rank == 5) player_str_rank = lowercase(CT('Rank.Ace.Name')); //Ас (Пилот)",
              "else if(player_rank == 4) player_str_rank = lowercase(CT('Rank.Leader.Name')); //Истребитель",
              "else /*if(player_rank == 3)*/ player_str_rank = lowercase(CT('Rank.Wingman.Name')); //Капитан",
              "",
              "if(!GAnswerData) //Указание новой цели",
              "{",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ShuWarriors.OperationWarriorDialog.WarriorWhatTarget'),",
              "                               '<PlayerRank'+'>', player_str_rank,",
              "                               '');",
              "}",
              "else //if(GAnswerData == 1) //Отмена установленной ранее цели",
              "{",
              "    target_Id = GetData(1, cur_ship);",
              "    check = 0;",
              "    for(i = ArrayDim(GlobalWBOperationsArray[operation_num, 'AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "    {",
              "        tdwd1 = IdToShip(GlobalWBOperationsArray[operation_num, 'AlliesForcesId', i]);",
              "        if(target_Id == GetData(1, tdwd1)) //Если ещё хотя бы один военный из группы имеет приказ атаковать ту же цель",
              "        {",
              "            check = 1;",
              "            break;",
              "        }",
              "    }",
              "",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ShuWarriors.OperationWarriorDialog.WarriorCancelConfirm'),",
              "                               '<PlayerRank'+'>', player_str_rank,",
              "                               '');",
              "    if(check) tstr1 = tstr1 + Format('<br>') + CT('Script.Mod_ShuWarriors.OperationWarriorDialog.WarriorCancelConfirmAll');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  151,
          "#":  152,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(!GAnswerData) //Указание новой цели",
              "{",
              "    j = ShipNearbyShips(cur_ship, -1, 0, 1+2+8+128+4096, '', '');",
              "    for(i = 1; i < j; i = i + 1)",
              "    {",
              "        tdwd1 = ShipNearbyShips(cur_ship, i, 1, 1+2+8+128+4096, '', '');",
              "        if(ShipStanding(tdwd1) && ShipStanding(tdwd1) <= 5) continue;",
              "        InjectAnswer('OperationWarriorSetTargetDialog', Format(CT('Script.Mod_ShuWarriors.OperationWarriorDialog.PlayerTarget'), '<Target'+'>', Name(tdwd1) + '<Object=' + tdwd1 + ',23,17,0>'), tdwd1);",
              "    }",
              "",
              "    DAnswer('restart~' + CT('Script.Mod_ShuWarriors.OperationWarriorDialog.PlayerBack')); //Отставить",
              "    DAnswer('fastexit~' + CT('Talk.Exit')); //Конец связи",
              "}",
              "else //if(GAnswerData == 1) //Отмена установленной ранее цели",
              "{",
              "    SetData(0, 1, cur_ship); //Отменяем цель",
              "    OrderLock(cur_ship, 0);",
              "    ShipFreeFlight(cur_ship);",
              "",
              "    if(!check) DAnswer('fastexit~' + CT('Talk.Exit')); //Конец связи",
              "    else",
              "    {",
              "        tdwd1 = target_Id;",
              "        InjectAnswer('', CT('Script.Mod_ShuWarriors.OperationWarriorDialog.PlayerCancelSendOthers'), 1, 'DialogAttach(1);'); //Передать приказ остальным",
              "        DAnswer('fastexit~' + CT('Script.Mod_ShuWarriors.OperationWarriorDialog.PlayerCancelPersonalOrder')); //Конец связи",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  153,
          "#":  154,
          "Code.Type":  "Turn",
          "Code":          
          [
              "target_Id = Id(GAnswerData);",
              "",
              "check = 0;",
              "for(i = ArrayDim(GlobalWBOperationsArray[operation_num, 'AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "{",
              "    tdwd1 = IdToShip(GlobalWBOperationsArray[operation_num, 'AlliesForcesId', i]);",
              "    if(target_Id != GetData(1, tdwd1)) //Если ещё хотя бы один военный из группы имеет приказ атаковать ту же цель",
              "    {",
              "        check = 1;",
              "        break;",
              "    }",
              "}",
              "",
              "if(GetData(1, cur_ship) != target_Id)",
              "{",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ShuWarriors.OperationWarriorDialog.WarriorTargetConfirm'),",
              "                                   '<PlayerRank'+'>', player_str_rank,",
              "                                   '<Target'+'>', '<color=0,50,200>' + Name(GAnswerData) + '</color>',",
              "                                   '');",
              "    if(check) tstr1 = tstr1 + Format('<br>') + CT('Script.Mod_ShuWarriors.OperationWarriorDialog.WarriorTargetConfirmAll');",
              "}",
              "else",
              "{",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ShuWarriors.OperationWarriorDialog.WarriorTargetConfirmAgain'),",
              "                                   '<PlayerRank'+'>', player_str_rank,",
              "                                   '<Target'+'>', '<color=0,50,200>' + Name(GAnswerData) + '</color>',",
              "                                   '');",
              "    if(check) tstr1 = tstr1 + Format('<br>') + CT('Script.Mod_ShuWarriors.OperationWarriorDialog.WarriorTargetConfirmAllAgain');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  155,
          "#":  156,
          "Code.Type":  "Turn",
          "Code":          
          [
              "SetData(target_Id, 1, cur_ship); //Задаём военному новую цель",
              "OrderLock(cur_ship, 1);",
              "OrderFollowShip(cur_ship, GAnswerData, 1);",
              "",
              "if(!check) DAnswer('fastexit~' + CT('Talk.Exit')); //Конец связи",
              "else",
              "{",
              "    tdwd1 = target_Id;",
              "    InjectAnswer('', CT('Script.Mod_ShuWarriors.OperationWarriorDialog.PlayerTargetSendOthers'), 0, 'DialogAttach(0);'); //Передать приказ остальным",
              "    DAnswer('fastexit~' + CT('Script.Mod_ShuWarriors.OperationWarriorDialog.PlayerTargetPersonalOrder')); //Конец связи",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  260,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  158,
          "Code.Type":  "Init",
          "Code":          
          [
              "function DialogAttach(int action = 0)",
              "{",
              "    target_Id = tdwd1;",
              "    if(!action) //Указание новой цели",
              "    {",
              "        cur_ship = IdToShip(tdwd1);",
              "        for(i = ArrayDim(GlobalWBOperationsArray[operation_num, 'AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "        {",
              "            tdwd1 = IdToShip(GlobalWBOperationsArray[operation_num, 'AlliesForcesId', i]);",
              "            if(target_Id != GetData(1, tdwd1)) //Если ещё хотя бы один военный из группы имеет приказ атаковать ту же цель",
              "            {",
              "                SetData(target_Id, 1, tdwd1);",
              "                OrderLock(tdwd1, 1);",
              "                OrderFollowShip(tdwd1, cur_ship, 1);",
              "            }",
              "        }",
              "    }",
              "    else //if(action == 1) //Отмена установленной ранее цели",
              "    {",
              "        for(i = ArrayDim(GlobalWBOperationsArray[operation_num, 'AlliesForcesId']) - 1; i >= 1; i = i - 1)",
              "        {",
              "            tdwd1 = IdToShip(GlobalWBOperationsArray[operation_num, 'AlliesForcesId', i]);",
              "            if(target_Id == GetData(1, tdwd1)) //Если ещё хотя бы один военный из группы имеет приказ атаковать ту же цель",
              "            {",
              "                SetData(0, 1, tdwd1);",
              "                OrderLock(tdwd1, 0);",
              "                ShipFreeFlight(tdwd1);",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  173,
          "Code.Type":  "Turn",
          "Code":          
          [
              "race = 4;",
              "cost1 = GalaxyMoney(3,race);",
              "cost2 = GalaxyMoney(3,race)*2;",
              "cost3 = GalaxyMoney(4,race);",
              "cost4 = GalaxyMoney(4,race)*2;",
              "cost5 = GalaxyMoney(4,race)*3;",
              "tstr1 = \"гаалец\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  174,
          "Code.Type":  "Turn",
          "Code":          
          [
              "race = 3;",
              "cost1 = GalaxyMoney(3,race);",
              "cost2 = GalaxyMoney(3,race)*2;",
              "cost3 = GalaxyMoney(4,race);",
              "cost4 = GalaxyMoney(4,race)*2;",
              "cost5 = GalaxyMoney(4,race)*3;",
              "tstr1 = \"фэянин\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  175,
          "Code.Type":  "Turn",
          "Code":          
          [
              "race = 2;",
              "cost1 = GalaxyMoney(3,race);",
              "cost2 = GalaxyMoney(3,race)*2;",
              "cost3 = GalaxyMoney(4,race);",
              "cost4 = GalaxyMoney(4,race)*2;",
              "cost5 = GalaxyMoney(4,race)*3;",
              "tstr1 = \"человек\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  176,
          "Code.Type":  "Turn",
          "Code":          
          [
              "race = 1;",
              "cost1 = GalaxyMoney(3,race);",
              "cost2 = GalaxyMoney(3,race)*2;",
              "cost3 = GalaxyMoney(4,race);",
              "cost4 = GalaxyMoney(4,race)*2;",
              "cost5 = GalaxyMoney(4,race)*3;",
              "tstr1 = \"пеленг\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  177,
          "Code.Type":  "Turn",
          "Code":          
          [
              "race = 0;",
              "cost1 = GalaxyMoney(3,race);",
              "cost2 = GalaxyMoney(3,race)*2;",
              "cost3 = GalaxyMoney(4,race);",
              "cost4 = GalaxyMoney(4,race)*2;",
              "cost5 = GalaxyMoney(4,race)*3;",
              "tstr1 = \"малок\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  185,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ArrayClear(tarr1);",
              "",
              "tint1 = 200 + GalaxyTechLevel() * 25; //1 ГТУ - 225   8 ГТУ - 400",
              "tint2 = 325 + GalaxyTechLevel() * 35; //1 ГТУ - 360   8 ГТУ - 605",
              "tint3 = 475 + GalaxyTechLevel() * 50; //1 ГТУ - 525   8 ГТУ - 875",
              "tint4 = 600 + GalaxyTechLevel() * 70; //1 ГТУ - 670   8 ГТУ - 1160",
              "tint5 = 800 + GalaxyTechLevel() * 95; //1 ГТУ - 895   8 ГТУ - 1560"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  850,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  191,
          "Code.Type":  "Turn",
          "Code":          
          [
              "size = tint5;",
              "cost = cost5;",
              "tstr2 = \"класса S\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  850,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  192,
          "Code.Type":  "Turn",
          "Code":          
          [
              "size = tint4;",
              "cost = cost4;",
              "tstr2 = \"класса L\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  850,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  193,
          "Code.Type":  "Turn",
          "Code":          
          [
              "size = tint3;",
              "cost = cost3;",
              "tstr2 = \"класса J\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  850,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  194,
          "Code.Type":  "Turn",
          "Code":          
          [
              "size = tint2;",
              "cost = cost2;",
              "tstr2 = \"класса N\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  850,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  195,
          "Code.Type":  "Turn",
          "Code":          
          [
              "size = tint1;",
              "cost = cost1;",
              "tstr2 = \"класса M\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  880,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  204,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint1 = PlanetRace(NearCivilPlanet(Player()));",
              "PlanetRace(NearCivilPlanet(Player()),race);",
              "",
              "//Чтобы не напрягать булки, создадим военного заранее",
              "cur_ship = BuyWarrior(NearCivilPlanet(Player()));",
              "WarriorId = Id(cur_ship);",
              "OrderLock(cur_ship,1);",
              "//Побалуемся с расстановкой навыков от расы",
              "if(race == 0) {",
              "    //Малок",
              "    ShipSkill(cur_ship,0,6);",
              "    ShipSkill(cur_ship,1,2);",
              "    ShipSkill(cur_ship,2,1);",
              "    ShipSkill(cur_ship,3,0);",
              "    ShipSkill(cur_ship,4,0);",
              "    ShipSkill(cur_ship,5,5);",
              "}",
              "else if(race == 1) {",
              "    //Пеленг",
              "    ShipSkill(cur_ship,0,2);",
              "    ShipSkill(cur_ship,1,5);",
              "    ShipSkill(cur_ship,2,2);",
              "    ShipSkill(cur_ship,3,6);",
              "    ShipSkill(cur_ship,4,3);",
              "    ShipSkill(cur_ship,5,1);",
              "}",
              "else if(race == 2) {",
              "    //Человек",
              "    ShipSkill(cur_ship,0,4);",
              "    ShipSkill(cur_ship,1,3);",
              "    ShipSkill(cur_ship,2,4);",
              "    ShipSkill(cur_ship,3,2);",
              "    ShipSkill(cur_ship,4,3);",
              "    ShipSkill(cur_ship,5,3);",
              "}",
              "else if(race == 3) {",
              "    //Фэянин",
              "    ShipSkill(cur_ship,0,4);",
              "    ShipSkill(cur_ship,1,4);",
              "    ShipSkill(cur_ship,2,6);",
              "    ShipSkill(cur_ship,3,0);",
              "    ShipSkill(cur_ship,4,1);",
              "    ShipSkill(cur_ship,5,0);",
              "}",
              "else {",
              "    //Гаалец",
              "    ShipSkill(cur_ship,0,1);",
              "    ShipSkill(cur_ship,1,5);",
              "    ShipSkill(cur_ship,2,4);",
              "    ShipSkill(cur_ship,3,0);",
              "    ShipSkill(cur_ship,4,6);",
              "    ShipSkill(cur_ship,5,6);",
              "}",
              "//На всякий случай обеспечим ему полный набор слотов",
              "while(ShipSlots(cur_ship,1) < 5) ShipSpecialBonuses(cur_ship,bonSlotWeapon,ShipSpecialBonuses(cur_ship,bonSlotWeapon)+1);",
              "while(ShipSlots(cur_ship,3) < 1) ShipSpecialBonuses(cur_ship,bonSlotRadar,ShipSpecialBonuses(cur_ship,bonSlotRadar)+1);",
              "while(ShipSlots(cur_ship,4) < 1) ShipSpecialBonuses(cur_ship,bonSlotScaner,ShipSpecialBonuses(cur_ship,bonSlotScaner)+1);",
              "while(ShipSlots(cur_ship,5) < 1) ShipSpecialBonuses(cur_ship,bonSlotDroid,ShipSpecialBonuses(cur_ship,bonSlotDroid)+1);",
              "while(ShipSlots(cur_ship,6) < 1) ShipSpecialBonuses(cur_ship,bonSlotHook,ShipSpecialBonuses(cur_ship,bonSlotHook)+1);",
              "while(ShipSlots(cur_ship,7) < 1) ShipSpecialBonuses(cur_ship,bonSlotDef,ShipSpecialBonuses(cur_ship,bonSlotDef)+1);",
              "//Очистим ему шмот, а то мало ли",
              "if(ShipEqInSlot(cur_ship,t_Radar)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_Radar);",
              "    GetItemFromShip(cur_ship,tdwd);",
              "    FreeItem(tdwd);",
              "}",
              "if(ShipEqInSlot(cur_ship,t_Engine)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_Engine);",
              "    GetItemFromShip(cur_ship,tdwd);",
              "    FreeItem(tdwd);",
              "}",
              "if(ShipEqInSlot(cur_ship,t_FuelTanks)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_FuelTanks);",
              "    GetItemFromShip(cur_ship,tdwd);",
              "    FreeItem(tdwd);",
              "}",
              "if(ShipEqInSlot(cur_ship,t_Scaner)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_Scaner);",
              "    GetItemFromShip(cur_ship,tdwd);",
              "    FreeItem(tdwd);",
              "}",
              "if(ShipEqInSlot(cur_ship,t_DefGenerator)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_DefGenerator);",
              "    GetItemFromShip(cur_ship,tdwd);",
              "    FreeItem(tdwd);",
              "}",
              "if(ShipEqInSlot(cur_ship,t_RepairRobot)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_RepairRobot);",
              "    GetItemFromShip(cur_ship,tdwd);",
              "    FreeItem(tdwd);",
              "}",
              "if(ShipEqInSlot(cur_ship,t_CargoHook)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_CargoHook);",
              "    GetItemFromShip(cur_ship,tdwd);",
              "    FreeItem(tdwd);",
              "}",
              "for(i=0;ShipSlots(cur_ship,1)>i;i=i+1) {",
              "    if(ShipEqInSlot(cur_ship,t_Weapon1,i)) {",
              "        tdwd = ShipEqInSlot(cur_ship,t_Weapon1,i);",
              "        GetItemFromShip(cur_ship,tdwd);",
              "        FreeItem(tdwd);",
              "    }",
              "}",
              "//Сформируем диалог-шаблон, на основании которого мы потом внаглую будем собирать итоговый, показывающийся игроку",
              "tstr3 = \"Двигатель: engine\"+CT('FormInfo.br')+\"Топливный бак: tank\"+CT('FormInfo.br')+\"Радар: radar\"+CT('FormInfo.br')+\"Сканер: scaner\"+CT('FormInfo.br')+\"Генератор поля: def\"+CT('FormInfo.br')+\"Ремонтный дроид: droid\"+CT('FormInfo.br')+\"Захват: hook\"+CT('FormInfo.br')+\"Орудие 1: weap1\"+CT('FormInfo.br')+\"Орудие 2: weap2\"+CT('FormInfo.br')+\"Орудие 3: weap3\"+CT('FormInfo.br')+\"Орудие 4: weap4\"+CT('FormInfo.br')+\"Орудие 5: weap5\";",
              "tstr4 = tstr3;",
              "if(ShipEqInSlot(cur_ship,t_Radar)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_Radar);",
              "    Format(tstr4,'radar',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+\"млн км)\");",
              "}",
              "else Format(tstr4,'engine',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_Engine)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_Engine);",
              "    Format(tstr4,'engine',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+\"млн км)\");",
              "}",
              "else Format(tstr4,'tank',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_FuelTanks)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_FuelTanks);",
              "    Format(tstr4,'tank',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+\"ед. топлива)\");",
              "}",
              "else Format(tstr4,'scaner',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_Scaner)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_Scaner);",
              "    Format(tstr4,'scaner',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+'%)');",
              "}",
              "else Format(tstr4,'def',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_DefGenerator)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_DefGenerator);",
              "    Format(tstr4,'def',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+'%)');",
              "}",
              "else Format(tstr4,'droid',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_RepairRobot)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_RepairRobot);",
              "    Format(tstr4,'droid',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+\"ед. структуры/сутки)\");",
              "}",
              "else Format(tstr4,'hook',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_CargoHook)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_CargoHook);",
              "    Format(tstr4,'hook',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+\"т. на расстоянии\"+GetEquipmentStats(tdwd,1)+' '+\"млн км)\");",
              "}",
              "else Format(tstr4,'radar',\"color=220,20,20>отсутствует</color>\");",
              "for(i=0;ShipSlots(cur_ship,1)>i;i=i+1) {",
              "    if(ShipEqInSlot(cur_ship,t_Weapon1,i)) {",
              "        tdwd = ShipEqInSlot(cur_ship,t_Weapon1,i);",
              "        Format(tstr4,'weap'+i,Name(tdwd)+' ('+GetEquipmentStats(tdwd,1)+' - '+GetEquipmentStats(tdwd,0)+' '+\"ед. ущерба на расстоянии\"+GetEquipmentStats(tdwd,2)+' '+\"млн км)\");",
              "    }",
              "    else Format(tstr4,'weap'+i,\"color=220,20,20>отсутствует</color>\");",
              "}",
              "",
              "//Возвращаем планете её расу",
              "PlanetRace(NearCivilPlanet(Player()),tint1);",
              "costDisc = cost * (100 - (ShipStatus(Player(),2)/4)) / 100;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  940,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  205,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('EQ',\"Меня интересует генератор поля\",t_DefGenerator);",
              "InjectAnswer('EQ',\"Меня интересует ремонтный дроид\",t_RepairRobot);",
              "InjectAnswer('EQ',\"Меня интересует двигатель\",t_Engine);",
              "InjectAnswer('EQ',\"Меня интересует топливный бак\",t_FuelTanks);",
              "InjectAnswer('EQ',\"Меня интересует сканер военного\",t_Scaner);",
              "InjectAnswer('EQ',\"Меня интересует радар военного\",t_Radar);",
              "InjectAnswer('EQ',\"Меня интересует захват военного\",t_CargoHook);",
              "",
              "//Тут набор на оружие",
              "InjectAnswer('Weapon',\"Меня интересует орудие в первом (1) слоте\",1);",
              "InjectAnswer('Weapon',\"Меня интересует орудие в втором (2) слоте\",2);",
              "InjectAnswer('Weapon',\"Меня интересует орудие в третьем (3) слоте\",3);",
              "InjectAnswer('Weapon',\"Меня интересует орудие в четвёртом (4) слоте\",4);",
              "InjectAnswer('Weapon',\"Меня интересует орудие в пятом (5) слоте\",5);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  910,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  207,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ArrayDim(tarr1) > 1) {",
              "    for(i=1;i<(ArrayDim(tarr1)-1);i=i+1) {",
              "        AddItemToShip(Player(),GetItemFromShip(cur_ship,tarr1[i]));",
              "    }",
              "}",
              "",
              "//Уничтожаем невезучего военного",
              "OrderLock(cur_ship);",
              "ShipDestroy(cur_ship);",
              "WarriorId = 0;",
              "",
              "ArrayClear(tarr1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  970,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  212,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr5 = Name(NearCivilPlanet(Player()));",
              "WarriorId = 0;",
              "OrderLock(cur_ship,0);",
              "ArrayClear(tarr1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1170,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  216,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('Return',\"Назад к выбору функций\",1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  950,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  218,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr3 = \"Двигатель: engine\"+CT('FormInfo.br')+\"Топливный бак: tank\"+CT('FormInfo.br')+\"Радар: radar\"+CT('FormInfo.br')+\"Сканер: scaner\"+CT('FormInfo.br')+\"Генератор поля: def\"+CT('FormInfo.br')+\"Ремонтный дроид: droid\"+CT('FormInfo.br')+\"Захват: hook\"+CT('FormInfo.br')+\"Орудие 1: weap1\"+CT('FormInfo.br')+\"Орудие 2: weap2\"+CT('FormInfo.br')+\"Орудие 3: weap3\"+CT('FormInfo.br')+\"Орудие 4: weap4\"+CT('FormInfo.br')+\"Орудие 5: weap5\";",
              "tstr4 = tstr3;",
              "if(ShipEqInSlot(cur_ship,t_Radar)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_Radar);",
              "    Format(tstr4,'radar',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+\"млн км)\");",
              "}",
              "else Format(tstr4,'engine',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_Engine)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_Engine);",
              "    Format(tstr4,'engine',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+\"млн км)\");",
              "}",
              "else Format(tstr4,'tank',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_FuelTanks)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_FuelTanks);",
              "    Format(tstr4,'tank',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+\"ед. топлива)\");",
              "}",
              "else Format(tstr4,'scaner',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_Scaner)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_Scaner);",
              "    Format(tstr4,'scaner',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+'%)');",
              "}",
              "else Format(tstr4,'def',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_DefGenerator)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_DefGenerator);",
              "    Format(tstr4,'def',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+'%)');",
              "}",
              "else Format(tstr4,'droid',\"color=220,20,20>отсутствует</color>\");",
              "if(ShipEqInSlot(cur_ship,t_RepairRobot)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_RepairRobot);",
              "    Format(tstr4,'droid',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+\"ед. структуры/сутки)\");",
              "}",
              "else Format(tstr4,'hook',\"color=220,20,20>отсутствует</color>\");",
              "",
              "if(ShipEqInSlot(cur_ship,t_CargoHook)) {",
              "    tdwd = ShipEqInSlot(cur_ship,t_CargoHook);",
              "    Format(tstr4,'hook',Name(tdwd)+' ('+GetEquipmentStats(tdwd,0)+' '+\"т. на расстоянии\"+GetEquipmentStats(tdwd,1)+' '+\"млн км)\");",
              "}",
              "else Format(tstr4,'radar',\"color=220,20,20>отсутствует</color>\");",
              "",
              "for(i=0;ShipSlots(cur_ship,1)>i;i=i+1) {",
              "    if(ShipEqInSlot(cur_ship,t_Weapon1,i)) {",
              "        tdwd = ShipEqInSlot(cur_ship,t_Weapon1,i);",
              "        Format(tstr4,'weap'+i,Name(tdwd)+' ('+GetEquipmentStats(tdwd,1)+' - '+GetEquipmentStats(tdwd,0)+' '+\"ед. ущерба на расстоянии\"+GetEquipmentStats(tdwd,2)+' '+\"млн км)\");",
              "    }",
              "    else Format(tstr4,'weap'+i,\"color=220,20,20>отсутствует</color>\");",
              "}",
              "",
              "costDisc = cost * (100 - (ShipStatus(Player(),2)/4)) / 100;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  221,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint1 = GAnswerData;",
              "if(ShipEqInSlot(cur_ship,t_Weapon1,tint1)) tstr9 = \"слот занимает\"+' '+Name(ShipEqInSlot(cur_ship,t_Weapon1,tint1));",
              "else tstr9 = \"оружие в слоте отсутствует\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  225,
          "Code.Type":  "Turn",
          "Code":          
          [
              "for(i=0;ShipItems(Player())>i;i=i+1) {",
              "    if(ItemType(ShipItems(Player(),i)) < t_Weapon1) continue;",
              "    if(ItemType(ShipItems(Player(),i)) > t_CustomWeapon) continue;",
              "    if(ItemIsInUse(ShipItems(Player(),i),Player())) continue;",
              "    InjectAnswer('InstallW',\"Установить орудие\"+' '+Name(ShipItems(Player(),i)),i);",
              "}",
              "",
              "if(ShipEqInSlot(cur_ship,t_Weapon1,tint1)) InjectAnswer('InstallW',\"Снять орудие\",-1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1150,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  228,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GAnswerData == -1) {",
              "    ArrayDelete(tarr1,ArrayFind(tarr1,ShipEqInSlot(cur_ship,t_Weapon1,tint1)));",
              "    AddItemToShip(Player(),GetItemFromShip(cur_ship,ShipEqInSlot(cur_ship,t_Weapon1,tint1)));",
              "}",
              "else {",
              "    tint2 = GAnswerData;",
              "    if(ShipEqInSlot(cur_ship,t_Weapon1,tint1)) {",
              "        ArrayDelete(tarr1,ArrayFind(tarr1,ShipEqInSlot(cur_ship,t_Weapon1,tint1)));",
              "        AddItemToShip(Player(),GetItemFromShip(cur_ship,ShipEqInSlot(cur_ship,t_Weapon1,tint1)));",
              "    }",
              "",
              "    tdwd1 = ShipItems(Player(),tint2);",
              "    AddItemToShip(cur_ship,GetItemFromShip(Player(),tdwd1));",
              "    ArrayAdd(tarr1,tdwd1);",
              "    ItemIsInUse(tdwd1,cur_ship,1);",
              "}",
              "",
              "if(ShipEqInSlot(cur_ship,t_Weapon1,tint1)) tstr9 = \"слот занимает\"+' '+Name(ShipEqInSlot(cur_ship,t_Weapon1,tint1));",
              "else tstr9 = \"оружие в слоте отсутствует\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1250,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  232,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint1 = GAnswerData;",
              "if(ShipEqInSlot(cur_ship,tint1)) tstr9 = \"слот занимает\"+' '+Name(ShipEqInSlot(cur_ship,tint1));",
              "else tstr9 = \"оборудование в слоте отсутствует\";",
              "",
              "if(GAnswerData == t_DefGenerator || GAnswerData == t_FuelTanks || GAnswerData == t_Engine || GAnswerData == t_RepairRobot) tstr8 = \"<color=220,20,20>Это оборудование критически важно!</color>\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1250,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  237,
          "Code.Type":  "Turn",
          "Code":          
          [
              "for(i=0;ShipItems(Player())>i;i=i+1) {",
              "    if(ItemType(ShipItems(Player(),i)) != tint1) continue;",
              "    if(ItemIsInUse(ShipItems(Player(),i),Player())) continue;",
              "    InjectAnswer('InstallEq',\"Установить\"+' '+Name(ShipItems(Player(),i)),i);",
              "}",
              "",
              "if(ShipEqInSlot(cur_ship,tint1)) InjectAnswer('InstallEq',\"Снять оборудование\",-1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1300,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  239,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GAnswerData == -1) {",
              "    ArrayDelete(tarr1,ArrayFind(tarr1,ShipEqInSlot(cur_ship,tint1)));",
              "    AddItemToShip(Player(),GetItemFromShip(cur_ship,ShipEqInSlot(cur_ship,tint1)));",
              "",
              "    if(tint1 == t_DefGenerator || tint1 == t_FuelTanks || tint1 == t_Engine || tint1 == t_RepairRobot) ready = ready - 1;",
              "}",
              "else {",
              "    tint2 = GAnswerData;",
              "    if(ShipEqInSlot(cur_ship,tint1)) {",
              "        ArrayDelete(tarr1,ArrayFind(tarr1,ShipEqInSlot(cur_ship,tint1)));",
              "        AddItemToShip(Player(),GetItemFromShip(cur_ship,ShipEqInSlot(cur_ship,tint1)));",
              "        if(tint1 == t_DefGenerator || tint1 == t_FuelTanks || tint1 == t_Engine || tint1 == t_RepairRobot) ready = ready - 1;",
              "    }",
              "",
              "    tdwd1 = ShipItems(Player(),tint2);",
              "    AddItemToShip(cur_ship,GetItemFromShip(Player(),tdwd1));",
              "    ArrayAdd(tarr1,tdwd1);",
              "    ItemIsInUse(tdwd1,cur_ship,1);",
              "    if(tint1 == t_DefGenerator || tint1 == t_FuelTanks || tint1 == t_Engine || tint1 == t_RepairRobot) ready = ready + 1;",
              "}",
              "",
              "if(ShipEqInSlot(cur_ship,tint1)) tstr9 = \"слот занимает\"+' '+Name(ShipEqInSlot(cur_ship,tint1));",
              "else tstr9 = \"оборудование в слоте отсутствует\";",
              "",
              "if(GAnswerData == t_DefGenerator || GAnswerData == t_FuelTanks || GAnswerData == t_Engine || GAnswerData == t_RepairRobot) tstr8 = \"<color=220,20,20>Это оборудование критически важно!</color>\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -70,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  252,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Если система атакована, то отпускаем резервиста",
              "if(StarBattle(ShipStar(CurShip))) {",
              "    ShipOut(CurShip);",
              "}",
              "//На всякий случай отпустим тех, кого игра \"захапала\" в свою собственную атаку",
              "if(ShipInGameEvent(CurShip)) {",
              "    ShipOut(CurShip);",
              "}",
              "//Чтобы не париться в тёрнкоде",
              "if(!mass_attack_stage) {",
              "    ShipOut(CurShip);",
              "}",
              "else if(mass_attack_stage == 1) {",
              "    ShipJoin(Attackers,CurShip);",
              "}",
              "else if(mass_attack_stage == 2) {",
              "    ShipJoin(Attackers,CurShip);",
              "}",
              "else if(mass_attack_stage == 3) {",
              "    if(ShipStar(CurShip) != GalaxyStar(mass_attack_star-1)) {",
              "        OrderJump(CurShip,GalaxyStar(mass_attack_star-1));",
              "    }",
              "}",
              "else if(mass_attack_stage == 4) {",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  50,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  258,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//0 - система для действия",
              "if(mass_attack_stage == 3) {",
              "    tdwd = GalaxyStar(GetData()-1);",
              "",
              "    if(ShipStar(CurShip) != tdwd) {",
              "        OrderJump(CurShip,tdwd);",
              "    }",
              "}",
              "else {",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  266,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Вытаскиваем звание игрока",
              "player_rank = ShipRank(Player());",
              "if(player_rank >= 7) player_str_rank = 'Admiral';",
              "else if(player_rank == 6) player_str_rank = 'Commander';",
              "else if(player_rank == 5) player_str_rank = 'Ace';",
              "else if(player_rank == 4) player_str_rank = 'Leader';",
              "else if(player_rank == 3) player_str_rank = 'Wingman';",
              "else if(player_rank == 2) player_str_rank = 'Pilot';",
              "else if(player_rank == 1) player_str_rank = 'Cadet';",
              "else player_str_rank = 'Rookie';",
              "player_str_rank = CT('Rank.'+player_str_rank+'.Name');",
              "",
              "//Считаем, сколько игроку осталось до следующего звания",
              "k = ShipNextRankPoints(Player()) - ShipRankPoints(Player());",
              "",
              "//Собираем строку с учётом информации о неписях из модов",
              "tstr1 = '</color>' + Format(CT('WB.Mod_NextRank.WBAnswer1'),'NextRank',player_str_rank,'NeedPoints',k);",
              "if(CurrentMods('ShusRangers\\ShuDomiks')) {",
              "    tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswerPolDomiks1');",
              "}",
              "tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswer2');",
              "if(CurrentMods('ShusRangers\\ShuDomiks')) {",
              "    tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswerPolDomiks2');",
              "}",
              "tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswer3');",
              "if(CurrentMods('ShusRangers\\ShuDomiks')) {",
              "    tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswerPolDomiks3');",
              "}",
              "tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswer4');",
              "if(CurrentMods('Evolution\\EvoDreadnought')) {",
              "    tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswerEvoDreadnought');",
              "}",
              "if(CurrentMods('ShusRangers\\ShuPirates')) {",
              "    tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswerPolPirates');",
              "}",
              "if(CurrentMods('Huk\\\\\\'sShit\\Mod_TryFixBalance')) {",
              "    tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswermod_tryfixbalance');",
              "}",
              "if(CurrentMods('Expansion\\ExpTraitors')) {",
              "    tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswerExpTraitors');",
              "}",
              "else {",
              "    tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswerNonExpTraitors');",
              "}",
              "tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswer5');",
              "if(CurrentMods('ShusRangers\\ShuKlissan')) {",
              "    tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswerPolKlissan');",
              "}",
              "tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswer6');",
              "if(CurrentMods('Reflection\\RefKillingPBFix')) {",
              "    tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswerRefKillingPBFix');",
              "}",
              "tstr1 = tstr1 + Format('<br>') + CT('WB.Mod_NextRank.WBAnswer7');",
              "",
              "tstr2 = CT('WB.Mod_NextRank.PlayerAnswer');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  269,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GetData() > 0) {",
              "    //Проверяем, не сел ли куда военный",
              "    if(!ShipInNormalSpace(CurShip)) {",
              "        if(GetShipPlanet(CurShip) || GetShipRuins(CurShip)) {",
              "            ShipMoney(CurShip,ShipMoney(CurShip)+GalaxyMoney(2)); //Зарплатка!",
              "            ShipRefuel(CurShip);",
              "            ShipRepairEq(CurShip); //На всякий случай в ручном режиме чинимся, заправляемся и обновляемся",
              "            ShipRefit(CurShip);",
              "            HullHP(CurShip,'To100');",
              "",
              "            OrderTakeOff(CurShip);",
              "            exit;",
              "        }",
              "    }",
              "",
              "",
              "    //Дипломат",
              "    def_ship = IdToShip(GetData());",
              "}",
              "else exit;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  272,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipOut(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  710,
          "Parent":  -1,
          "#":  275,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OrderFollowShip(CurShip,def_ship);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  230,
          "Pos.y":  710,
          "Parent":  -1,
          "#":  276,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipOrder(def_ship) == 3) OrderJump(CurShip,ShipOrderObj(def_ship));",
              "else if(ShipInNormalSpace(def_ship)) OrderJump(CurShip,ShipStar(def_ship));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  279,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OrderLanding(CurShip,ShipOrderObj(def_ship));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  710,
          "Parent":  -1,
          "#":  285,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OrderJump(CurShip,ShipOrderObj(def_ship));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -200,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  289,
          "Code.Type":  "Turn",
          "Code":          
          [
              ""          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  3,
          "#":  4,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -20,
          "Parent":  3,
          "#":  5,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  300,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  3,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  20,
          "Parent":  24,
          "#":  34,
          "Code.Type":  "Turn",
          "Code":          
          [
              "on_prepare"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  20,
          "Parent":  36,
          "#":  42,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  36,
          "#":  43,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -40,
          "Pos.y":  20,
          "Parent":  49,
          "#":  51,
          "Code.Type":  "Turn",
          "Code":          
          [
              "new_operation_arr['OrganizedByPlayer'] >= 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  49,
          "#":  52,
          "Code.Type":  "Turn",
          "Code":          
          [
              "new_operation_arr['AttackDate'] && ShipMoney(Player()) >= new_operation_arr['OperationCost']"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  49,
          "#":  53,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  49,
          "#":  54,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!new_operation_arr['AttackDate'] || ShipMoney(Player()) < new_operation_arr['OperationCost']"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  79,
          "#":  67,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  79,
          "#":  68,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  85,
          "#":  86,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  46,
          "#":  88,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -60,
          "Pos.y":  20,
          "Parent":  24,
          "#":  90,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!operation_lvl && !on_prepare"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  85,
          "#":  96,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  100,
          "Parent":  88,
          "#":  106,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  62,
          "#":  107,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  10,
          "#":  112,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  24,
          "#":  114,
          "Code.Type":  "Turn",
          "Code":          
          [
              "operation_lvl && !on_prepare"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -10,
          "Pos.y":  20,
          "Parent":  118,
          "#":  119,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  10,
          "Pos.y":  20,
          "Parent":  118,
          "#":  120,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  116,
          "#":  124,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAnswerData == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  20,
          "Parent":  116,
          "#":  125,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GAnswerData"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  116,
          "#":  130,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAnswerData == 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -10,
          "Pos.y":  20,
          "Parent":  132,
          "#":  134,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  10,
          "Pos.y":  20,
          "Parent":  132,
          "#":  135,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  50,
          "Pos.y":  20,
          "Parent":  116,
          "#":  140,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAnswerData == 3"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  141,
          "#":  142,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  141,
          "#":  143,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  159,
          "Code.Type":  "Turn",
          "Code":          
          [
              "new_operation_arr['OrganizedByPlayer'] >= 2 || new_operation_arr['AttackDate']"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  160,
          "Code.Type":  "Turn",
          "Code":          
          [
              "new_operation_arr['OrganizedByPlayer'] <= 1 && !new_operation_arr['AttackDate']"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  580,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  161,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  910,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  208,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= costDisc && ready >=4 && ShipCntWeapon(cur_ship) && ShipEqInSlot(cur_ship,t_Engine) && ShipEqInSlot(cur_ship,t_FuelTanks)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  920,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  210,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) < costDisc || ready >= 5 || !ShipCntWeapon(cur_ship)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  270,
          "Code.Type":  "Turn",
          "Code":          
          [
              "def_ship > 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  271,
          "Code.Type":  "Turn",
          "Code":          
          [
              "def_ship < 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  670,
          "Parent":  -1,
          "#":  273,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipInStar(def_ship,ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  230,
          "Pos.y":  670,
          "Parent":  -1,
          "#":  274,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipInStar(def_ship,ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  277,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipOrder(def_ship) != 2 || ShipTurnBeforeEndOrder(def_ship) > 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  550,
          "Parent":  -1,
          "#":  278,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipOrder(def_ship) == 2 && ShipTurnBeforeEndOrder(def_ship) <= 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  280,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipInNormalSpace(CurShip)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  630,
          "Parent":  -1,
          "#":  281,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipOrder(def_ship) != 3"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  160,
          "Pos.y":  630,
          "Parent":  -1,
          "#":  282,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipOrder(def_ship) == 3"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  160,
          "Pos.y":  670,
          "Parent":  -1,
          "#":  283,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipTurnBeforeEndOrder(def_ship) > 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  670,
          "Parent":  -1,
          "#":  284,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipTurnBeforeEndOrder(def_ship) <= 2"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerGroup",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  6,
          "#":  7,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnChameleonConfusion,t_OnDealingFatalDamage,t_OnStep|11]\r\nPlayerActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "WBOnPrepare",
          "Pos.x":  -130,
          "Pos.y":  0,
          "Parent":  25,
          "#":  26,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  109            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "WBOnAttack",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  26,
          "#":  28,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  109            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "WarriorsOnPrepare",
          "Pos.x":  -130,
          "Pos.y":  0,
          "Parent":  27,
          "#":  29,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  109            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnDeath|]\r\nAttackWarriorsActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "WarriorsOnAttack",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  29,
          "#":  31,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  109            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnDeath|]\r\nAttackWarriorsActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "RandomAttackersState",
          "Pos.x":  -130,
          "Pos.y":  0,
          "Parent":  109,
          "#":  110,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "CaptainsState",
          "Pos.x":  150,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  242,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateDef",
          "Pos.x":  150,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  244,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateReserve",
          "Pos.x":  -70,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  251,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MainState",
          "Pos.x":  50,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  253,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateElites",
          "Pos.x":  -200,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  288,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  60,
          "Pos.y":  0,
          "Parent":  11,
          "#":  1,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "EliteWarriorsSpawnTimer",
          "Pos.x":  -20,
          "Pos.y":  -20,
          "Parent":  8,
          "#":  2,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  100,
          "Pos.y":  -20,
          "Parent":  14,
          "#":  11,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  20,
          "#":  12,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  21,
          "#":  13,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  81,
          "#":  14,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  1,
          "#":  15,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  12,
          "#":  16,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  11,
          "#":  17,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr3",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  17,
          "#":  18,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd1",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  157,
          "#":  19,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  14,
          "#":  20,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "rand",
          "Pos.x":  570,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "waitingTimer",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  19,
          "#":  22,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr1",
          "Pos.x":  100,
          "Pos.y":  0,
          "Parent":  1,
          "#":  23,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "operation_lvl",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  72,
          "#":  33,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "on_prepare",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  33,
          "#":  38,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "dialog_path",
          "Pos.x":  510,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  39,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "player_str_rank",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  41,
          "#":  40,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "player_rank",
          "Pos.x":  670,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  41,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr4",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  18,
          "#":  47,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "split_str",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  93,
          "#":  69,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "indent_str",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  69,
          "#":  70,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "operation_num",
          "Pos.x":  410,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  72,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GlobalWBOperationsArray",
          "Pos.x":  330,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  73,
          "Var.Type":  "Array",
          "Init":  "1",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "cost",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  13,
          "#":  74,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr5",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  47,
          "#":  75,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr6",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  75,
          "#":  76,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr7",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  76,
          "#":  77,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr8",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  77,
          "#":  78,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ships_available",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  39,
          "#":  80,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_sector",
          "Pos.x":  410,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  81,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "coals_power_percent",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  80,
          "#":  82,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "min_coals_power_percent",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  82,
          "#":  83,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "stars_to_attack_arr",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  23,
          "#":  89,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr9",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  78,
          "#":  93,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "militaries_arr",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  89,
          "#":  94,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "new_operation_arr",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  94,
          "#":  95,
          "Var.Type":  "Array",
          "Init":  "[0]",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "stars_cnt_to_choose",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  40,
          "#":  97,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "coals_cnt",
          "Pos.x":  810,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  98,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "big_coals_cnt",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  98,
          "#":  99,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "coals_power",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  99,
          "#":  100,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "enemies_cnt",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  103,
          "#":  101,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "enemies_power",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  101,
          "#":  102,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "average_warrior_power",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  100,
          "#":  103,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "max_coals_power_percent",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  83,
          "#":  104,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "min_warriors_to_add_WB",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  104,
          "#":  105,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "k",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  15,
          "#":  108,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "PlayerUsedCamo",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  7,
          "#":  129,
          "Var.Type":  "Int",
          "Init":  "-1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "target_Id",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  16,
          "#":  157,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "hull_no_drop_mark",
          "Pos.x":  300,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  162,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "race",
          "Pos.x":  970,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  178,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  820,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  180,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  820,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  181,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint3",
          "Pos.x":  820,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  182,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint4",
          "Pos.x":  820,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  183,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint5",
          "Pos.x":  820,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  184,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "size",
          "Pos.x":  970,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  196,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost1",
          "Pos.x":  890,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  198,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost2",
          "Pos.x":  890,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  199,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost3",
          "Pos.x":  890,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  200,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost4",
          "Pos.x":  890,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  201,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost5",
          "Pos.x":  890,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  202,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "costDisc",
          "Pos.x":  970,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  203,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "Debuff",
          "Pos.x":  670,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  214,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DebuffCD",
          "Pos.x":  670,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  215,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ready",
          "Pos.x":  970,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  219,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd",
          "Pos.x":  810,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  240,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  670,
          "Pos.y":  610,
          "Parent":  -1,
          "#":  245,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "WarriorId",
          "Pos.x":  970,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  246,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "mobilization_powers",
          "Pos.x":  810,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  247,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "mobilization_ready",
          "Pos.x":  810,
          "Pos.y":  580,
          "Parent":  -1,
          "#":  248,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "mass_attack_stage",
          "Pos.x":  -210,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  254,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "mass_attack_cd",
          "Pos.x":  -210,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  255,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "mass_attack_HQ",
          "Pos.x":  -210,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  256,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "start_date",
          "Pos.x":  -210,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  257,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "targ_arr",
          "Pos.x":  -210,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  259,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "star_tried",
          "Pos.x":  -210,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  260,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "gift_type",
          "Pos.x":  -210,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  261,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "gift_count",
          "Pos.x":  -210,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  262,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "target_star",
          "Pos.x":  -210,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  263,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "mass_attack_star",
          "Pos.x":  -210,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  264,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "def_ship",
          "Pos.x":  230,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  286,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ConsDefended",
          "Pos.x":  230,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  290,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  5,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  7,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  25,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  29,
      "End":  30,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  31,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  29,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  35,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  45,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  45,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  51,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  53,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  54,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  55,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  52,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  54,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  53,
      "End":  58,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  58,
      "End":  59,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  60,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  56,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  61,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  55,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  63,
      "End":  64,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  64,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  67,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  68,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  66,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  79,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  79,
      "End":  68,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  84,
      "End":  85,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  85,
      "End":  86,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  86,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  87,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  88,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  91,
      "End":  92,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  85,
      "End":  96,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  96,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  88,
      "End":  106,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  106,
      "End":  87,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  62,
      "End":  107,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  107,
      "End":  87,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  110,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  110,
      "End":  111,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  25,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  9,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  90,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  114,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  90,
      "End":  115,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  115,
      "End":  91,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  71,
      "End":  36,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  118,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  119,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  120,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  119,
      "End":  122,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  120,
      "End":  121,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  125,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  124,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  125,
      "End":  117,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  124,
      "End":  126,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  126,
      "End":  127,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  127,
      "End":  128,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  130,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  130,
      "End":  131,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  131,
      "End":  132,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  132,
      "End":  134,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  134,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  132,
      "End":  135,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  135,
      "End":  136,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  136,
      "End":  137,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  122,
      "End":  123,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  123,
      "End":  138,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  138,
      "End":  139,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  140,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  140,
      "End":  141,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  141,
      "End":  142,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  142,
      "End":  144,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  141,
      "End":  143,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  145,
      "End":  146,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  146,
      "End":  147,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  143,
      "End":  145,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  133,
      "End":  148,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  149,
      "End":  150,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  150,
      "End":  151,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  153,
      "End":  154,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  154,
      "End":  155,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  151,
      "End":  152,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  155,
      "End":  156,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  159,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  159,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  160,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  160,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  161,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  161,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  164,
      "End":  165,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  164,
      "End":  166,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  166,
      "End":  167,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  167,
      "End":  171,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  167,
      "End":  170,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  167,
      "End":  169,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  167,
      "End":  168,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  167,
      "End":  172,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  171,
      "End":  177,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  170,
      "End":  176,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  169,
      "End":  175,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  168,
      "End":  174,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  172,
      "End":  173,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  177,
      "End":  179,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  176,
      "End":  179,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  175,
      "End":  179,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  174,
      "End":  179,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  173,
      "End":  179,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  185,
      "End":  186,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  179,
      "End":  185,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  185,
      "End":  189,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  185,
      "End":  190,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  185,
      "End":  187,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  185,
      "End":  188,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  188,
      "End":  191,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  187,
      "End":  192,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  186,
      "End":  193,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  189,
      "End":  194,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  190,
      "End":  195,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  163,
      "End":  164,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  191,
      "End":  204,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  192,
      "End":  204,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  193,
      "End":  204,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  194,
      "End":  204,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  195,
      "End":  204,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  204,
      "End":  197,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  197,
      "End":  205,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  197,
      "End":  206,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  206,
      "End":  207,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  207,
      "End":  164,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  197,
      "End":  208,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  197,
      "End":  210,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  208,
      "End":  209,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  210,
      "End":  211,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  209,
      "End":  212,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  212,
      "End":  213,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  217,
      "End":  218,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  218,
      "End":  197,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  220,
      "End":  221,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  221,
      "End":  222,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  222,
      "End":  216,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  222,
      "End":  223,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  223,
      "End":  224,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  224,
      "End":  226,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  226,
      "End":  222,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  224,
      "End":  225,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  227,
      "End":  228,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  228,
      "End":  222,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  213,
      "End":  229,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  213,
      "End":  230,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  230,
      "End":  167,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  231,
      "End":  232,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  232,
      "End":  233,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  233,
      "End":  216,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  235,
      "End":  233,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  239,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  239,
      "End":  233,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  233,
      "End":  234,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  234,
      "End":  236,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  236,
      "End":  237,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  236,
      "End":  235,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  241,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  241,
      "End":  242,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  243,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  243,
      "End":  244,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  249,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  250,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  250,
      "End":  251,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  251,
      "End":  252,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  249,
      "End":  253,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  253,
      "End":  258,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  265,
      "End":  266,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  266,
      "End":  267,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  267,
      "End":  268,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  244,
      "End":  269,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  273,
      "End":  275,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  274,
      "End":  276,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  278,
      "End":  279,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  280,
      "End":  277,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  280,
      "End":  278,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  277,
      "End":  281,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  281,
      "End":  273,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  281,
      "End":  274,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  277,
      "End":  282,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  282,
      "End":  283,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  282,
      "End":  284,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  283,
      "End":  275,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  284,
      "End":  285,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  269,
      "End":  270,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  269,
      "End":  271,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  270,
      "End":  280,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  271,
      "End":  272,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  287,
      "End":  288,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  288,
      "End":  289,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  287,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  106,
  "BlockPar.EC":  
  [
    {
      "#":  "100",
      "String":  "Орудие 2: weap2"    
    },
    {
      "#":  "101",
      "String":  "Орудие 1: weap1"    
    },
    {
      "#":  "102",
      "String":  "Захват: hook"    
    },
    {
      "#":  "103",
      "String":  "Ремонтный дроид: droid"    
    },
    {
      "#":  "104",
      "String":  "Генератор поля: def"    
    },
    {
      "#":  "105",
      "String":  "Сканер: scaner"    
    },
    {
      "#":  "106",
      "String":  "Радар: radar"    
    },
    {
      "#":  "107",
      "String":  "Топливный бак: tank"    
    },
    {
      "#":  "108",
      "String":  "Двигатель: engine"    
    },
    {
      "#":  "109",
      "String":  "класса J"    
    },
    {
      "#":  "110",
      "String":  "Класса L (<0> ед. структуры)"    
    },
    {
      "#":  "111",
      "String":  "класса L"    
    },
    {
      "#":  "112",
      "String":  "Класса S (<0> ед. структуры)"    
    },
    {
      "#":  "113",
      "String":  "класса S"    
    },
    {
      "#":  "114",
      "String":  "Класса N (<0> ед. структуры)"    
    },
    {
      "#":  "115",
      "String":  "класса N"    
    },
    {
      "#":  "116",
      "String":  "Класса M (<0> ед. структуры)"    
    },
    {
      "#":  "117",
      "String":  "класса M"    
    },
    {
      "#":  "118",
      "String":  "Прервать процесс сборки военного"    
    },
    {
      "#":  "119",
      "String":  "Подтвердить сборку"    
    },
    {
      "#":  "120",
      "String":  "Хочу установить орудие в данный слот"    
    },
    {
      "#":  "121",
      "String":  "Пожалуй, не стоит"    
    },
    {
      "#":  "122",
      "String":  "Ура!"    
    },
    {
      "#":  "123",
      "String":  "Хочу собрать ещё одного пилота"    
    },
    {
      "#":  "124",
      "String":  "Хочу поменять оборудование в слоте"    
    },
    {
      "#":  "125",
      "String":  "одной из наших антидоминаторских программ. Будем рады увидеть тебя бок о бок с нами в дальнейших сражениях"    
    },
    {
      "#":  "126",
      "String":  "Эге, рейнджер! Ты неплохо себя показал в этом бою. И вправду - рейнджеры чего-то да стоят! Наше командование уже оформило тебе"    
    },
    {
      "#":  "127",
      "String":  "Эге, рейнджер! Ты неплохо себя показал в этом бою. И вправду - рейнджеры чего-то да стоят! Наше командование уже оформило на твоё имя новенькую награду. Будем рады увидеть тебя бок о бок с нами в дальнейших сражениях"    
    },
    {
      "#":  "128",
      "String":  "Будем рады увидеть тебя бок о бок с нами в дальнейших сражениях"    
    },
    {
      "#":  "129",
      "String":  "копий камуфляжа серии"    
    },
    {
      "#":  "130",
      "String":  "Террон"    
    },
    {
      "#":  "131",
      "String":  "Келлер"    
    },
    {
      "#":  "132",
      "String":  "Блазер"    
    },
    {
      "#":  "133",
      "String":  "Эге, рейнджер! Ты неплохо себя показал в этом бою. И вправду - рейнджеры чего-то да стоят! Наше командование уже перечислило тебе"    
    },
    {
      "#":  "134",
      "String":  "Рейнджер, данный корабль занят в операции по полномасштабному освобождению систем Коалиции. Просим вас не мешать нам и отключиться от линии высокочастотной связи."    
    },
    {
      "#":  "135",
      "String":  "Начало операции назанчено на"    
    },
    {
      "#":  "136",
      "String":  "Точкой сбора военных и всех добровольцев будет в системе starHQ, а управление операцией возьмёт на себя экипаж военной базы"    
    },
    {
      "#":  "137",
      "String":  "Командование Вооружённых Сил Межзвёздной Коалиции приняло решение о начале беспрцендентной по своей полномасштабности операции - атаке силами военного флота по линии сопрокосновния с противником! Под удар попадут силы захватчиков в системах"    
    },
    {
      "#":  "138",
      "String":  "Внимание всем!"    
    },
    {
      "#":  "139",
      "String":  "star1, star2, star4, star5, star6, star7 и star3"    
    },
    {
      "#":  "140",
      "String":  "star1, star2, star4, star5 и star3"    
    },
    {
      "#":  "141",
      "String":  "star1, star2, star4 и star3"    
    },
    {
      "#":  "142",
      "String":  "star1, star2 и star3"    
    },
    {
      "#":  "143",
      "String":  "систем. Разгром захватчиков стал ещё ближе. Слава Коалиции!"    
    },
    {
      "#":  "144",
      "String":  "В результате сверхуспешной операции наших вооружённых сил удалось освободить"    
    },
    {
      "#":  "145",
      "String":  "Да здравствует КВСМК!"    
    },
    {
      "#":  "146",
      "String":  "Эгей, рейнджер! Не хочешь помочь нашей бравой армии разобраться с проклятыми захватчиками? Тогда дуй с нами освобождать систему! Посмотрим, кто быстрее справится с захватчиками: хвалёные рейнджеры или рабочие лошадки! Ну а если сомневаешься, то у нас припасён небольшой подарочек для тех, кто присоединится к нашей операции. Ну что, по рукам?"    
    },
    {
      "#":  "41",
      "String":  "<0>"    
    },
    {
      "#":  "42",
      "String":  ""    
    },
    {
      "#":  "43",
      "String":  "Без уважения, КВСМК."    
    },
    {
      "#":  "44",
      "String":  "Рейнджер <Player>! Ваши \"достижения\" в области уничтожения кораблей Коалиции не могли не заинтересовать КВСМК. В связи с этим командование приняло решение о <color=220,20,20>лишении</color> вас <clr>100<clrEnd> очков воинского звания."    
    },
    {
      "#":  "45",
      "String":  "Рейнджер <Player>! Ваши \"достижения\" в области уничтожения кораблей Коалиции не могли не заинтересовать КВСМК. В связи с этим командование приняло решение о <color=220,20,20>понижении</color> вас в звании. Отныне вы -"    
    },
    {
      "#":  "46",
      "String":  "Хочу оснастить пилота"    
    },
    {
      "#":  "47",
      "String":  "Если у тебя завалялось много лишнего оборудования, то можешь помочь нам с оснащением пилотов."    
    },
    {
      "#":  "48",
      "String":  "color=220,20,20>отсутствует</color>"    
    },
    {
      "#":  "49",
      "String":  "млн км)"    
    },
    {
      "#":  "50",
      "String":  "ед. ущерба на расстоянии"    
    },
    {
      "#":  "51",
      "String":  "т. на расстоянии"    
    },
    {
      "#":  "52",
      "String":  "ед. структуры/сутки)"    
    },
    {
      "#":  "53",
      "String":  "ед. топлива)"    
    },
    {
      "#":  "54",
      "String":  "оружие в слоте отсутствует"    
    },
    {
      "#":  "55",
      "String":  "слот занимает"    
    },
    {
      "#":  "56",
      "String":  "<color=220,20,20>Это оборудование критически важно!</color>"    
    },
    {
      "#":  "57",
      "String":  "оборудование в слоте отсутствует"    
    },
    {
      "#":  "58",
      "String":  "Ну что, освободитель Галактики, решил нам помочь? Похвально, похвально.<br><br>Собственно, должен объясниться. Несмотря на активное финансирование Галактическим Советом, КВСМК испытывает серьёзные проблемы с оснащением необходимого для фронта количества пилотов.<br><br>Вы, рейнджер, зарекомендовали себя как отличный пилот, которому можно доверить столь ответственное мероприятие, которым является оснащение наших пилотов."    
    },
    {
      "#":  "59",
      "String":  "В нашем резерве всегда находится большое количество пилотов - кто-то потерял свой корпус в жестком бою, но был вынесен в спасательной капсуле с поля боя и спасён рейнджерами, кто-то дотащил разбитый до состояния металлолома корабль до космопорта, а кто-то - просто наш запас, постепенно призываемый по мере гибели пилотов на передовой.<br><br>Так или иначе, мы можем предложить вам, пилота <clr>какой расы<clrEnd> вы будете оснащать."    
    },
    {
      "#":  "60",
      "String":  "Отлично! Теперь подбери размер корпуса пилота согласно нашей размерной шкале корпусов<br><br>Ценовой расклад у нас такой:<br>Класс M - <0> cr.<br>Класс N - <1> cr.<br>Класс J - <2> cr.<br>Класс L - <3> cr.<br>Класс S - <4> cr."    
    },
    {
      "#":  "61",
      "String":  "Меня интересует орудие в пятом (5) слоте"    
    },
    {
      "#":  "62",
      "String":  "Меня интересует орудие в четвёртом (4) слоте"    
    },
    {
      "#":  "63",
      "String":  "Меня интересует орудие в третьем (3) слоте"    
    },
    {
      "#":  "64",
      "String":  "Меня интересует орудие в втором (2) слоте"    
    },
    {
      "#":  "65",
      "String":  "Меня интересует орудие в первом (1) слоте"    
    },
    {
      "#":  "66",
      "String":  "Меня интересует захват военного"    
    },
    {
      "#":  "67",
      "String":  "Меня интересует радар военного"    
    },
    {
      "#":  "68",
      "String":  "Меня интересует сканер военного"    
    },
    {
      "#":  "69",
      "String":  "Меня интересует топливный бак"    
    },
    {
      "#":  "70",
      "String":  "Меня интересует двигатель"    
    },
    {
      "#":  "71",
      "String":  "Меня интересует ремонтный дроид"    
    },
    {
      "#":  "72",
      "String":  "Меня интересует генератор поля"    
    },
    {
      "#":  "73",
      "String":  "Хорошо! Теперь осталось совсем немного - оснастить корабль оборудованием.<br>Чтобы у тебя было понимание порядка цифр, выведем тебе сейчас текущую информацию по собираемому кораблю:<br>==================<br>Пилот: <0><br>Корабль: <1> (<2> ед. структуры)<br>-------Оборудование-------<br><3><br>==================<br>С учётом твоего рейтинга воина, ты получаешь скидку в размере <4>, следовательно, тебе потребуется уплатить <5> cr."    
    },
    {
      "#":  "74",
      "String":  "Ну вот и всё, рейнджер!<br>Собранный вами военный совсем скоро поднимется на орбиту планеты <0>, чтобы начать нести службу в нашей системе. Ну а мы, тем временем, можем заняться другими делами!"    
    },
    {
      "#":  "75",
      "String":  "Назад к выбору функций"    
    },
    {
      "#":  "76",
      "String":  "Итак, речь идёт про орудие на корабле, расположенное в слоте номер <0><br><br>И на данный момент <1>"    
    },
    {
      "#":  "77",
      "String":  "Снять орудие"    
    },
    {
      "#":  "78",
      "String":  "Установить орудие"    
    },
    {
      "#":  "79",
      "String":  "На какое орудие меняем?"    
    },
    {
      "#":  "80",
      "String":  "Итак, настало время определиться с оборудованием.<br><br>На данный момент <0><br><1>"    
    },
    {
      "#":  "81",
      "String":  "Снять оборудование"    
    },
    {
      "#":  "82",
      "String":  "Установить"    
    },
    {
      "#":  "83",
      "String":  "На какое оборудование меняем?"    
    },
    {
      "#":  "84",
      "String":  "Это большая честь, но не сейчас, извините."    
    },
    {
      "#":  "85",
      "String":  "Пожалуй, приму участие, благодарю!"    
    },
    {
      "#":  "86",
      "String":  "Для победы над врагом нужно превосходить его не числом, а умением, в чём преуспели <color=220,100,250>фэяне</color>."    
    },
    {
      "#":  "87",
      "String":  "фэянин"    
    },
    {
      "#":  "88",
      "String":  "Спокойный и рассудительный <color=50,150,230>человек</color> - мой выбор!"    
    },
    {
      "#":  "89",
      "String":  "человек"    
    },
    {
      "#":  "90",
      "String":  "Военная хитрость не менее эффективна, чем сила. Нам нужен <color=130,150,40>лепрасовый</color>."    
    },
    {
      "#":  "91",
      "String":  "пеленг"    
    },
    {
      "#":  "92",
      "String":  "Не время для слабости - сын <color=255,0,0>Рамгатру</color> сотрёт наших врагов в порошок!"    
    },
    {
      "#":  "93",
      "String":  "малок"    
    },
    {
      "#":  "94",
      "String":  "Этому космосу нужна гармония - зовите пилота-<color=250,250,100>гаальца</color>."    
    },
    {
      "#":  "95",
      "String":  "гаалец"    
    },
    {
      "#":  "96",
      "String":  "Класса J (<0> ед. структуры)"    
    },
    {
      "#":  "97",
      "String":  "Орудие 5: weap5"    
    },
    {
      "#":  "98",
      "String":  "Орудие 4: weap4"    
    },
    {
      "#":  "99",
      "String":  "Орудие 3: weap3"    
    }  
  ]
}