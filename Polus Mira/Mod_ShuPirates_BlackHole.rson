{
    "FileID": 573785173,
    "FileVersion": 8,
    "ViewPos.x": -336,
    "ViewPos.y": 171,
    "ScriptName": "Mod_ShuPirates_BlackHole",
    "ScriptFileOut": "C:\\Users\\DmitB\\Фиксы\\Universe Redux Fixes\\Mods\\ShusRangers\\ShuPirates\\DATA\\Script\\Mod_ShuPirates_BlackHole.scr",
    "ScriptTextOut": "C:\\Users\\DmitB\\Фиксы\\Universe Redux Fixes\\Mods\\ShusRangers\\ShuPirates\\DATA\\Script\\Mod_ShuPirates_BlackHole.txt",
    "LangDatIn": "",
    "LangDatOut": "",
    "MainDatIn": "",
    "MainDatOut": "",
    "CacheDatIn": "",
    "CacheDatOut": "",
    "ExportLang": false,
    "Visual.Objects": 
    [
        {
            "Groups": 
            [
                {
                    "Type": "TGroup",
                    "Name": "PlayerGroup",
                    "Pos.x": 240,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 0,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 1,
                    "CntShipMax": 1,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": true,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                },
                {
                    "Type": "TGroup",
                    "Name": "PiratesGroup",
                    "Pos.x": 350,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 0,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 0,
                    "CntShipMax": 0,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": false,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                }
            ],
            "Operations": 
            [
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 290,
                    "Pos.y": 480,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Global",
                    "Code": 
                    [
                        "//Если таймер закончил отсчёт (установлен на 4 года от начала игры)",
                        "if(CurTurn()>=GPirateHoleDate)",
                        "{",
                        "    //Пока пираты ещё не проиграли/победили",
                        "    if(!PirateWin())",
                        "    {",
                        "        //И только если сам игрок не находится на стороне пиратов",
                        "        if(!ShipOnSidePirateClan(Player()))",
                        "        {",
                        "            //Запускаем скрипт",
                        "            GRun();",
                        "            //Обновляем таймер на срок от 1.4 до 2.1 лет",
                        "            GPirateHoleDate=CurTurn()+Rnd(511,766);",
                        "        }",
                        "    }",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 320,
                    "Pos.y": 480,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Init",
                    "Code": 
                    [
                        "//Вешаем на игрока инфошку для блокировки повторного лишнего исполнения запуска скриптового боя ЧД",
                        "//if(ShipFindCustomShipInfoByType(Player(), 'PlayerInHoleTurnBlock') == -1) ShipAddCustomShipInfo(Player(), 'PlayerInHoleTurnBlock', 'NoShow');",
                        "",
                        "//HoleWasVisited == -1 - нельзя запускать скрипт, т.к. в системе игрока уже есть другая ЧД, либо пиратская система находится под атакой",
                        "//HoleWasVisited ==  0 - скриптовая ЧД создана и ждёт игрока",
                        "//HoleWasVisited ==  1 - скриптовая ЧД была посещена игроком",
                        "HoleWasVisited = -1;",
                        "if(!StarHoles(PlayerStar) && !StarBattle(PirateStar))",
                        "{",
                        "    if(!StarHoles(PirateStar) && SectorVisible(StarToCon(PirateStar)))",
                        "    {",
                        "        //Создаём саму ЧД и выставляем таймер её продолжительности",
                        "        BlackHoleId = Id(HoleCreate2(PlayerStar, PirateStar));",
                        "        HoleWasVisited = 0;",
                        "    }",
                        "    //Завершаем скрипт, если в системе игрока уже есть открытая ЧД",
                        "    else",
                        "    {",
                        "        AllShipOut();",
                        "        //Повторная проверка запуска в случае неудачи случится примерно через месяц",
                        "        GPirateHoleDate = CurTurn() + Rnd(21, 43);",
                        "    }",
                        "}",
                        "else",
                        "{",
                        "    AllShipOut();",
                        "    //Повторная проверка запуска в случае неудачи случится примерно через месяц",
                        "    GPirateHoleDate = CurTurn() + Rnd(21, 43);",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 350,
                    "Pos.y": 480,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "//Создаём группу \"засадных\" пиратов на планете в системе выхода из созданной ЧД",
                        "//Делаем это в терне, потому что, блять, в ините нельзя добавлять в группы (групп в тот момент ещё не существует)",
                        "if(!PiratesSpawned)",
                        "{",
                        "\tfor(i = 0; i < Rnd(4, 6); i = i + 1)",
                        "\t{",
                        "\t\t//Спавним клановых пиратов",
                        "\t\tcur_ship = BuyWarrior(PlanetPirateClan(), 250);",
                        "\t\t//Случайно поднимаем ранг пиратов",
                        "\t\ttint1 = Rnd(2, 4);",
                        "\t\twhile(GetShipPirateRank(cur_ship) < tint1)",
                        "\t\t{",
                        "\t\t\tShipPirateRankPoints(cur_ship, ShipNextPirateRankPoints(cur_ship));",
                        "\t\t\tRaisePirateRank(cur_ship);",
                        "\t\t}",
                        "\t\t//Реэкипируем пиратов",
                        "\t\tShipRefit(cur_ship);",
                        "\t\tShipRefit(cur_ship);",
                        "\t\tShipRefit(cur_ship);",
                        "\t\tShipRefit(cur_ship);",
                        "\t\t//Поднимаем их навыки",
                        "\t\tShipSkill(cur_ship, 0, Rnd(3, 6));",
                        "\t\tShipSkill(cur_ship, 1, Rnd(3, 6));",
                        "\t\tShipSkill(cur_ship, 2, Rnd(0, 6));",
                        "\t\tShipSkill(cur_ship, 3, Rnd(0, 4));",
                        "\t\tShipSkill(cur_ship, 4, Rnd(0, 4));",
                        "\t\tShipSkill(cur_ship, 5, Rnd(0, 4));",
                        "\t\t//И отправляем на планету у точки выхода из ЧД, поджидать игрока",
                        "\t\tTransferShip(cur_ship, PiratePlanet);",
                        "\t\tShipJoin(PiratesGroup, cur_ship);",
                        "\t}",
                        "",
                        "\tPiratesSpawned = 1;",
                        "}",
                        "//Если игрок залетел в ЧД, созданную данным скриптом",
                        "if(!HoleWasVisited)",
                        "{",
                        "\tif(ShipInHole(Player()))",
                        "\t{",
                        "\t\tif(!StartAB())",
                        "\t\t{",
                        "\t\t\ttdwd1 = ShipOrderObj(Player());",
                        "\t\t\tif(HoleStar1(tdwd1) == PlayerStar && HoleStar2(tdwd1) == PirateStar)",
                        "\t\t\t{",
                        "\t\t        //Ставим маркер о посещении пиратской ЧД в этой итерации запуска скрипта",
                        "\t\t        HoleWasVisited = 1;",
                        "                //На всякий случай запрещаем игроку повторный влёт в данную ЧД (боты могут случайно продлить её время жизни своими залётами)",
                        "                HoleMap(tdwd1, 'NoEntry');",
                        "",
                        "                //Проверяем, не попали ли в ЧД одновременно с игроком другие корабли",
                        "                tdwd2 = ShipStar(Player());",
                        "                check = 0;",
                        "\t\t\t\tfor(i = 0; i < StarShips(tdwd2); i = i + 1)",
                        "\t\t\t\t{",
                        "\t\t\t\t\tcur_ship = StarShips(tdwd2, i);",
                        "                    if(IsPlayer(cur_ship)) continue;",
                        "\t\t\t\t\tif(!ShipInHole(cur_ship)) continue;",
                        "\t\t\t\t\tif(HoleStar1(ShipOrderObj(cur_ship)) != HoleStar1(tdwd1)) continue;",
                        "",
                        "\t\t\t\t\t//Проверяем отношение корабля к игроку, если оно враждебно, то корабль останется врагом игрока и в АБ",
                        "\t\t\t\t\ttint1 = 1;",
                        "\t\t\t\t\tif(ShipGetBad(cur_ship) == Player()) tint1 = 2;",
                        "\t\t\t\t\telse if(RelationToRanger(cur_ship, Player()) <= 9) tint1 = 2;",
                        "                    //Также враждебным к игроку станет любой влетевший с ним в данную ЧД рейнджер-изменник или пират",
                        "                    else",
                        "                    {",
                        "                        tstr1 = ShipType(cur_ship);",
                        "                        if(ShipTypeN(cur_ship) == t_Pirate) tint1 = 0;",
                        "                        else if(tstr1 == 'RangerPirate' || tstr1 == 'RangerPirateExplorer') tint1 = 0;",
                        "                    }",
                        "                    //Определяем общую силу корабля в АБ",
                        "                    //tint2 = ShipTypeN(cur_ship);",
                        "                    //if(tint2 == t_Pirate) tint2 = 105;",
                        "\t\t\t\t\t//else if(tint2 == t_Tranclucator) tint2 = 80;",
                        "                    //else tint2 = 120;",
                        "\t\t\t\t\t//Включаем этот корабль в будущую аркадную битву",
                        "\t\t\t\t\ttdwd3 = ConvertToABShip(cur_ship, tint1, 100, 100, TrimNumbers(ShipType(cur_ship)) + '_Id' + Id(cur_ship));",
                        "                    //Добавляем автореген за каждого экипированного младшего дроида",
                        "                    ABShipModifiers(tdwd3, 'regen', 100 * ArtefactTypeInUse(cur_ship, t_ArtefactDroid));",
                        "\t\t\t\t\t//Ставим кораблю метку, что он попал в ЧД вместе с игроком",
                        "\t\t\t\t\ttint1 = ShipFindCustomShipInfoByType(cur_ship, 'BraveExplorer');",
                        "\t\t\t\t\tif(tint1 > -1) ShipCustomShipInfoData(cur_ship, tint1, 1, 5);",
                        "                    //Считаем число посторонних кораблей, попавших в данную ЧД вместе с игроком",
                        "\t\t\t\t\tcheck = check + 1;",
                        "                }",
                        "                if(check) check = check - 1;",
                        "",
                        "\t\t\t\t//Создаём аркадные корабли и маскируем их под пиратов",
                        "\t\t\t\tfor(i = 1; i <= Rnd(3 + check, 6 + check); i = i + 1)",
                        "\t\t\t\t{",
                        "\t\t\t\t\ttint1 = Rnd(1, 5);",
                        "\t\t\t\t\tif(tint1 == 1) tstr1 = 'Ship.Maloc.PirateClan';",
                        "\t\t\t\t\telse if(tint1 == 2) tstr1 = 'Ship.Peleng.PirateClan';",
                        "\t\t\t\t\telse if(tint1 == 3) tstr1 = 'Ship.People.PirateClan';",
                        "\t\t\t\t\telse if(tint1 == 4) tstr1 = 'Ship.Fei.PirateClan';",
                        "\t\t\t\t\telse tstr1 = 'Ship.Gaal.PirateClan';",
                        "\t\t\t\t\t//Случайно определяем дроп из пиратских кораблей",
                        "\t\t\t\t\tif(Rnd(0, 5))",
                        "\t\t\t\t\t{",
                        "\t\t\t\t\t\ttint1 = Rnd(1, 100);",
                        "\t\t\t\t\t\t//Эсодафер",
                        "\t\t\t\t\t\tif(tint1 <= 12)",
                        "\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\ttint1 = GalaxyTechLevel() - Rnd(0, 2);",
                        "\t\t\t\t\t\t\tif(tint1 <= 0) tint1 = 1;",
                        "\t\t\t\t\t\t\ttdwd1 = CreateEquipment(t_Weapon16, Rnd(30, 65), tint1, 7);",
                        "\t\t\t\t\t\t}",
                        "\t\t\t\t\t\t//Кафаситор",
                        "\t\t\t\t\t\telse if(tint1 <= 25)",
                        "\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\ttint1 = GalaxyTechLevel() - Rnd(0, 2);",
                        "\t\t\t\t\t\t\tif(tint1 <= 0) tint1 = 1;",
                        "\t\t\t\t\t\t\ttdwd1 = CreateEquipment(t_Weapon17, Rnd(25, 55), tint1, 7);",
                        "\t\t\t\t\t\t}",
                        "\t\t\t\t\t\t//Лирекрон",
                        "\t\t\t\t\t\telse if(tint1 <= 37)",
                        "\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\ttint1 = GalaxyTechLevel() - Rnd(0, 2);",
                        "\t\t\t\t\t\t\tif(tint1 <= 0) tint1 = 1;",
                        "\t\t\t\t\t\t\ttdwd1 = CreateEquipment(t_Weapon18, Rnd(15, 45), tint1, 7);",
                        "\t\t\t\t\t\t}",
                        "\t\t\t\t\t\telse",
                        "\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\t//Если подключён мод ExpArts",
                        "\t\t\t\t\t\t\tif(IsScriptActive('Mod_ExpArts'))",
                        "\t\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\t\ttint1 = Rnd(1, 100);",
                        "\t\t\t\t\t\t\t\t//Нуль-генератор",
                        "\t\t\t\t\t\t\t\tif(tint1 <= 5)",
                        "\t\t\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\t\t\ttdwd1 = CreateQuestItem('RNDmoditem_2', 6);",
                        "                                }",
                        "\t\t\t\t\t\t\t\t//Хаскер_PROx64",
                        "\t\t\t\t\t\t\t\telse if(tint1 <= 27)",
                        "\t\t\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\t\t\ttdwd1 = CreateCustomArt('RNDart_03', CustomArtSizeCalc(0 + CT('Artefacts.CustomArtefacts.RNDart_03.Size')), CustomArtCostCalc(0 + CT('Artefacts.CustomArtefacts.RNDart_03.Cost')), 7);",
                        "                                }",
                        "\t\t\t\t\t\t\t\t//Кварковая бомба",
                        "\t\t\t\t\t\t\t\telse if(tint1 <= 63)",
                        "\t\t\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\t\t\ttdwd1 = CreateArt(t_ArtefactBomb, 7);",
                        "\t\t\t\t\t\t\t\t}",
                        "\t\t\t\t\t\t\t\t//Оглушающая бомба",
                        "\t\t\t\t\t\t\t\telse if(tint1 <= 78)",
                        "\t\t\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\t\t\ttdwd1 = CreateQuestItem('RNDbomb_2', 7);",
                        "\t\t\t\t\t\t\t\t}",
                        "\t\t\t\t\t\t\t\t//ЭМП бомба",
                        "\t\t\t\t\t\t\t\telse",
                        "\t\t\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\t\t\ttdwd1 = CreateQuestItem('RNDbomb_3', 7);",
                        "\t\t\t\t\t\t\t\t}",
                        "\t\t\t\t\t\t\t}",
                        "\t\t\t\t\t\t\t//Иначе ракетомет",
                        "\t\t\t\t\t\t\telse",
                        "\t\t\t\t\t\t\t{",
                        "\t\t\t\t\t\t\t\ttint1 = GalaxyTechLevel() - Rnd(0, 2);",
                        "\t\t\t\t\t\t\t\tif(tint1 <= 0) tint1 = 1;",
                        "\t\t\t\t\t\t\t\ttdwd1 = CreateEquipment(t_Weapon4, Rnd(15, 40), tint1, 7);",
                        "\t\t\t\t\t\t\t}",
                        "\t\t\t\t\t\t}",
                        "\t\t\t\t\t}",
                        "\t\t\t\t\t//А если не свезло, то выпадет бесполезный хлам",
                        "\t\t\t\t\telse",
                        "\t\t\t\t\t{",
                        "\t\t\t\t\t\ttint1 = Rnd(1, 100);",
                        "\t\t\t\t\t\t//Блок сигарет",
                        "\t\t\t\t\t\tif(tint1 <= 34) tdwd1 = CreateQuestItem('Usl_19', PirateClan);",
                        "\t\t\t\t\t\t//Ящик с золотом",
                        "\t\t\t\t\t\telse if(tint1 <= 58) tdwd1 = CreateQuestItem('Usl_PTQ70', PirateClan);",
                        "\t\t\t\t\t\t//Бронированный ящик с ценным грузом",
                        "\t\t\t\t\t\telse if(tint1 <= 81) tdwd1 = CreateQuestItem('Usl_RandomItem_03', Rnd(0, 4));",
                        "\t\t\t\t\t\t//Или малокский табурет",
                        "\t\t\t\t\t\telse tdwd1 = CreateQuestItem('Usl_64', Maloc);",
                        "\t\t\t\t\t}",
                        "",
                        "\t\t\t\t\tCreateABShip(tstr1, 0, Rnd(50, 175), Rnd(75, 135), 'ClanPirate', tdwd1);",
                        "\t\t\t\t}",
                        "\t\t\t\t//Начинаем аркадный бой",
                        "                for(i=1; i<=14; i=i+1) ArrayAdd(tempArr, i); //Стандартные карты",
                        "                if(ResourceExist('ABMap.Tachanka')) { //Карты из RevAB",
                        "                    for(i=15; i<=20; i=i+1) ArrayAdd(tempArr, i);",
                        "                }",
                        "                if(ResourceExist('ABMap.02_1_V02')) { //Карты из SR1ABMaps",
                        "                    for(i=21; i<=23; i=i+1) ArrayAdd(tempArr, i);",
                        "                }",
                        "                if(ResourceExist('ABMap.endless')) { //Карты из AdvancedABMaps",
                        "                    for(i=24; i<=27; i=i+1) ArrayAdd(tempArr, i);",
                        "                }",
                        "                tint1=tempArr[Rnd(1,ArrayDim(tempArr)-1)];",
                        "                ArrayClear(tempArr);",
                        "                if(tint1<=14) StartAB('ABMap.map_'+tint1);",
                        "                else {",
                        "                    if(tint1 == 15) StartAB('ABMap.Nonsense');",
                        "                    else if(tint1 == 16) StartAB('ABMap.Pulsar');",
                        "                    else if(tint1 == 17) StartAB('ABMap.Strolocobs');",
                        "                    else if(tint1 == 18) StartAB('ABMap.Tachanka');",
                        "                    else if(tint1 == 19) StartAB('ABMap.Fifth_Dimension');",
                        "                    else if(tint1 == 20) StartAB('ABMap.Spider\\\\\\'s_Lair');",
                        "                    else if(tint1 == 21) StartAB('ABMap.02_1_V02');",
                        "                    else if(tint1 == 22) StartAB('ABMap.04_2_V01');",
                        "                    else if(tint1 == 23) StartAB('ABMap.04_3_V03');",
                        "                    else if(tint1 == 24) StartAB('ABMap.curvature');",
                        "                    else if(tint1 == 25) StartAB('ABMap.trap');",
                        "                    else if(tint1 == 26) StartAB('ABMap.endless');",
                        "                    else if(tint1 == 27) StartAB('ABMap.polygons');",
                        "                }",
                        "\t\t\t}",
                        "\t\t}",
                        "\t    //Игрок завершил данный аркадный бой",
                        "\t    else if(GABStatus == 2)",
                        "\t    {",
                        "\t\t    //Перебираем галаэвенты и выясняем, что стало с копией корабля, влетевшего в ЧД вместе с игроком (если таковые были)",
                        "\t\t    for(i = GalaxyEvents() - 1; i >= 0; i = i - 1)",
                        "\t\t    {",
                        "\t\t\t    if(GalaxyEventDate(i) < CurTurn()) break;",
                        "\t\t\t    tstr1 = GalaxyEventType(i);",
                        "\t\t\t    //Если он погиб",
                        "\t\t\t    if(tstr1 == 'LabeledShipKilledInAB')",
                        "\t\t\t    {",
                        "\t\t\t\t    tstr1 = GalaxyEventsTextData(i, 0);",
                        "\t\t\t\t    if(findsubstr(tstr1, '_ShipId') > -1)",
                        "\t\t\t\t    {",
                        "\t\t\t\t\t    //Определяем Id, а затем ищем и убиваем этот корабль в нормальном гиперпространстве, до его выхода из ЧД",
                        "                        HullHP(IdToShip(int(tstr1)), -1000); //Выставляем минусовое ХП, чтобы никакой дроид не успел отхилить его за один ход",
                        "\t\t\t\t    }",
                        "\t\t\t    }",
                        "\t\t\t    //Если выжил",
                        "\t\t\t    else if(tstr1 == 'LabeledShipSurvivedInAB')",
                        "\t\t\t    {",
                        "\t\t\t\t    tstr1 = GalaxyEventsTextData(i, 0);",
                        "\t\t\t\t    if(findsubstr(tstr1,'_ShipId') > -1)",
                        "\t\t\t\t    {",
                        "\t\t\t\t\t    //Выставляем ему уровень здоровья, который остался у этого корабля под конец аркадного боя",
                        "                        tdwd1 = IdToShip(int(tstr1));",
                        "                        HullHP(tdwd1, GalaxyEventData(i, 0));",
                        "                        //Проверка на случай, если корабль закончил АБ с минимальным количеством ХП и на выходе получил из события нулевое здоровье",
                        "                        if(HullHP(tdwd1) < 1) HullHP(tdwd1, round(0.01 * ItemSize(ShipItems(tdwd1, 0))) + 1);",
                        "\t\t\t\t    }",
                        "\t\t\t    }",
                        "\t\t    }",
                        "\t    }",
                        "\t}",
                        "}",
                        "//Каждый ход проверяем наличие скриптовой дыры в системе игрока",
                        "//Когда она закроется, скрипт должен будет об этом узнать",
                        "if(!StarHoles(PlayerStar)) BlackHoleId = -1;",
                        "else",
                        "{",
                        "    for(i = 0; i < StarHoles(PlayerStar); i = i + 1)",
                        "    {",
                        "        tdwd1 = StarHoles(PlayerStar, i);",
                        "        if(BlackHoleId == Id(tdwd1)) break;",
                        "        if(i == StarHoles(PlayerStar) - 1) BlackHoleId = -1;",
                        "    }",
                        "}",
                        "//Если во время работы скрипта игрок вступил в клан, завершаем скрипт",
                        "if(ShipOnSidePirateClan(Player())) AllShipOut();",
                        "//Если скриптовая ЧД уже закрылась, а игрок её так и не посетил, выводим его из скрипта",
                        "else if(!HoleWasVisited)",
                        "{",
                        "    if(BlackHoleId == -1) ShipOut(Player());",
                        "}",
                        "//Выводим игрока из скрипта после посещения пиратской ЧД и выводе из скрипта (или смерти) всех засадных пиратов",
                        "else",
                        "{",
                        "    if(!GroupCount(PiratesGroup)) ShipOut(Player());",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 350,
                    "Pos.y": 630,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "//Если на систему внезапно напали, выгоняем всех из скрипта",
                        "if(StarBattle(PirateStar))",
                        "{",
                        "    AllShipOut();",
                        "    exit;",
                        "}",
                        "//Если ЧД закрылась, а игрока так и нет, выводим пиратов из скрипта",
                        "else if(BlackHoleId==-1)",
                        "{",
                        "    if(!HoleWasVisited)",
                        "    {",
                        "        ShipOut(CurShip);",
                        "        exit;",
                        "    }",
                        "}",
                        "//Как только игрок появится в системе, пираты незамедлительно его атакуют",
                        "else if(ShipInStar(Player(),PirateStar))",
                        "{",
                        "    OrderTakeOff(CurShip);",
                        "    RelationToRanger(CurShip,Player(),0);",
                        "    ShipSetBad(CurShip,Player());",
                        "    ChangeState('PiratesAttack');",
                        "    exit;",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 350,
                    "Pos.y": 680,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "//Если пират огрёб от игрока или чего-то ещё",
                        "if(HullDamage(CurShip)>=66)ShipOut(CurShip);",
                        "//Если игрок покинул систему (в том числе в гробу)",
                        "else if(!ShipInStar(Player(),PirateStar))ShipOut(CurShip);"
                    ]
                }
            ],
            "Planets": 
            [
                {
                    "Type": "TPlanet",
                    "Name": "PlayerPlanet",
                    "Pos.x": 240,
                    "Pos.y": 540,
                    "Parent": -1,
                    "#": 0,
                    "Race": 62,
                    "Owner": 63,
                    "Economy": 14,
                    "Goverment": 62,
                    "RangeMin": 0,
                    "RangeMax": 100,
                    "Dialog": -1
                },
                {
                    "Type": "TPlanet",
                    "Name": "PiratePlanet",
                    "Pos.x": 350,
                    "Pos.y": 540,
                    "Parent": -1,
                    "#": 0,
                    "Race": 62,
                    "Owner": 257,
                    "Economy": 14,
                    "Goverment": 62,
                    "RangeMin": 0,
                    "RangeMax": 100,
                    "Dialog": -1
                }
            ],
            "Ships": 
            [
                {
                    "Type": "TStarShip",
                    "Name": "",
                    "Pos.x": 240,
                    "Pos.y": 480,
                    "Parent": -1,
                    "#": 0,
                    "Count": 1,
                    "Owner": 62,
                    "Ship.Type": 126,
                    "Player": true,
                    "SpeedMin": 0,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                }
            ],
            "Stars": 
            [
                {
                    "Type": "TStar",
                    "Name": "PlayerStar",
                    "Pos.x": 240,
                    "Pos.y": 510,
                    "Parent": -1,
                    "#": 0,
                    "Constellation": 0,
                    "Priority": 0,
                    "NoKling": true,
                    "NoComeKling": false
                },
                {
                    "Type": "TStar",
                    "Name": "PirateStar",
                    "Pos.x": 350,
                    "Pos.y": 510,
                    "Parent": -1,
                    "#": 0,
                    "Constellation": 0,
                    "Priority": 1,
                    "NoKling": false,
                    "NoComeKling": false
                }
            ],
            "Statements": 
            [
                {
                    "Type": "Tif",
                    "Name": "",
                    "Pos.x": 380,
                    "Pos.y": 480,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "HoleWasVisited>-1"
                    ]
                }
            ],
            "States": 
            [
                {
                    "Type": "TState",
                    "Name": "PlayerState",
                    "Pos.x": 240,
                    "Pos.y": 600,
                    "Parent": -1,
                    "#": 0,
                    "Move": 0,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "PiratesState",
                    "Pos.x": 350,
                    "Pos.y": 600,
                    "Parent": -1,
                    "#": 0,
                    "Move": 0,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "PiratesAttack",
                    "Pos.x": 350,
                    "Pos.y": 650,
                    "Parent": -1,
                    "#": 0,
                    "Move": 2,
                    "MoveObj": 8,
                    "Attack.Count": 1,
                    "Attack.Items": 
                    [
                        {
                            "Target.0": 8
                        }
                    ],
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 1,
                    "EUnique": "",
                    "EMsg": ""
                }
            ],
            "Variables": 
            [
                {
                    "Type": "TVar",
                    "Name": "GPirateHoleDate",
                    "Pos.x": 290,
                    "Pos.y": 460,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "1460",
                    "Global": true
                },
                {
                    "Type": "TVar",
                    "Name": "i",
                    "Pos.x": 460,
                    "Pos.y": 510,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tint1",
                    "Pos.x": 460,
                    "Pos.y": 530,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "cur_ship",
                    "Pos.x": 520,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tdwd1",
                    "Pos.x": 520,
                    "Pos.y": 510,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tstr1",
                    "Pos.x": 600,
                    "Pos.y": 510,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Str",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "HoleWasVisited",
                    "Pos.x": 460,
                    "Pos.y": 610,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "-1",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "PiratesSpawned",
                    "Pos.x": 460,
                    "Pos.y": 630,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "BlackHoleId",
                    "Pos.x": 570,
                    "Pos.y": 610,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tdwd2",
                    "Pos.x": 520,
                    "Pos.y": 530,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "check",
                    "Pos.x": 460,
                    "Pos.y": 570,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tdwd3",
                    "Pos.x": 520,
                    "Pos.y": 550,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Dword",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tint2",
                    "Pos.x": 460,
                    "Pos.y": 550,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tempArr",
                    "Pos.x": 460,
                    "Pos.y": 660,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Array",
                    "Init": "",
                    "Global": false
                }
            ]
        }
    ],
    "Visual.Links": 
    [
        {
            "Type": "TGraphLink",
            "Begin": 4,
            "End": 3,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 6,
            "End": 5,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 7,
            "End": 3,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TStarLink",
            "Begin": 5,
            "End": 3,
            "Nom": 0,
            "Arrow": false,
            "DistMin": 0,
            "DistMax": 149,
            "Hole": false
        },
        {
            "Type": "TGraphLink",
            "Begin": 9,
            "End": 6,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 8,
            "End": 4,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 8,
            "End": 12,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 9,
            "End": 13,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 14,
            "End": 16,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 13,
            "End": 15,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 23,
            "End": 11,
            "Nom": 0,
            "Arrow": true
        }
    ],
    "BlockPar.EC.Total.Strings": 0,
    "BlockPar.EC": 
    [
      
    ]
}