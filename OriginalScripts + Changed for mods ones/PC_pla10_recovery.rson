{
    "FileID": 573785173,
    "FileVersion": 8,
    "ViewPos.x": -317,
    "ViewPos.y": -264,
    "ScriptName": "PC_pla10",
    "ScriptFileOut": "D:\\PC_pla10.scr",
    "ScriptTextOut": "D:\\PC_pla10.txt",
    "LangDatIn": "",
    "LangDatOut": "",
    "MainDatIn": "",
    "MainDatOut": "",
    "CacheDatIn": "",
    "CacheDatOut": "",
    "ExportLangTxt": false,
    "ExportLangDat": false,
    "Visual.Objects": 
    [
        {
            "DialogAnswers": 
            [
                {
                    "Type": "TDialogAnswer",
                    "Name": "planet",
                    "Pos.x": 20,
                    "Pos.y": 30,
                    "Parent": 40,
                    "#": 43,
                    "Msg": "Я согласен.",
                    "AMsg.Num": "0"
                },
                {
                    "Type": "TDialogAnswer",
                    "Name": "planet",
                    "Pos.x": 0,
                    "Pos.y": 30,
                    "Parent": 41,
                    "#": 44,
                    "Msg": "Рад был помочь.",
                    "AMsg.Num": "1"
                },
                {
                    "Type": "TDialogAnswer",
                    "Name": "planet",
                    "Pos.x": -40,
                    "Pos.y": 30,
                    "Parent": 40,
                    "#": 45,
                    "Msg": "Я отказываюсь.",
                    "AMsg.Num": "2"
                },
                {
                    "Type": "TDialogAnswer",
                    "Name": "planet",
                    "Pos.x": 0,
                    "Pos.y": 30,
                    "Parent": 42,
                    "#": 46,
                    "Msg": "Понятно...",
                    "AMsg.Num": "3"
                }
            ],
            "DialogMessages": 
            [
                {
                    "Type": "TDialogMsg",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": 30,
                    "Parent": 47,
                    "#": 40,
                    "Msg": "<ShipName(Player())>, вы никогда не представляли себя в роли взбесившегося вояки? Согласен, амплуа необычное, но зато какой сюжет! Впрочем, ближе к делу. У меня есть шикарная возможность подзаработать, а у вас - быть главным действующим лицом на сцене. Всего-то нужно отправиться в систему в <Name(GalaxyStar(quest_star-1))>, и, используя новейшее маскировочное устройство, которое разработали мои люди, навести там шороху под видом военного из <Name(GalaxyStar(quest_star2-1))>! Скажем, достаточно будет уничтожить <req_num> мирных кораблей. Да, жертвы будут, но это еще далеко не все! На этом конфликте мы сможем получить кучу кредитов, потому что запуганные системы примутся немедленно закупать оружие, которое, о чудо, производим мы! Посему, возьмите партию оружия со склада (можете сейчас, можете потом, после мероприятий) и продайте ее в системе <Name(GalaxyStar(quest_star-1))>. И не забудьте, что мы ограничены по времени до <GameDateTxtByTurn(quest_deadline)>, ибо конкуренты не дремлют и пытаются наладить собственное производство оружия.",
                    "DMsg.Num": "0"
                },
                {
                    "Type": "TDialogMsg",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": 30,
                    "Parent": 48,
                    "#": 41,
                    "Msg": "Отличная работа, <ShipName(Player())>! Теперь мы богаты, а эти слабаки еще долго останутся зависимыми от наших поставок вооружений. С вами, пиратами, приятно иметь дело! Отныне и впредь можете рассчитывать на мою поддержку. Конечно, в рамках разумного...\r\nСвободны.",
                    "DMsg.Num": "1"
                },
                {
                    "Type": "TDialogMsg",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": 30,
                    "Parent": 39,
                    "#": 42,
                    "Msg": "Понимаете, <ShipName(Player())>, пока наших соседей оккупировали пираты и доминаторы, у меня слишком мало возможностей для реализации своих задумок. Верните коалиции побольше систем в округе, тогда можно будет и обсудить мои личные нужды.",
                    "DMsg.Num": "2"
                }
            ],
            "Dialogs": 
            [
                {
                    "Type": "TDialog",
                    "Name": "DialogPlanet",
                    "Pos.x": -150,
                    "Pos.y": 70,
                    "Parent": -1,
                    "#": 37
                },
                {
                    "Type": "TDialog",
                    "Name": "DialogComplete",
                    "Pos.x": -130,
                    "Pos.y": 300,
                    "Parent": -1,
                    "#": 38
                },
                {
                    "Type": "TDialog",
                    "Name": "DialogPlanetCancel",
                    "Pos.x": 160,
                    "Pos.y": 110,
                    "Parent": -1,
                    "#": 39
                }
            ],
            "Groups": 
            [
                {
                    "Type": "TGroup",
                    "Name": "GroupNew",
                    "Pos.x": 0,
                    "Pos.y": 230,
                    "Parent": -1,
                    "#": 32,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 1,
                    "CntShipMax": 1,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": true,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                }
            ],
            "Operations": 
            [
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": 490,
                    "Parent": -1,
                    "#": 33,
                    "Code.Type": "Init",
                    "Code": 
                    [
                        "counter=1;",
                        "while (counter<ArrayDim(array_script_names)){",
                        "if (array_chosen_planets[counter]==Id(PlanetNew)){script_num=counter;}",
                        "counter=counter+1;}",
                        "locations=newarray(1);"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 60,
                    "Pos.y": 490,
                    "Parent": -1,
                    "#": 34,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "if (!quest_started && ShipIsTakeoff(Player())){",
                        "ShipOut(Player());}",
                        "if(quest_state==1) {",
                        "  if(count_sorted<(ArrayDim(ship_id_list)-1)) {",
                        "    sorted_items=0;",
                        "    while(sorted_items<3*ArrayDim(relation_list)) {",
                        "      if(count_sorted<(ArrayDim(ship_id_list)-1)) {",
                        "        ArraySortPartial(count_sorted+1,ship_id_list,relation_list);",
                        "        sorted_items=sorted_items+ArrayDim(relation_list)-count_sorted;",
                        "        count_sorted=count_sorted+1;",
                        "      }",
                        "      if(count_sorted>=(ArrayDim(ship_id_list)-1)) {",
                        "        sorted_items=3*ArrayDim(relation_list);",
                        "      }",
                        "    }",
                        "  }",
                        "}",
                        "if(quest_started) {",
                        "  if(quest_state==0) {",
                        "    if(Id(ShipStar(Player()))==quest_star) {",
                        "      relation_list=newarray(1);",
                        "      ship_id_list=newarray(1);",
                        "      planet_relation_list=newarray(1);",
                        "      counter=0;",
                        "      while (counter<GalaxyStars()){",
                        "      temp_star=GalaxyStar(counter);",
                        "      counter2=0;",
                        "      while (counter2<StarShips(temp_star)){",
                        "      temp_ship=StarShips(temp_star,counter2);",
                        "      if (ShipOwner(temp_ship)<5){",
                        "      if (ShipTypeN(temp_ship)<4){",
                        "      ArrayAdd(ship_id_list,Id(temp_ship));",
                        "      ArrayAdd(relation_list,RelationToRanger(temp_ship,Player()));",
                        "      }}",
                        "      counter2=counter2+1;}",
                        "      counter=counter+1;}",
                        "      counter=0;",
                        "      while (counter<GalaxyStars()){",
                        "      temp_star=GalaxyStar(counter);",
                        "      counter2=0;",
                        "      while (counter2<StarPlanets(temp_star)){",
                        "      temp_planet=StarPlanets(temp_star,counter2);",
                        "      if (PlanetOwner(temp_planet)!=6){",
                        "      ArrayAdd(planet_relation_list,RelationToRanger(temp_planet,Player()));",
                        "      }",
                        "      counter2=counter2+1;}",
                        "      counter=counter+1;}",
                        "      ArrayDelete(relation_list,0);",
                        "      ArrayDelete(ship_id_list,0);",
                        "      Ether(0,'8AE1A661-EEE8-4F4C-864F-05453B8AA3E6',\"Активирован камуфляж военного корабля.<br>Внимание! Камуфляж не предназначен для работы в плотных слоях атмосферы и в гиперпространстве, и при посадке на планету или перемещении в другую систему будет потерян.\");",
                        "      quest_state=1;",
                        "      if(warrior_race==0) {",
                        "        Chameleon(Player(),'Ship.Maloc.Warrior');",
                        "      }",
                        "      if(warrior_race==1) {",
                        "        Chameleon(Player(),'Ship.Peleng.Warrior');",
                        "      }",
                        "      if(warrior_race==2) {",
                        "        Chameleon(Player(),'Ship.People.Warrior');",
                        "      }",
                        "      if(warrior_race==3) {",
                        "        Chameleon(Player(),'Ship.Fei.Warrior');",
                        "      }",
                        "      if(warrior_race==4) {",
                        "        Chameleon(Player(),'Ship.Gaal.Warrior');",
                        "      }",
                        "    }",
                        "  }",
                        "  if((quest_state==1) && !quest_failed) {",
                        "    if(Id(ShipStar(Player()))==quest_star) {",
                        "      if(last_check<CurTurn()) {",
                        "        last_check=CurTurn();",
                        "        counter=GalaxyEvents()-1;",
                        "        while (counter>=0){",
                        "        if (GalaxyEventDate(counter)==CurTurn()){",
                        "        extort_flag=0;",
                        "        if (GalaxyEventType(counter)=='PlayerExtortsMoney'){extort_flag=1;}",
                        "        if (GalaxyEventType(counter)=='PlayerExtortsGoods'){extort_flag=1;}",
                        "        if (GalaxyEventType(counter)=='PlayerAcceptsMoneyForTruce'){extort_flag=1;}",
                        "        if (extort_flag){",
                        "        if (GalaxyEventData(counter,1)==t_Transport){",
                        "        count_extorted=count_extorted+1;}}",
                        "        if (GalaxyEventType(counter)=='PlayerKillsShip'){",
                        "        if (GalaxyEventData(counter,0)==t_Transport){",
                        "        count_killed=count_killed+1;}}",
                        "        if (GalaxyEventType(counter)=='PlayerCompanionKillsShip'){",
                        "        if (GalaxyEventData(counter,0)==t_Transport){",
                        "        count_killed=count_killed+1;}}",
                        "        }",
                        "        if (GalaxyEventDate(counter)<CurTurn()){counter=0;}",
                        "        counter=counter-1;}",
                        "        if((count_extorted+count_killed)>=req_num) {",
                        "          if(!message_time_to_sell) {",
                        "            message_time_to_sell=1;",
                        "            counter=0;",
                        "            while (counter<StarPlanets(GalaxyStar(quest_star-1))){",
                        "            if (PlanetOwner(StarPlanets(GalaxyStar(quest_star-1),counter))!=6){",
                        "            DecayGoods(StarPlanets(GalaxyStar(quest_star-1),counter),t_Arms);}",
                        "            counter=counter+1;}",
                        "            Ether(0,'33EAA0A0-42C9-4128-854F-DAF170EFD541',\"Жители системы достаточно напуганы, пора продавать оружие!\");",
                        "          }",
                        "        }",
                        "      }",
                        "      if(GetShipPlanet(Player())) {",
                        "        if((count_extorted+count_killed)>=req_num) {",
                        "          quest_state=2;",
                        "          ShipKillFactionInCurSystem(Player(),0,0);",
                        "          temp_star=ShipStar(Player());",
                        "          counter=0;",
                        "          while(counter<StarShips(temp_star)){",
                        "          temp_ship=StarShips(temp_star,counter);",
                        "          if ((ShipGetBad(temp_ship)==Player()) || (ShipGetBad(Player())==temp_ship)) TruceBetweenShips(Player(),temp_ship);",
                        "          counter=counter+1;",
                        "          }",
                        "          while (count_sorted<(ArrayDim(ship_id_list)-1)){",
                        "          ArraySortPartial(count_sorted+1,ship_id_list,relation_list);",
                        "          count_sorted=count_sorted+1;}",
                        "          counter=0;",
                        "          while (counter<GalaxyStars()){",
                        "          temp_star=GalaxyStar(counter);",
                        "          counter2=0;",
                        "          while (counter2<StarShips(temp_star)){",
                        "          temp_ship=StarShips(temp_star,counter2);",
                        "          counter3=ArrayFindInSorted(ship_id_list,Id(temp_ship));",
                        "          if (counter3>-1){",
                        "          RelationToRanger(temp_ship,Player(),relation_list[counter3]);",
                        "          if (ArrayDim(ship_id_list)>1){",
                        "          ArrayDelete(ship_id_list,counter3);",
                        "          ArrayDelete(relation_list,counter3);}",
                        "          }",
                        "          counter2=counter2+1;}",
                        "          counter=counter+1;}",
                        "          counter=0;",
                        "          RelationToRanger(NearCivilPlanet(Player()),Player());",
                        "          while (counter<GalaxyStars()){",
                        "          temp_star=GalaxyStar(counter);",
                        "          counter2=0;",
                        "          while (counter2<StarPlanets(temp_star)){",
                        "          temp_planet=StarPlanets(temp_star,counter2);",
                        "          if (PlanetOwner(temp_planet)!=6){",
                        "          RelationToRanger(temp_planet,Player(),planet_relation_list[1]);",
                        "          ArrayDelete(planet_relation_list,1);}",
                        "          counter2=counter2+1;}",
                        "          counter=counter+1;}",
                        "          if(GetShipPlanet(Player())) {",
                        "            while (IsFilm()){1;}",
                        "            Chameleon(Player());",
                        "            Ether(0,'D0F4762E-C200-4981-8792-5F87A7A71116',\"Система камуфляжа деактивирована! Окружающие более не будут принимать вас за военного из системы <Name(GalaxyStar(quest_star2-1))>.\");",
                        "          }",
                        "          if(Id(ShipStar(Player()))!=quest_star) {",
                        "            Chameleon(Player());",
                        "            Ether(0,'D0F4762E-C200-4981-8792-5F87A7A71116',\"Система камуфляжа деактивирована! Окружающие более не будут принимать вас за военного из системы <Name(GalaxyStar(quest_star2-1))>.\");",
                        "          }",
                        "        }",
                        "        if((count_extorted+count_killed)<req_num) {",
                        "          array_quest_statuses[script_num]=3;",
                        "          quest_failed=1;",
                        "          ShipOut(Player());",
                        "          Ether(5,'42121728-2D51-4E1B-BF62-9C09CD5FCD05',\"Задание провалено. Теперь на поддержку правителя планеты <Name(PlanetNew)> можно не рассчитывать.\");",
                        "          ShipKillFactionInCurSystem(Player(),0,0);",
                        "          temp_star=ShipStar(Player());",
                        "          counter=0;",
                        "          while(counter<StarShips(temp_star)){",
                        "          temp_ship=StarShips(temp_star,counter);",
                        "          if ((ShipGetBad(temp_ship)==Player()) || (ShipGetBad(Player())==temp_ship)) TruceBetweenShips(Player(),temp_ship);",
                        "          counter=counter+1;",
                        "          }",
                        "          while (count_sorted<(ArrayDim(ship_id_list)-1)){",
                        "          ArraySortPartial(count_sorted+1,ship_id_list,relation_list);",
                        "          count_sorted=count_sorted+1;}",
                        "          counter=0;",
                        "          while (counter<GalaxyStars()){",
                        "          temp_star=GalaxyStar(counter);",
                        "          counter2=0;",
                        "          while (counter2<StarShips(temp_star)){",
                        "          temp_ship=StarShips(temp_star,counter2);",
                        "          counter3=ArrayFindInSorted(ship_id_list,Id(temp_ship));",
                        "          if (counter3>-1){",
                        "          RelationToRanger(temp_ship,Player(),relation_list[counter3]);",
                        "          if (ArrayDim(ship_id_list)>1){",
                        "          ArrayDelete(ship_id_list,counter3);",
                        "          ArrayDelete(relation_list,counter3);}",
                        "          }",
                        "          counter2=counter2+1;}",
                        "          counter=counter+1;}",
                        "          counter=0;",
                        "          RelationToRanger(NearCivilPlanet(Player()),Player());",
                        "          while (counter<GalaxyStars()){",
                        "          temp_star=GalaxyStar(counter);",
                        "          counter2=0;",
                        "          while (counter2<StarPlanets(temp_star)){",
                        "          temp_planet=StarPlanets(temp_star,counter2);",
                        "          if (PlanetOwner(temp_planet)!=6){",
                        "          RelationToRanger(temp_planet,Player(),planet_relation_list[1]);",
                        "          ArrayDelete(planet_relation_list,1);}",
                        "          counter2=counter2+1;}",
                        "          counter=counter+1;}",
                        "          if(GetShipPlanet(Player())) {",
                        "            while (IsFilm()){1;}",
                        "            Chameleon(Player());",
                        "            Ether(0,'D0F4762E-C200-4981-8792-5F87A7A71116',\"Система камуфляжа деактивирована! Окружающие более не будут принимать вас за военного из системы <Name(GalaxyStar(quest_star2-1))>.\");",
                        "          }",
                        "          if(Id(ShipStar(Player()))!=quest_star) {",
                        "            Chameleon(Player());",
                        "            Ether(0,'D0F4762E-C200-4981-8792-5F87A7A71116',\"Система камуфляжа деактивирована! Окружающие более не будут принимать вас за военного из системы <Name(GalaxyStar(quest_star2-1))>.\");",
                        "          }",
                        "        }",
                        "      }",
                        "    }",
                        "    if(Id(ShipStar(Player()))!=quest_star) {",
                        "      if((count_extorted+count_killed)>=req_num) {",
                        "        quest_state=2;",
                        "        ShipKillFactionInCurSystem(Player(),0,0);",
                        "        temp_star=ShipStar(Player());",
                        "        counter=0;",
                        "        while(counter<StarShips(temp_star)){",
                        "        temp_ship=StarShips(temp_star,counter);",
                        "        if ((ShipGetBad(temp_ship)==Player()) || (ShipGetBad(Player())==temp_ship)) TruceBetweenShips(Player(),temp_ship);",
                        "        counter=counter+1;",
                        "        }",
                        "        while (count_sorted<(ArrayDim(ship_id_list)-1)){",
                        "        ArraySortPartial(count_sorted+1,ship_id_list,relation_list);",
                        "        count_sorted=count_sorted+1;}",
                        "        counter=0;",
                        "        while (counter<GalaxyStars()){",
                        "        temp_star=GalaxyStar(counter);",
                        "        counter2=0;",
                        "        while (counter2<StarShips(temp_star)){",
                        "        temp_ship=StarShips(temp_star,counter2);",
                        "        counter3=ArrayFindInSorted(ship_id_list,Id(temp_ship));",
                        "        if (counter3>-1){",
                        "        RelationToRanger(temp_ship,Player(),relation_list[counter3]);",
                        "        if (ArrayDim(ship_id_list)>1){",
                        "        ArrayDelete(ship_id_list,counter3);",
                        "        ArrayDelete(relation_list,counter3);}",
                        "        }",
                        "        counter2=counter2+1;}",
                        "        counter=counter+1;}",
                        "        counter=0;",
                        "        RelationToRanger(NearCivilPlanet(Player()),Player());",
                        "        while (counter<GalaxyStars()){",
                        "        temp_star=GalaxyStar(counter);",
                        "        counter2=0;",
                        "        while (counter2<StarPlanets(temp_star)){",
                        "        temp_planet=StarPlanets(temp_star,counter2);",
                        "        if (PlanetOwner(temp_planet)!=6){",
                        "        RelationToRanger(temp_planet,Player(),planet_relation_list[1]);",
                        "        ArrayDelete(planet_relation_list,1);}",
                        "        counter2=counter2+1;}",
                        "        counter=counter+1;}",
                        "        if(GetShipPlanet(Player())) {",
                        "          while (IsFilm()){1;}",
                        "          Chameleon(Player());",
                        "          Ether(0,'D0F4762E-C200-4981-8792-5F87A7A71116',\"Система камуфляжа деактивирована! Окружающие более не будут принимать вас за военного из системы <Name(GalaxyStar(quest_star2-1))>.\");",
                        "        }",
                        "        if(Id(ShipStar(Player()))!=quest_star) {",
                        "          Chameleon(Player());",
                        "          Ether(0,'D0F4762E-C200-4981-8792-5F87A7A71116',\"Система камуфляжа деактивирована! Окружающие более не будут принимать вас за военного из системы <Name(GalaxyStar(quest_star2-1))>.\");",
                        "        }",
                        "      }",
                        "      if((count_extorted+count_killed)<req_num) {",
                        "        array_quest_statuses[script_num]=3;",
                        "        quest_failed=1;",
                        "        ShipOut(Player());",
                        "        Ether(5,'42121728-2D51-4E1B-BF62-9C09CD5FCD05',\"Задание провалено. Теперь на поддержку правителя планеты <Name(PlanetNew)> можно не рассчитывать.\");",
                        "        ShipKillFactionInCurSystem(Player(),0,0);",
                        "        temp_star=ShipStar(Player());",
                        "        counter=0;",
                        "        while(counter<StarShips(temp_star)){",
                        "        temp_ship=StarShips(temp_star,counter);",
                        "        if ((ShipGetBad(temp_ship)==Player()) || (ShipGetBad(Player())==temp_ship)) TruceBetweenShips(Player(),temp_ship);",
                        "        counter=counter+1;",
                        "        }",
                        "        while (count_sorted<(ArrayDim(ship_id_list)-1)){",
                        "        ArraySortPartial(count_sorted+1,ship_id_list,relation_list);",
                        "        count_sorted=count_sorted+1;}",
                        "        counter=0;",
                        "        while (counter<GalaxyStars()){",
                        "        temp_star=GalaxyStar(counter);",
                        "        counter2=0;",
                        "        while (counter2<StarShips(temp_star)){",
                        "        temp_ship=StarShips(temp_star,counter2);",
                        "        counter3=ArrayFindInSorted(ship_id_list,Id(temp_ship));",
                        "        if (counter3>-1){",
                        "        RelationToRanger(temp_ship,Player(),relation_list[counter3]);",
                        "        if (ArrayDim(ship_id_list)>1){",
                        "        ArrayDelete(ship_id_list,counter3);",
                        "        ArrayDelete(relation_list,counter3);}",
                        "        }",
                        "        counter2=counter2+1;}",
                        "        counter=counter+1;}",
                        "        counter=0;",
                        "        RelationToRanger(NearCivilPlanet(Player()),Player());",
                        "        while (counter<GalaxyStars()){",
                        "        temp_star=GalaxyStar(counter);",
                        "        counter2=0;",
                        "        while (counter2<StarPlanets(temp_star)){",
                        "        temp_planet=StarPlanets(temp_star,counter2);",
                        "        if (PlanetOwner(temp_planet)!=6){",
                        "        RelationToRanger(temp_planet,Player(),planet_relation_list[1]);",
                        "        ArrayDelete(planet_relation_list,1);}",
                        "        counter2=counter2+1;}",
                        "        counter=counter+1;}",
                        "        if(GetShipPlanet(Player())) {",
                        "          while (IsFilm()){1;}",
                        "          Chameleon(Player());",
                        "          Ether(0,'D0F4762E-C200-4981-8792-5F87A7A71116',\"Система камуфляжа деактивирована! Окружающие более не будут принимать вас за военного из системы <Name(GalaxyStar(quest_star2-1))>.\");",
                        "        }",
                        "        if(Id(ShipStar(Player()))!=quest_star) {",
                        "          Chameleon(Player());",
                        "          Ether(0,'D0F4762E-C200-4981-8792-5F87A7A71116',\"Система камуфляжа деактивирована! Окружающие более не будут принимать вас за военного из системы <Name(GalaxyStar(quest_star2-1))>.\");",
                        "        }",
                        "      }",
                        "    }",
                        "  }",
                        "  if((quest_state==2) && (last_check<CurTurn())) {",
                        "    counter=0;",
                        "    while (counter<StarPlanets(GalaxyStar(quest_star-1))){",
                        "    if (PlanetOwner(StarPlanets(GalaxyStar(quest_star-1),counter))!=6){",
                        "    PlanetSetGoods(StarPlanets(GalaxyStar(quest_star-1),counter),t_Arms,0);}",
                        "    counter=counter+1;}",
                        "    last_check=CurTurn();",
                        "    counter=GalaxyEvents()-1;",
                        "    while (counter>=0){",
                        "    if (GalaxyEventDate(counter)==CurTurn()){",
                        "    if (GalaxyEventType(counter)=='PlayerSellsGoodsToPlanet'){",
                        "    if (GalaxyEventData(counter,0)==t_Arms){",
                        "    if (Id(PlanetToStar(IdToPlanet(GalaxyEventData(counter,3))))==quest_star){",
                        "    arms_sold=arms_sold+GalaxyEventData(counter,1);}}}",
                        "    if (GalaxyEventType(counter)=='PlayerBuysGoodsFromPlanet'){",
                        "    if (GalaxyEventData(counter,0)==t_Arms){",
                        "    if (Id(PlanetToStar(IdToPlanet(GalaxyEventData(counter,3))))==quest_star){",
                        "    arms_sold=arms_sold-GalaxyEventData(counter,1);}}}",
                        "    }",
                        "    if (GalaxyEventDate(counter)<CurTurn()){counter=0;}",
                        "    counter=counter-1;}",
                        "    if(arms_sold>=arms_quantity) {",
                        "      quest_state=3;",
                        "      Ether(0,'F33D16D5-0CA3-47E4-A079-45B7EFC56ECA',\"Задание выполнено, можно возвращаться к заказчику на планету <Name(PlanetNew)> системы <Name(StarNew)>.\");",
                        "    }",
                        "  }",
                        "  if((quest_state<3) && !quest_failed && (CurTurn()>quest_deadline)) {",
                        "    array_quest_statuses[script_num]=3;",
                        "    quest_failed=1;",
                        "    Ether(5,'42121728-2D51-4E1B-BF62-9C09CD5FCD05',\"Время вышло, задание провалено. Теперь на поддержку правителя планеты <Name(PlanetNew)> можно не рассчитывать.\");",
                        "    if(quest_state!=1) {",
                        "      ShipOut(Player());",
                        "    }",
                        "    if(quest_state==1) {",
                        "      quest_state=4;",
                        "    }",
                        "  }",
                        "  if(quest_state==4) {",
                        "    if(GetShipPlanet(Player()) || (Id(ShipStar(Player()))!=quest_star)) {",
                        "      ShipOut(Player());",
                        "      quest_state=5;",
                        "      ShipKillFactionInCurSystem(Player(),0,0);",
                        "      temp_star=ShipStar(Player());",
                        "      counter=0;",
                        "      while(counter<StarShips(temp_star)){",
                        "      temp_ship=StarShips(temp_star,counter);",
                        "      if ((ShipGetBad(temp_ship)==Player()) || (ShipGetBad(Player())==temp_ship)) TruceBetweenShips(Player(),temp_ship);",
                        "      counter=counter+1;",
                        "      }",
                        "      while (count_sorted<(ArrayDim(ship_id_list)-1)){",
                        "      ArraySortPartial(count_sorted+1,ship_id_list,relation_list);",
                        "      count_sorted=count_sorted+1;}",
                        "      counter=0;",
                        "      while (counter<GalaxyStars()){",
                        "      temp_star=GalaxyStar(counter);",
                        "      counter2=0;",
                        "      while (counter2<StarShips(temp_star)){",
                        "      temp_ship=StarShips(temp_star,counter2);",
                        "      counter3=ArrayFindInSorted(ship_id_list,Id(temp_ship));",
                        "      if (counter3>-1){",
                        "      RelationToRanger(temp_ship,Player(),relation_list[counter3]);",
                        "      if (ArrayDim(ship_id_list)>1){",
                        "      ArrayDelete(ship_id_list,counter3);",
                        "      ArrayDelete(relation_list,counter3);}",
                        "      }",
                        "      counter2=counter2+1;}",
                        "      counter=counter+1;}",
                        "      counter=0;",
                        "      RelationToRanger(NearCivilPlanet(Player()),Player());",
                        "      while (counter<GalaxyStars()){",
                        "      temp_star=GalaxyStar(counter);",
                        "      counter2=0;",
                        "      while (counter2<StarPlanets(temp_star)){",
                        "      temp_planet=StarPlanets(temp_star,counter2);",
                        "      if (PlanetOwner(temp_planet)!=6){",
                        "      RelationToRanger(temp_planet,Player(),planet_relation_list[1]);",
                        "      ArrayDelete(planet_relation_list,1);}",
                        "      counter2=counter2+1;}",
                        "      counter=counter+1;}",
                        "      if(GetShipPlanet(Player())) {",
                        "        while (IsFilm()){1;}",
                        "        Chameleon(Player());",
                        "        Ether(0,'D0F4762E-C200-4981-8792-5F87A7A71116',\"Система камуфляжа деактивирована! Окружающие более не будут принимать вас за военного из системы <Name(GalaxyStar(quest_star2-1))>.\");",
                        "      }",
                        "      if(Id(ShipStar(Player()))!=quest_star) {",
                        "        Chameleon(Player());",
                        "        Ether(0,'D0F4762E-C200-4981-8792-5F87A7A71116',\"Система камуфляжа деактивирована! Окружающие более не будут принимать вас за военного из системы <Name(GalaxyStar(quest_star2-1))>.\");",
                        "      }",
                        "    }",
                        "  }",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 120,
                    "Pos.y": 490,
                    "Parent": -1,
                    "#": 35,
                    "Code.Type": "DialogBegin",
                    "Code": 
                    [
                        "if(GetShipPlanet(Player())==PlanetNew) {",
                        "  if(!quest_started && request_dialog) {",
                        "    request_dialog=0;",
                        "    counter=BuildListOfQuestPossibleLocations(locations,StarNew,1,255);",
                        "    if(counter){counter=StarListToTransitPlanetList(locations,StarNew,StarNew,2*50);}",
                        "    if(!counter) {",
                        "      AddDialogOverride('DialogPlanetCancel',10);",
                        "    }",
                        "    if(counter) {",
                        "      quest_star=PlanetToStar(locations[0]);",
                        "      BuildListOfQuestPossibleLocations(locations,StarNew,1,255);",
                        "      counter=StarListToTransitPlanetList(locations,StarNew,quest_star,2*50);",
                        "      if(!counter) {",
                        "        AddDialogOverride('DialogPlanetCancel',10);",
                        "      }",
                        "      if(counter) {",
                        "        quest_star2=PlanetToStar(locations[0]);",
                        "        warrior_race=PlanetRace(FindPlanet(quest_star2,'NotNone',0,100));",
                        "        quest_star=Id(quest_star);",
                        "        quest_star2=Id(quest_star2);",
                        "        AddDialogOverride('DialogPlanet',10);",
                        "      }",
                        "    }",
                        "  }",
                        "  if((quest_state==3) && !quest_complete) {",
                        "    AddDialogOverride('DialogComplete',10);",
                        "  }",
                        "}"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": 30,
                    "Parent": 37,
                    "#": 47,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "quest_deadline=CurTurn()+120;"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": 30,
                    "Parent": 38,
                    "#": 48,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "array_quest_statuses[script_num]=2;",
                        "quest_complete=1;",
                        "khan_counter=khan_counter+1;",
                        "ShipOut(Player());",
                        "Ether(4,'42121728-2D51-4E1B-BF62-9C09CD5FCD05',\"Задание выполнено, поддержка правителя планеты <Name(PlanetNew)> получена!\");"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": 30,
                    "Parent": 43,
                    "#": 49,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "AddItemToStorage(PlanetNew,CreateGoods(t_Arms,arms_quantity));",
                        "array_quest_statuses[script_num]=1;",
                        "quest_started=1;",
                        "Ether(3,'42121728-2D51-4E1B-BF62-9C09CD5FCD05',\"Особое задание правителя планеты <Name(PlanetNew)> системы <Name(StarNew)><br><br>Под видом военного сбить или ограбить <req_num> мирных кораблей в системе <Name(GalaxyStar(quest_star-1))>, после чего продать на одной из планет системы партию оружия.<br><br>Крайний срок - <GameDateTxtByTurn(quest_deadline)>.\");"
                    ]
                }
            ],
            "Planets": 
            [
                {
                    "Type": "TPlanet",
                    "Name": "PlanetNew",
                    "Pos.x": 0,
                    "Pos.y": 185,
                    "Parent": -1,
                    "#": 31,
                    "Race": 62,
                    "Owner": 62,
                    "Economy": 14,
                    "Goverment": 62,
                    "RangeMin": 0,
                    "RangeMax": 100,
                    "Dialog": -1
                }
            ],
            "Ships": 
            [
                {
                    "Type": "TStarShip",
                    "Name": "",
                    "Pos.x": 0,
                    "Pos.y": 95,
                    "Parent": -1,
                    "#": 30,
                    "Count": 1,
                    "Owner": 62,
                    "Ship.Type": 126,
                    "Player": true,
                    "SpeedMin": 0,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                }
            ],
            "Stars": 
            [
                {
                    "Type": "TStar",
                    "Name": "StarNew",
                    "Pos.x": 0,
                    "Pos.y": 140,
                    "Parent": -1,
                    "#": 29,
                    "Constellation": 0,
                    "Priority": 0,
                    "NoKling": false,
                    "NoComeKling": false
                }
            ],
            "States": 
            [
                {
                    "Type": "TState",
                    "Name": "StateNew",
                    "Pos.x": 0,
                    "Pos.y": 270,
                    "Parent": -1,
                    "#": 36,
                    "Move": 0,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 0,
                    "EUnique": "",
                    "EMsg": ""
                }
            ],
            "Variables": 
            [
                {
                    "Type": "TVar",
                    "Name": "quest_deadline",
                    "Pos.x": 0,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "quest_started",
                    "Pos.x": 210,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 1,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "script_num",
                    "Pos.x": 390,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 2,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "count_extorted",
                    "Pos.x": 570,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 3,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "last_check",
                    "Pos.x": 780,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 4,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "extort_flag",
                    "Pos.x": 930,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 5,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "quest_complete",
                    "Pos.x": 1110,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 6,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "req_num",
                    "Pos.x": 1320,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 7,
                    "Var.Type": "Int",
                    "Init": "5",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "relation_list",
                    "Pos.x": 1440,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 8,
                    "Var.Type": "Unknown",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "ship_id_list",
                    "Pos.x": 1620,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 9,
                    "Var.Type": "Unknown",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "counter",
                    "Pos.x": 0,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 10,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "counter2",
                    "Pos.x": 120,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 11,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "temp_ship",
                    "Pos.x": 240,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 12,
                    "Var.Type": "Dword",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "temp_star",
                    "Pos.x": 390,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 13,
                    "Var.Type": "Dword",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "planet_relation_list",
                    "Pos.x": 540,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 14,
                    "Var.Type": "Unknown",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "temp_planet",
                    "Pos.x": 810,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 15,
                    "Var.Type": "Dword",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "count_sorted",
                    "Pos.x": 990,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 16,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "sorted_items",
                    "Pos.x": 1170,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 17,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "counter3",
                    "Pos.x": 1380,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 18,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "locations",
                    "Pos.x": 1500,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 19,
                    "Var.Type": "Unknown",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "quest_star",
                    "Pos.x": 1650,
                    "Pos.y": 25,
                    "Parent": -1,
                    "#": 20,
                    "Var.Type": "Dword",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "quest_star2",
                    "Pos.x": 0,
                    "Pos.y": 50,
                    "Parent": -1,
                    "#": 21,
                    "Var.Type": "Dword",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "quest_state",
                    "Pos.x": 150,
                    "Pos.y": 50,
                    "Parent": -1,
                    "#": 22,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "message_time_to_sell",
                    "Pos.x": 330,
                    "Pos.y": 50,
                    "Parent": -1,
                    "#": 23,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "count_killed",
                    "Pos.x": 630,
                    "Pos.y": 50,
                    "Parent": -1,
                    "#": 24,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "warrior_race",
                    "Pos.x": 810,
                    "Pos.y": 50,
                    "Parent": -1,
                    "#": 25,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "arms_sold",
                    "Pos.x": 990,
                    "Pos.y": 50,
                    "Parent": -1,
                    "#": 26,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "arms_quantity",
                    "Pos.x": 1140,
                    "Pos.y": 50,
                    "Parent": -1,
                    "#": 27,
                    "Var.Type": "Int",
                    "Init": "300",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "quest_failed",
                    "Pos.x": 1350,
                    "Pos.y": 50,
                    "Parent": -1,
                    "#": 28,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                }
            ]
        }
    ],
    "Visual.Links": 
    [
        {
            "Type": "TGraphLink",
            "Begin": 37,
            "End": 47,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 38,
            "End": 48,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 43,
            "End": 49,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 30,
            "End": 29,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 31,
            "End": 29,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 32,
            "End": 31,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 32,
            "End": 36,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 47,
            "End": 40,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 40,
            "End": 45,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 40,
            "End": 43,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 48,
            "End": 41,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 41,
            "End": 44,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 39,
            "End": 42,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 42,
            "End": 46,
            "Nom": 0,
            "Arrow": true
        }
    ],
    "Rect.Text": 
    [
        {
            "Type": "TGraphRectText",
            "Rect.Left": 632,
            "Rect.Top": -268,
            "Rect.Right": 1339,
            "Rect.Bottom": -80,
            "FStyle": 0,
            "FColor": 10710818,
            "BStyle": 0,
            "BColor": 14474460,
            "BSize": 1,
            "BCoef": "0.300000011920929",
            "AlignX": 0,
            "AlignY": 0,
            "AlignRect": false,
            "Text": "SCR Decompiling PC_pla10\r\n\r\nChangeState(...) -> Link to StateName\r\nDChange(...) -> Link to DMsg.Num\r\nDAdd(...) -> Link to AMsg.Num",
            "Color": 16777215,
            "Font": "Segoe UI",
            "FontSize": 10,
            "fsBold": true,
            "fsItalic": false,
            "fsUnderline": false
        }
    ],
    "BlockPar.EC.Total.Strings": 0,
    "BlockPar.EC": 
    [
      
    ]
}